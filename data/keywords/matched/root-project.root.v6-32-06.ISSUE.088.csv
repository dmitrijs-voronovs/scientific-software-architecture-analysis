id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/13039:1122,availability,consist,consists,1122,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1765,availability,operat,operating,1765,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:289,deployability,contain,containing,289,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:963,deployability,build,build,963,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:990,deployability,build,build,990,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1060,deployability,build,build,1060,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1688,deployability,version,version,1688,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1722,deployability,instal,install,1722,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1736,deployability,Build,Build,1736,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1688,integrability,version,version,1688,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:227,interoperability,coordinat,coordinates,227,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:752,interoperability,coordinat,coordinates,752,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:925,modifiability,deco,decompressing,925,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1688,modifiability,version,version,1688,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:0,performance,Error,Error,0,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:855,reliability,availab,available,855,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:0,safety,Error,Error,0,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:855,safety,avail,available,855,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1088,safety,test,test,1088,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1109,safety,test,test,1109,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:207,security,ident,identification,207,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:266,security,ident,identified,266,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:415,security,ident,identified,415,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:573,security,ident,identified,573,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:855,security,availab,available,855,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1088,testability,test,test,1088,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1109,testability,test,test,1109,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1823,testability,context,context,1823,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:0,usability,Error,Error,0,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:9,usability,navigat,navigation,9,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:628,usability,navigat,navigation,628,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:667,usability,behavi,behaviour,667,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:1122,usability,consist,consists,1122,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/pull/13040:85,deployability,contain,containing,85,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:307,deployability,UPDAT,UPDATE,307,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:454,deployability,contain,containing,454,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:268,integrability,sub,subclass,268,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:18,performance,disk,disk,18,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:198,performance,disk,disk,198,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:233,performance,memor,memory,233,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:307,safety,UPDAT,UPDATE,307,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:316,safety,Test,Tests,316,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:307,security,UPDAT,UPDATE,307,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:316,testability,Test,Tests,316,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:233,usability,memor,memory,233,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/pull/13040:439,usability,Custom,Custom,439,Enable reading on-disk std::array as RVec ; The most common way to deal with columns containing collections in an. RDataFrame execution is through RVec. The changes in this commit allow. reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec. RField subclass is implemented with this aim. UPDATE:. Tests are present for:. 1. `std::array`. 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness. 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13040
https://github.com/root-project/root/issues/13041:291,availability,operat,operation,291,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1531,availability,operat,operating,1531,"ult, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:331,deployability,version,versions,331,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:572,deployability,fail,fail,572,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1438,deployability,version,version,1438,"Fitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It als",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1481,deployability,instal,install,1481,"previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1502,deployability,build,build,1502,"call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1712,deployability,fail,fails,1712,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1773,deployability,configurat,configuration,1773,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1929,deployability,BUILD,BUILD,1929,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2444,deployability,fail,fails,2444,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2527,deployability,version,version,2527,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2373,energy efficiency,cpu,cpu,2373,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:331,integrability,version,versions,331,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:519,integrability,rout,routine,519,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1438,integrability,version,version,1438,"Fitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It als",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1773,integrability,configur,configuration,1773,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2527,integrability,version,version,2527,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1348,interoperability,platform,platforms,1348," form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2335,interoperability,share,shared,2335,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2419,interoperability,xml,xml,2419,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2583,interoperability,incompatib,incompatibility,2583,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:331,modifiability,version,versions,331,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1438,modifiability,version,version,1438,"Fitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It als",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1773,modifiability,configur,configuration,1773,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2527,modifiability,version,version,2527,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2373,performance,cpu,cpu,2373,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:397,reliability,doe,doesn,397,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:572,reliability,fail,fail,572,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1334,reliability,doe,does,1334,"ons too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1712,reliability,fail,fails,1712,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2444,reliability,fail,fails,2444,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:549,safety,test,tests,549,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:601,safety,test,test-stresshistogram,601,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:623,safety,test,test,623,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:841,safety,test,test-stresshistogram,841,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2177,safety,except,exceptions,2177,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1773,security,configur,configuration,1773,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:2359,security,ssl,ssl,2359,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:549,testability,test,tests,549,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:601,testability,test,test-stresshistogram,601,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:623,testability,test,test,623,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:841,testability,test,test-stresshistogram,841,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1630,testability,context,context,1630,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:654,usability,behavi,behaviour,654,"TVirtualFitter::GetFitter() unexpectedly returns NULL on macOS 12 and 13 with Xcode 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1258,usability,interact,interactively,1258,"er used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1495,usability,Custom,Custom,1495,"essful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13041:1911,usability,User,Users,1911,"What is the expected behaviour? After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce? This snippet (taken from the test-stresshistogram source),. ```. ROOT::DisableImplicitMT();. double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }. TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);. TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);. gaus->SetParameters(1,0,1);. h1->FillRandom(""gaus1d"",10000);. auto res = h1->Fit(gaus,""L0S"");. cout << TVirtualFitter::GetFitter() << endl;. ```. run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT? Custom build from source. ### Which operating system are you using? macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:. ```. $ root-config --cflags. -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include. $ root-config --features. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd. ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13041
https://github.com/root-project/root/issues/13042:861,availability,operat,operating,861,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:439,deployability,contain,container,439,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:792,deployability,version,version,792,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:825,deployability,instal,install,825,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:198,energy efficiency,core,core,198,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:524,energy efficiency,adapt,adaptor,524,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:715,energy efficiency,core,core,715,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:978,energy efficiency,core,core,978,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:0,integrability,Inject,Injecting,0,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:524,integrability,adapt,adaptor,524,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:565,integrability,inject,inject,565,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:792,integrability,version,version,792,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:524,interoperability,adapt,adaptor,524,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:524,modifiability,adapt,adaptor,524,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:792,modifiability,version,version,792,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:0,security,Inject,Injecting,0,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:565,security,inject,inject,565,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:920,testability,context,context,920,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:480,usability,behavi,behaviour,480,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:771,usability,guid,guidelines,771,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/issues/13042:1034,usability,guid,guidelines,1034,"Injecting class span inside the std namespace is asking for problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour? If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists! ### How to reproduce? https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT? irrelevant. ### Which operating system are you using? irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13042
https://github.com/root-project/root/pull/13044:2458,availability,error,errors,2458,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5061,availability,state,stateless,5061,"Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6765,availability,error,error,6765,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:48,deployability,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:153,deployability,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:372,deployability,updat,updates,372,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1081,deployability,patch,patches,1081," of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2488,deployability,build,buildArg,2488,"exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3505,deployability,observ,observables,3505,"05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3925,deployability,version,version,3925,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4155,deployability,manag,management,4155,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4241,deployability,build,buildLoopBegin,4241,"ut scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4667,deployability,depend,dependency,4667,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,deployability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,deployability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,deployability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5599,deployability,manag,management,5599," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5896,deployability,Compos,Composition,5896,"grals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6043,deployability,modul,modules,6043,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6055,deployability,modul,modules,6055,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6112,deployability,modul,modules,6112,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6313,deployability,observ,observables,6313,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6539,deployability,modul,modules,6539,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6653,deployability,build,building,6653,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3717,energy efficiency,Optim,Optimize,3717,"r. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interfa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4155,energy efficiency,manag,management,4155,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5599,energy efficiency,manag,management,5599," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1919,integrability,pub,public,1919,"m/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1933,integrability,interfac,interface,1933,"oot/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2326,integrability,pub,public,2326,"] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2686,integrability,Batch,BatchMode,2686,"] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3358,integrability,Batch,BatchMode,3358,"2a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3482,integrability,Batch,BatchMode,3482,":buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3925,integrability,version,version,3925,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4280,integrability,translat,translate,4280,"oops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evalua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4314,integrability,translat,translate,4314," [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4667,integrability,depend,dependency,4667,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4678,integrability,pub,public,4678,"e()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4714,integrability,interfac,interface,4714,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,integrability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,integrability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5061,integrability,state,stateless,5061,"Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,integrability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5450,integrability,interfac,interface,5450,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5734,integrability,interfac,interface,5734,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6705,integrability,wrap,wrapper,6705,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1933,interoperability,interfac,interface,1933,"oot/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3015,interoperability,Format,Format,3015,"AbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4085,interoperability,Format,Format,4085,"] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4280,interoperability,translat,translate,4280,"oops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evalua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4314,interoperability,translat,translate,4314," [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4714,interoperability,interfac,interface,4714,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,interoperability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,interoperability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,interoperability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5450,interoperability,interfac,interface,5450,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5482,interoperability,format,format,5482,"test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5734,interoperability,interfac,interface,5734,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6705,interoperability,wrapper,wrapper,6705,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1266,modifiability,exten,extended,1266,"uding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template sp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1933,modifiability,interfac,interface,1933,"oot/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2874,modifiability,variab,variable,2874,"e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Rem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3251,modifiability,scal,scalar,3251,"Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3258,modifiability,interm,intermediate,3258,"ate specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by rec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3340,modifiability,reu,reuse,3340,"e` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3476,modifiability,Reu,Reuse,3476,"Context::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3925,modifiability,version,version,3925,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4667,modifiability,depend,dependency,4667,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4714,modifiability,interfac,interface,4714,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,modifiability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,modifiability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,modifiability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5450,modifiability,interfac,interface,5450,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5734,modifiability,interfac,interface,5734,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5896,modifiability,Compos,Composition,5896,"grals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5913,modifiability,inherit,inheritance,5913,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6043,modifiability,modul,modules,6043,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6055,modifiability,modul,modules,6055,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6112,modifiability,modul,modules,6112,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6336,modifiability,paramet,parameter,6336,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6539,modifiability,modul,modules,6539,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:7062,modifiability,paramet,parameter,7062,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2458,performance,error,errors,2458,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2686,performance,Batch,BatchMode,2686,"] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3358,performance,Batch,BatchMode,3358,"2a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3482,performance,Batch,BatchMode,3482,":buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3717,performance,Optimiz,Optimize,3717,"r. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interfa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5592,performance,memor,memory,5592,"isibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6765,performance,error,error,6765,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,reliability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,reliability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,reliability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:48,safety,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:153,safety,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:372,safety,updat,updates,372,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1081,safety,patch,patches,1081," of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1492,safety,except,exceptions,1492,". https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1732,safety,test,test,1732,"ject/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2458,safety,error,errors,2458,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2527,safety,Avoid,Avoid,2527,"xisting objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2554,safety,test,testRooFuncWrapper,2554,"Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Impro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2833,safety,test,testRooFuncWrapper,2833,"ts in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4030,safety,test,testRooFuncWrapper,4030,") and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4155,safety,manag,management,4155,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4226,safety,Avoid,Avoid,4226,"bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4485,safety,test,test,4485,"Mode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-forma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4667,safety,depend,dependency,4667,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5008,safety,test,test,5008,"ent output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5490,safety,test,testRooDataHist,5490,"is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5547,safety,test,test,5547,"tion from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5599,safety,manag,management,5599," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5850,safety,test,tests,5850,"RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5864,safety,Test,TestStatistics,5864,"r differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6043,safety,modul,modules,6043,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6055,safety,modul,modules,6055,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6112,safety,modul,modules,6112,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6381,safety,Test,Test,6381,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6425,safety,test,testRooFuncWrapper,6425,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6539,safety,modul,modules,6539,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6765,safety,error,error,6765,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:48,security,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:153,security,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:372,security,updat,updates,372,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 22; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1081,security,patch,patches,1081," of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,security,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,security,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,security,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1732,testability,test,test,1732,"ject/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1827,testability,simul,simultaneous,1827,".com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2554,testability,test,testRooFuncWrapper,2554,"Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Impro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2833,testability,test,testRooFuncWrapper,2833,"ts in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3505,testability,observ,observables,3505,"05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4030,testability,test,testRooFuncWrapper,4030,") and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4485,testability,test,test,4485,"Mode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-forma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4667,testability,depend,dependency,4667,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4898,testability,integr,integrals,4898,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4969,testability,integr,integrals,4969,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4988,testability,mock,mock,4988,"wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5008,testability,test,test,5008,"ent output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5127,testability,integr,integration,5127,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5490,testability,test,testRooDataHist,5490,"is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5547,testability,test,test,5547,"tion from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5850,testability,test,tests,5850,"RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5864,testability,Test,TestStatistics,5864,"r differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6313,testability,observ,observables,6313,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6381,testability,Test,Test,6381,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6425,testability,test,testRooFuncWrapper,6425,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1152,usability,support,support,1152,"ches. 1. https://github.com/root-project/root/pull/12961. 2. https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1211,usability,support,support,1211,". https://github.com/root-project/root/pull/12934. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1258,usability,Support,Support,1258,"34. Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials. 3. https://github.com/root-project/root/pull/12998. Only the first commit that is not related to AD. 4. https://github.com/root-project/root/pull/12987. 5. https://github.com/root-project/root/pull/13020. 6. https://github.com/root-project/root/pull/13025. 7. https://github.com/root-project/root/pull/13033. 8. https://github.com/root-project/root/pull/12970. 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark tem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:1819,usability,Support,Support,1819,"s://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWork",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2458,usability,error,errors,2458,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2598,usability,support,support,2598," [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2760,usability,support,support,2760,"eneration issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSamePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:2959,usability,support,support,2959,"ove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:3106,usability,support,support,3106," private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4111,usability,command,command,4111,"or RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4861,usability,support,support,4861,"0268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:4936,usability,support,support,4936,"of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5592,usability,memor,memory,5592,"isibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:5724,usability,minim,minimizer,5724,"mplementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6392,usability,prototyp,prototype,6392,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13044:6765,usability,error,error,6765,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13044
https://github.com/root-project/root/pull/13045:190,deployability,patch,patch,190,"[DF] Work around gcc 13 dangling reference warnings; The warning seems to be a false positive since the referenced object is a std::type_info, which should always have static lifetime. This patch somehow silences it. Possibly related gcc bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13045
https://github.com/root-project/root/pull/13045:190,safety,patch,patch,190,"[DF] Work around gcc 13 dangling reference warnings; The warning seems to be a false positive since the referenced object is a std::type_info, which should always have static lifetime. This patch somehow silences it. Possibly related gcc bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13045
https://github.com/root-project/root/pull/13045:190,security,patch,patch,190,"[DF] Work around gcc 13 dangling reference warnings; The warning seems to be a false positive since the referenced object is a std::type_info, which should always have static lifetime. This patch somehow silences it. Possibly related gcc bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109671",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13045
https://github.com/root-project/root/pull/13046:32,deployability,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:214,deployability,modul,modules,214,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:19,energy efficiency,load,loading,19,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:204,energy efficiency,load,load,204,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:289,energy efficiency,load,loaded,289,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:32,modifiability,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:214,modifiability,modul,modules,214,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:19,performance,load,loading,19,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:204,performance,load,load,204,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:289,performance,load,loaded,289,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:13,safety,Avoid,Avoid,13,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:32,safety,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13046:214,safety,modul,modules,214,"[cxxmodules] Avoid loading more modules while instantiating templates; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13046
https://github.com/root-project/root/pull/13047:232,availability,failur,failures,232,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:160,deployability,log,log,160,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:232,deployability,fail,failures,232,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:289,deployability,version,version,289,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:418,deployability,version,versions,418,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:289,integrability,version,version,289,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:418,integrability,version,versions,418,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:289,modifiability,version,version,289,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:418,modifiability,version,versions,418,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:232,performance,failur,failures,232,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:232,reliability,fail,failures,232,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:160,safety,log,log,160,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:217,safety,avoid,avoid,217,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:160,security,log,log,160,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13047:160,testability,log,log,160,"Apply some fixes in stressHistoFit, TMVA Keras tutorials and mathmore; This PR fixes: . - stressHistoFit - so not use colour (even black) to keep a nice output log. - TMVA Keras tutorial: use different output file to avoid sporadic failures. - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13047
https://github.com/root-project/root/pull/13048:58,performance,lock,lock,58,"[hist] Fix creating the TVirtualFitter with MT; Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300. In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13048
https://github.com/root-project/root/pull/13048:196,performance,multi-thread,multi-thread,196,"[hist] Fix creating the TVirtualFitter with MT; Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300. In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13048
https://github.com/root-project/root/pull/13048:638,performance,multi-thread,multi-thread,638,"[hist] Fix creating the TVirtualFitter with MT; Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300. In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13048
https://github.com/root-project/root/pull/13048:58,security,lock,lock,58,"[hist] Fix creating the TVirtualFitter with MT; Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300. In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13048
https://github.com/root-project/root/pull/13048:157,usability,User,User,157,"[hist] Fix creating the TVirtualFitter with MT; Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300. In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13048
https://github.com/root-project/root/pull/13049:407,availability,state,state,407,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:93,deployability,upgrad,upgrades,93,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:318,deployability,build,build,318,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:452,deployability,build,build,452,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:407,integrability,state,state,407,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:93,modifiability,upgrad,upgrades,93,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:200,safety,review,reviewing,200,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:200,testability,review,reviewing,200,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13049:349,usability,workflow,workflow,349,"Adopt upstream llvm-project monorepo directory layout; This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13049
https://github.com/root-project/root/pull/13050:32,deployability,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:222,deployability,modul,modules,222,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:19,energy efficiency,load,loading,19,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:212,energy efficiency,load,load,212,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:297,energy efficiency,load,loaded,297,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:32,modifiability,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:222,modifiability,modul,modules,222,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:19,performance,load,loading,19,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:212,performance,load,load,212,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:297,performance,load,loaded,297,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:13,safety,Avoid,Avoid,13,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:32,safety,modul,modules,32,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13050:222,safety,modul,modules,222,"[cxxmodules] Avoid loading more modules while instantiating templates [v6.28]; When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13050
https://github.com/root-project/root/pull/13051:574,deployability,updat,updated,574,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:91,energy efficiency,Model,ModelConfigs,91,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:208,energy efficiency,Model,ModelConfigs,208,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:449,energy efficiency,Model,ModelConfig,449,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:359,performance,time,time,359,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:544,safety,test,tested,544,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:574,safety,updat,updated,574,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:91,security,Model,ModelConfigs,91,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:208,security,Model,ModelConfigs,208,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:449,security,Model,ModelConfig,449,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:574,security,updat,updated,574,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13051:544,testability,test,tested,544,"[HS3][RF] importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs; # This Pull request:. importing workspaces from JSON now successfully fills the NPs and Globs lists in ModelConfigs. ## Changes or fixes:. The solution for now is a bit makeshift, as it relies on the const/non-const properties to be set correctly at the time of creation. However, it's better than not doing anything, as this now allows the ```ModelConfig::createNLL``` to do its job correctly on imported workspaces. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13051
https://github.com/root-project/root/pull/13052:24,usability,support,support,24,[RF] Add Code-Squash AD support for RooFlexibleInterpVar.; This PR adds Code-Squash AD support for RooFlexibleInterpVar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13052
https://github.com/root-project/root/pull/13052:87,usability,support,support,87,[RF] Add Code-Squash AD support for RooFlexibleInterpVar.; This PR adds Code-Squash AD support for RooFlexibleInterpVar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13052
https://github.com/root-project/root/issues/13053:445,availability,robust,robust,445,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:726,availability,operat,operating,726,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:617,deployability,version,version,617,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:669,deployability,instal,install,669,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:88,energy efficiency,current,current,88,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:209,energy efficiency,Model,ModelConfig,209,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:479,integrability,event,eventually,479,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:617,integrability,version,version,617,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:406,interoperability,Share,Share,406,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:617,modifiability,version,version,617,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:445,reliability,robust,robust,445,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:445,safety,robust,robust,445,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:209,security,Model,ModelConfig,209,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13053:784,testability,context,context,784,[RF][HS3] GlobalObservable import; ### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce? Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT? compiled with cmake from master. ### Which operating system are you using? archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13053
https://github.com/root-project/root/issues/13055:2530,availability,operat,operating,2530,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:175,deployability,build,builds,175,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1021,deployability,modul,modules,1021," switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2127,deployability,Build,Build,2127,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2371,deployability,Build,Build,2371,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2418,deployability,version,version,2418,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2452,deployability,instal,install,2452,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2418,integrability,version,version,2418,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1021,modifiability,modul,modules,1021," switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2418,modifiability,version,version,2418,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2227,performance,CACH,CACHED,2227,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:17,reliability,doe,does,17,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1021,safety,modul,modules,1021," switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2584,testability,context,context,2584,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:574,usability,User,Users,574,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:775,usability,User,Users,775,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:928,usability,User,Users,928,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:987,usability,User,Users,987,"-Dtmva-sofie=OFF does not switch off sofie.; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1066,usability,User,Users,1066,"es. - [X] Checked for duplicates. ### Describe the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1113,usability,User,Users,1113,"the bug. If I pass `-Dtmva-sofie=OFF` to cmake, ROOT still builds it:. ```. → ls -la lib/lib*Sofie*. -rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1214,usability,User,Users,1214,"-rwxr-xr-x 1 ktf staff 411192 Jun 21 10:17 lib/libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 27 Jun 21 10:17 lib/libROOTTMVASofie.6.28.so -> libROOTTMVASofie.6.28.03.so. lrwxr-xr-x 1 ktf staff 24 Jun 21 10:17 lib/libROOTTMVASofie.so -> libROOTTMVASofie.6.28.so. ```. ```. CMAKE_INVOKE:STRING=/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:1541,usability,User,Users,1541,"25.2/bin/cmake -DARROW_HOME=""/Users/ktf/src/sw/osx_arm64/arrow/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating syst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2077,usability,User,Users,2077,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2143,usability,support,support,2143,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/issues/13055:2276,usability,behavi,behaviour,2276,"/v11.0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0. //Build TMVA with support for sofie - fast inference code generation. tmva-sofie:BOOL=OFF. tmva-sofie-CACHED:STRING=OFF. ```. ### What is the expected behaviour? No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce? Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT? https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using? macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13055
https://github.com/root-project/root/pull/13056:5,deployability,Updat,Update,5,"[RF] Update RooFitResult.cxx - use printValue for constPars ; . in some user cases there are things in the constPar list that aren't a RooRealVar, so make this printout more flexible by using the printValue method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13056
https://github.com/root-project/root/pull/13056:5,safety,Updat,Update,5,"[RF] Update RooFitResult.cxx - use printValue for constPars ; . in some user cases there are things in the constPar list that aren't a RooRealVar, so make this printout more flexible by using the printValue method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13056
https://github.com/root-project/root/pull/13056:5,security,Updat,Update,5,"[RF] Update RooFitResult.cxx - use printValue for constPars ; . in some user cases there are things in the constPar list that aren't a RooRealVar, so make this printout more flexible by using the printValue method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13056
https://github.com/root-project/root/pull/13056:72,usability,user,user,72,"[RF] Update RooFitResult.cxx - use printValue for constPars ; . in some user cases there are things in the constPar list that aren't a RooRealVar, so make this printout more flexible by using the printValue method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13056
https://github.com/root-project/root/issues/13058:5,availability,failur,failures,5,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:5,deployability,fail,failures,5,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:102,deployability,fail,fail,102,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:160,deployability,Fail,Failed,160,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:208,deployability,Fail,Failed,208,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:249,deployability,Fail,Failed,249,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:287,deployability,Fail,Failed,287,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:329,deployability,Fail,Failed,329,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:369,deployability,Fail,Failed,369,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:418,deployability,Fail,Failed,418,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:460,deployability,Fail,Failed,460,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:508,deployability,Fail,Failed,508,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:560,deployability,Fail,Failed,560,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:602,deployability,Fail,Failed,602,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:649,deployability,Fail,Failed,649,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:697,deployability,Fail,Failed,697,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:739,deployability,Fail,Failed,739,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:787,deployability,Fail,Failed,787,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:833,deployability,Fail,Failed,833,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:879,deployability,Fail,Failed,879,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:935,deployability,Fail,Failed,935,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:961,deployability,fail,fail,961,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1134,deployability,Modul,Modules,1134,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1198,deployability,fail,failed,1198,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1355,deployability,Build,Build,1355,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:909,energy efficiency,core,core-execStatusBitsCheck,909,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1275,energy efficiency,core,core-execStatusBitsCheck,1275,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:866,integrability,sub,subpads,866,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1134,modifiability,Modul,Modules,1134,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:5,performance,failur,failures,5,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:188,performance,concurren,concurrentfill,188,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:5,reliability,fail,failures,5,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:102,reliability,fail,fail,102,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:160,reliability,Fail,Failed,160,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:208,reliability,Fail,Failed,208,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:249,reliability,Fail,Failed,249,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:287,reliability,Fail,Failed,287,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:329,reliability,Fail,Failed,329,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:369,reliability,Fail,Failed,369,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:394,reliability,rca,rcanvas-,394,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:418,reliability,Fail,Failed,418,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:443,reliability,rca,rcanvas-,443,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:460,reliability,Fail,Failed,460,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:485,reliability,rca,rcanvas-,485,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:508,reliability,Fail,Failed,508,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:533,reliability,rca,rcanvas-,533,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:560,reliability,Fail,Failed,560,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:585,reliability,rca,rcanvas-,585,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:602,reliability,Fail,Failed,602,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:627,reliability,rca,rcanvas-,627,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:649,reliability,Fail,Failed,649,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:674,reliability,rca,rcanvas-,674,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:697,reliability,Fail,Failed,697,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:722,reliability,rca,rcanvas-,722,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:739,reliability,Fail,Failed,739,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:764,reliability,rca,rcanvas-,764,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:787,reliability,Fail,Failed,787,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:812,reliability,rca,rcanvas-rlegend,812,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:833,reliability,Fail,Failed,833,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:858,reliability,rca,rcanvas-subpads,858,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:879,reliability,Fail,Failed,879,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:935,reliability,Fail,Failed,935,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:961,reliability,fail,fail,961,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1198,reliability,fail,failed,1198,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:0,safety,Test,Test,0,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:96,safety,test,tests,96,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:141,safety,test,test-ntuple-types,141,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1134,safety,Modul,Modules,1134,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1208,safety,except,except,1208,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1237,safety,test,test-ntuple-types,1237,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:0,testability,Test,Test,0,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:96,testability,test,tests,96,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:141,testability,test,test-ntuple-types,141,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:357,testability,simpl,simple,357,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1089,testability,Assert,Assertion,1089,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:1237,testability,test,test-ntuple-types,1237,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/issues/13058:357,usability,simpl,simple,357,"Test failures with C++17, but without `runtime_cxxmodules`; ### Describe the bug. The following tests fail:. ```. 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed). 1052 - tutorial-v7-concurrentfill.cxx (Failed). 1054 - tutorial-v7-histops.cxx (Failed). 1055 - tutorial-v7-perf.cxx (Failed). 1056 - tutorial-v7-perfcomp.cxx (Failed). 1057 - tutorial-v7-simple.cxx (Failed). 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed). 1063 - tutorial-rcanvas-rh1.cxx (Failed). 1064 - tutorial-rcanvas-rh1_large.cxx (Failed). 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed). 1066 - tutorial-rcanvas-rh2.cxx (Failed). 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed). 1068 - tutorial-rcanvas-rh2_large.cxx (Failed). 1069 - tutorial-rcanvas-rh3.cxx (Failed). 1070 - tutorial-rcanvas-rh3_large.cxx (Failed). 1071 - tutorial-rcanvas-rlegend.cxx (Failed). 1082 - tutorial-rcanvas-subpads.cxx (Failed). 1577 - roottest-root-core-execStatusBitsCheck (Failed). ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce? Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13058
https://github.com/root-project/root/pull/13060:19,usability,support,support,19,Add Code-Squash AD support for RooPiecewiseInterpolation and RooLogNormal. ; Add Code-Squash AD support for RooPiecewiseInterpolation and RooLogNormal. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13060
https://github.com/root-project/root/pull/13060:96,usability,support,support,96,Add Code-Squash AD support for RooPiecewiseInterpolation and RooLogNormal. ; Add Code-Squash AD support for RooPiecewiseInterpolation and RooLogNormal. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13060
https://github.com/root-project/root/pull/13061:88,integrability,coupl,couple,88,"Fix YML syntax in github templates; # This Pull request:. ## Changes or fixes:. Fixes a couple of syntax issues introduced in the last PR https://github.com/root-project/root/pull/10366, which prevents from correctly opening new Issues on GitHub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13061
https://github.com/root-project/root/pull/13061:88,modifiability,coupl,couple,88,"Fix YML syntax in github templates; # This Pull request:. ## Changes or fixes:. Fixes a couple of syntax issues introduced in the last PR https://github.com/root-project/root/pull/10366, which prevents from correctly opening new Issues on GitHub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13061
https://github.com/root-project/root/pull/13061:193,safety,prevent,prevents,193,"Fix YML syntax in github templates; # This Pull request:. ## Changes or fixes:. Fixes a couple of syntax issues introduced in the last PR https://github.com/root-project/root/pull/10366, which prevents from correctly opening new Issues on GitHub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13061
https://github.com/root-project/root/pull/13061:193,security,preven,prevents,193,"Fix YML syntax in github templates; # This Pull request:. ## Changes or fixes:. Fixes a couple of syntax issues introduced in the last PR https://github.com/root-project/root/pull/10366, which prevents from correctly opening new Issues on GitHub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13061
https://github.com/root-project/root/pull/13061:88,testability,coupl,couple,88,"Fix YML syntax in github templates; # This Pull request:. ## Changes or fixes:. Fixes a couple of syntax issues introduced in the last PR https://github.com/root-project/root/pull/10366, which prevents from correctly opening new Issues on GitHub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13061
https://github.com/root-project/root/issues/13062:696,availability,avail,available,696,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2165,availability,operat,operating,2165,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:317,deployability,stack,stacktrace,317,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:534,deployability,version,version,534,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:561,deployability,build,build,561,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:741,deployability,build,build,741,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:801,deployability,version,version,801,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:831,deployability,contain,contains,831,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:950,deployability,Updat,Update,950,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1011,deployability,updat,update,1011,"plate Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1362,deployability,updat,update,1362,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1851,deployability,version,version,1851,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2070,deployability,build,build,2070,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2076,deployability,build,build-root-Desktop-Debug,2076,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2127,deployability,instal,install,2127,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2148,deployability,build,build,2148,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:534,integrability,version,version,534,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:801,integrability,version,version,801,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1023,integrability,messag,message,1023,"ning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1481,integrability,sub,submit,1481,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1851,integrability,version,version,1851,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:373,interoperability,specif,specific,373,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:493,interoperability,format,formatted,493,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1023,interoperability,messag,message,1023,"ning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1401,interoperability,Share,Share,1401,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:534,modifiability,version,version,534,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:649,modifiability,pac,package,649,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:801,modifiability,version,version,801,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1851,modifiability,version,version,1851,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:186,performance,tune,tune,186,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:696,reliability,availab,available,696,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:696,safety,avail,available,696,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:950,safety,Updat,Update,950,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1011,safety,updat,update,1011,"plate Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1362,safety,updat,update,1362,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:696,security,availab,available,696,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:950,security,Updat,Update,950,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1011,security,updat,update,1011,"plate Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1362,security,updat,update,1362,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2226,testability,context,context,2226,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:674,usability,user,user,674,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:977,usability,command,commands,977,"[GH] Issue Template Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1018,usability,help,help,1018,"Fine-Tuning; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1164,usability,command,commands,1164,"her ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which ope",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1256,usability,help,help,1256,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:1717,usability,command,commands,1717,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2065,usability,user,user,2065,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/issues/13062:2141,usability,Custom,Custom,2141,"ord. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.). - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version? - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful). - [ ] OS name. - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea? - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864. - [ ] Recommend also on ROOT manual these commands. - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/. - [x] Mention in the Forum --> Done by Bertrand. - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce? The way to submit a bug report without opening ROOT by hand would be:. ```. root -b -e '.gh bug' -q. root -b -e '.gh feature' -q. root -b -e '.gh improvement' -q. root -b -e '.forum bug' -q. ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```. rootbug. rootfeature. rootimprovement. rootforum. ```. ### ROOT version. ```. ROOT v6.29/01. Built for linuxx8664gcc on Jun 20 2023, 17:02:12. From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf. With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0. Binary directory: /home/user/build/build-root-Desktop-Debug/bin. ```. ### How did you install ROOT? Custom build. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13062
https://github.com/root-project/root/pull/13063:120,deployability,contain,contains,120,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13063:11,energy efficiency,draw,drawing,11,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13063:193,integrability,messag,messages,193,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13063:193,interoperability,messag,messages,193,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13063:50,testability,Regress,Regression,50,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13063:22,usability,Progress,Progressbar,22,[tmva] Fix drawing of Progressbar when evaluating Regression ; This PR fixes #13017 and also #13177. In addition the PR contains two additional unrelated commits for 2 improvements (see commit messages),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13063
https://github.com/root-project/root/pull/13064:288,availability,sli,slightly,288,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:157,deployability,version,version,157,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:83,energy efficiency,reduc,reducing,83,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:258,energy efficiency,current,current,258,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:157,integrability,version,version,157,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:445,integrability,sub,subjective,445,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:157,modifiability,version,version,157,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:288,reliability,sli,slightly,288,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:434,safety,compl,completely,434,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:434,security,compl,completely,434,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:386,testability,understand,understand,386,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:131,usability,command,commands,131,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13064:236,usability,Person,Personally,236,"Improvement suggestions for GitHub templates; - multiple fields have been unified, reducing the level of noise in the templates. - commands to retrieve ROOT version have been made copiable. - text style/tone has been made more uniform. Personally I find the current tone of the templates slightly condescending and the process of filling them less streamlined than it could be. I fully understand that some of the style decisions are completely subjective but even if only some of the suggestions are accepted I think it is worth it. Just wanted to bring this up :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13064
https://github.com/root-project/root/pull/13065:212,deployability,log,log,212,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:118,integrability,coupl,couple,118,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:118,modifiability,coupl,couple,118,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:212,safety,log,log,212,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:212,security,log,log,212,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:118,testability,coupl,couple,118,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:212,testability,log,log,212,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13065:64,usability,command,command,64,"Minor improvements to OpenGitHubIssue; Hi, I love the new `.gh` command (thank you very much @ferdymercury !). Just a couple of minor improvement suggestions:. - remove extra newline from auto-filled GH issue. - log to terminal that a new browser tab should have been opened",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13065
https://github.com/root-project/root/pull/13066:219,deployability,updat,updated,219,[GSOC][TMVA][SOFIE] Feacture: Add an option of saving both .dat and .root files; # This Pull request: Implements the reading and writing of text as well as root files. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13066
https://github.com/root-project/root/pull/13066:189,safety,test,tested,189,[GSOC][TMVA][SOFIE] Feacture: Add an option of saving both .dat and .root files; # This Pull request: Implements the reading and writing of text as well as root files. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13066
https://github.com/root-project/root/pull/13066:219,safety,updat,updated,219,[GSOC][TMVA][SOFIE] Feacture: Add an option of saving both .dat and .root files; # This Pull request: Implements the reading and writing of text as well as root files. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13066
https://github.com/root-project/root/pull/13066:219,security,updat,updated,219,[GSOC][TMVA][SOFIE] Feacture: Add an option of saving both .dat and .root files; # This Pull request: Implements the reading and writing of text as well as root files. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13066
https://github.com/root-project/root/pull/13066:189,testability,test,tested,189,[GSOC][TMVA][SOFIE] Feacture: Add an option of saving both .dat and .root files; # This Pull request: Implements the reading and writing of text as well as root files. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13066
https://github.com/root-project/root/pull/13067:9,availability,Consist,Consistent,9,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:192,availability,down,down,192,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:304,deployability,scale,scale,304,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1535,deployability,continu,continuity,1535,"l. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:304,energy efficiency,scale,scale,304,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:631,energy efficiency,optim,optimized,631,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:842,energy efficiency,model,models,842,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:229,interoperability,standard,standard,229,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:4562,interoperability,format,format,4562,".0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04. 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04. 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04. 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04. 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05. 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06. 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00. ```. In case this is useful later, here is how I produced this validation. table. Print `FlexibleInterpVar` values for differnt parameters both with and. without this PR using the following code:. ```C++. using namespace RooFit;. using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};. param.setBins(20);. double nominal = 1.;. std::vector<double> low{0.90};. std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {. std::vector<int> codes{code};. interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));. }. cout.precision(12);. param.setVal(-1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. for (int i = 0; i < param.numBins(); ++i) {. param.setBin(i);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. }. param.setVal(1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. ```. Then I concatenated the output with and without this PR to a `.csv` file. that was analyzed with pandas:. ```Python. import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]. df[""diff_rel""] = (df[""new""] - df[""ref""]) / df[""ref""]. format_mapping = {""new"": ""{:.10f}"", ""ref"": ""{:.10f}"", ""diff_abs"": ""{:.10f}"", ""diff_rel"": ""{:.2E}""}. for key, value in format_mapping.items():. df[key] = df[key].apply(value.format). print(df). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:304,modifiability,scal,scale,304,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:432,modifiability,paramet,parameters,432,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:3233,modifiability,paramet,parameters,3233,".9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04. 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04. 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04. 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04. 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04. 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05. 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06. 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00. ```. In case this is useful later, here is how I produced this validation. table. Print `FlexibleInterpVar` values for differnt parameters both with and. without this PR using the following code:. ```C++. using namespace RooFit;. using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};. param.setBins(20);. double nominal = 1.;. std::vector<double> low{0.90};. std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {. std::vector<int> codes{code};. interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));. }. cout.precision(12);. param.setVal(-1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. for (int i = 0; i < param.numBins(); ++i) {. param.setBin(i);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. }. param.setVal(1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. ```. Then I concatenated the output with and without this PR to a `.csv` file. that was analyzed with pandas:. ```Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:304,performance,scale,scale,304,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:521,performance,cach,cache,521,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:595,performance,time,time,595,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:631,performance,optimiz,optimized,631,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:734,performance,cach,caches,734,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:820,performance,memor,memory,820,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1104,performance,cach,cached,1104,"ecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1718,performance,perform,performance,1718,"putes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04. 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:604,safety,input,input,604,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1237,safety,Valid,Validation,1237,"ation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1392,safety,compl,completely,1392," of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:3168,safety,valid,validation,3168," -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04. 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04. 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04. 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04. 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04. 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05. 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06. 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00. ```. In case this is useful later, here is how I produced this validation. table. Print `FlexibleInterpVar` values for differnt parameters both with and. without this PR using the following code:. ```C++. using namespace RooFit;. using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};. param.setBins(20);. double nominal = 1.;. std::vector<double> low{0.90};. std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {. std::vector<int> codes{code};. interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));. }. cout.precision(12);. param.setVal(-1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. for (int i = 0; i < param.numBins(); ++i) {. param.setBin(i);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. }. param.setVal(1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. ```. Then I concatenated the output with and without ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:842,security,model,models,842,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1237,security,Validat,Validation,1237,"ation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1392,security,compl,completely,1392," of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:3168,security,validat,validation,3168," -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04. 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04. 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04. 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04. 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04. 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05. 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06. 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00. ```. In case this is useful later, here is how I produced this validation. table. Print `FlexibleInterpVar` values for differnt parameters both with and. without this PR using the following code:. ```C++. using namespace RooFit;. using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};. param.setBins(20);. double nominal = 1.;. std::vector<double> low{0.90};. std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {. std::vector<int> codes{code};. interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));. }. cout.precision(12);. param.setVal(-1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. for (int i = 0; i < param.numBins(); ++i) {. param.setBin(i);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. }. param.setVal(1);. std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;. ```. Then I concatenated the output with and without ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:9,usability,Consist,Consistent,9,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:604,usability,input,input,604,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:820,usability,memor,memory,820,"[RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in. HistFactory can both interpolate asymmetric up-and-down variations. between the +/- one standard deviation such that both the first and. second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of. taking constant interpolation parameters, it takes other `RooAbsReals`. That means it makes no sense for that class to cache the polynomial. coefficients that have to re recomputed anyway each time the input. changes. It uses an optimized formula to do the interpolation on the. fly. The `FlexibleInterpVar` however precomputes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/pull/13067:1718,usability,perform,performance,1718,"putes and caches the polynomial. coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of. `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be. equivalent. * Most importantly, and this was the motivation for this PR now:. when we do the code generation for AD, we can't pre-compute cached. coefficients because it would bloat the generated code with constant. arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and. `high=1.2` that shows the interpolated values are agreeing to the 5e-4. level. This is completely accepatable for such an ad-hoc polynomial. motivation, where the shape is not given by any physical meaning anyway. but just by the continuity condition at the boundaries. And at the. boundaries (and `param=0`), the difference between both implementations. goes to zero. It was also checked that this change has no performance. effect on fitting the full ATLAS Higgs combination modes. ```txt. param ref new diff_abs diff_rel. 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00. 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06. 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05. 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04. 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04. 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04. 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04. 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04. 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04. 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04. 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04. 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04. 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04. 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04. 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04. 15 0.45 1.0811302458 1.0805675",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13067
https://github.com/root-project/root/issues/13068:224,availability,Operat,Operating,224,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:32,deployability,fail,fail,32,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:119,deployability,fail,fail,119,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:170,deployability,version,version,170,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:191,deployability,Instal,Installation,191,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:170,integrability,version,version,170,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:170,modifiability,version,version,170,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:32,reliability,fail,fail,32,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:119,reliability,fail,fail,119,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:26,safety,test,tests,26,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:113,safety,test,tests,113,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:26,testability,test,tests,26,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:113,testability,test,tests,113,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/issues/13068:266,testability,context,context,266,"[FreeBSD] TThread related tests fail; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. tests fail. ### Reproducer. ctest -R ""TThread"". ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13068
https://github.com/root-project/root/pull/13069:170,deployability,updat,updated,170,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:30,safety,test,tests,30,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:60,safety,test,tests,60,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:140,safety,test,tested,140,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:170,safety,updat,updated,170,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:170,security,updat,updated,170,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:30,testability,test,tests,30,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:60,testability,test,tests,60,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13069:140,testability,test,tested,140,[FreeBSD] Fix TThread related tests; this fixes the TThread tests. # This Pull request:. ## Changes or fixes:. #13068. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13068.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13069
https://github.com/root-project/root/pull/13070:129,availability,operat,operator,129,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:222,availability,operat,operator,222,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:324,availability,operat,operator,324,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:399,availability,operat,operator,399,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:16,integrability,coupl,couple,16,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:16,modifiability,coupl,couple,16,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13070:16,testability,coupl,couple,16,"[windows] Add a couple of missing symbols in the export list; Export the following missing symbols:. ```. void * __ptr64 __cdecl operator new(unsigned __int64,struct std::nothrow_t const & __ptr64). void * __ptr64 __cdecl operator new[](unsigned __int64,struct std::nothrow_t const & __ptr64). ```. and. ```. void * __cdecl operator new[](unsigned int,struct std::nothrow_t const &). void * __cdecl operator new(unsigned int,struct std::nothrow_t const &). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13070
https://github.com/root-project/root/pull/13071:236,availability,state,statement,236,"[windows] work-around a compiler bug with VS 2022 v17.6.0; Fix a crash in root.exe due to a compiler bug with Visual Studio 2022 v17.6.0. The fix works the same way than it is supposed to do, since the (never reached) `default: break;` statement make the function returns `HasREX` anyway. To be reviewed and removed as soon as VS works again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13071
https://github.com/root-project/root/pull/13071:236,integrability,state,statement,236,"[windows] work-around a compiler bug with VS 2022 v17.6.0; Fix a crash in root.exe due to a compiler bug with Visual Studio 2022 v17.6.0. The fix works the same way than it is supposed to do, since the (never reached) `default: break;` statement make the function returns `HasREX` anyway. To be reviewed and removed as soon as VS works again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13071
https://github.com/root-project/root/pull/13071:295,safety,review,reviewed,295,"[windows] work-around a compiler bug with VS 2022 v17.6.0; Fix a crash in root.exe due to a compiler bug with Visual Studio 2022 v17.6.0. The fix works the same way than it is supposed to do, since the (never reached) `default: break;` statement make the function returns `HasREX` anyway. To be reviewed and removed as soon as VS works again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13071
https://github.com/root-project/root/pull/13071:295,testability,review,reviewed,295,"[windows] work-around a compiler bug with VS 2022 v17.6.0; Fix a crash in root.exe due to a compiler bug with Visual Studio 2022 v17.6.0. The fix works the same way than it is supposed to do, since the (never reached) `default: break;` statement make the function returns `HasREX` anyway. To be reviewed and removed as soon as VS works again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13071
https://github.com/root-project/root/pull/13071:110,usability,Visual,Visual,110,"[windows] work-around a compiler bug with VS 2022 v17.6.0; Fix a crash in root.exe due to a compiler bug with Visual Studio 2022 v17.6.0. The fix works the same way than it is supposed to do, since the (never reached) `default: break;` statement make the function returns `HasREX` anyway. To be reviewed and removed as soon as VS works again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13071
https://github.com/root-project/root/pull/13072:129,safety,test,tests,129,"TClingUtils: Remove HackForDefaultTemplateArg; This was introduced in 2013 by commit a283dc5847 mentioning `Double32_t`, but all tests pass when removing it. It seems all relevant cases are taken care of by commit c6cfe7cbcd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13072
https://github.com/root-project/root/pull/13072:20,security,Hack,HackForDefaultTemplateArg,20,"TClingUtils: Remove HackForDefaultTemplateArg; This was introduced in 2013 by commit a283dc5847 mentioning `Double32_t`, but all tests pass when removing it. It seems all relevant cases are taken care of by commit c6cfe7cbcd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13072
https://github.com/root-project/root/pull/13072:129,testability,test,tests,129,"TClingUtils: Remove HackForDefaultTemplateArg; This was introduced in 2013 by commit a283dc5847 mentioning `Double32_t`, but all tests pass when removing it. It seems all relevant cases are taken care of by commit c6cfe7cbcd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13072
https://github.com/root-project/root/pull/13073:84,modifiability,variab,variable,84,Surround lambda by appropriate preprocessor guards; ... to avoid an `unused-but-set-variable` warning on Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13073
https://github.com/root-project/root/pull/13073:59,safety,avoid,avoid,59,Surround lambda by appropriate preprocessor guards; ... to avoid an `unused-but-set-variable` warning on Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13073
https://github.com/root-project/root/issues/13074:9,availability,error,error,9,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:406,availability,error,error,406,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:440,availability,error,error,440,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:599,availability,Error,Error,599,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:728,availability,Error,Error,728,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:772,availability,Error,Error,772,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:817,availability,Error,Error,817,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:894,availability,Error,Error,894,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1524,availability,Operat,Operating,1524,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1085,deployability,fail,fails,1085,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1427,deployability,version,version,1427,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1441,deployability,Version,Version,1441,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1463,deployability,Instal,Installation,1463,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1484,deployability,build,build,1484,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:20,energy efficiency,load,loading,20,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:145,energy efficiency,load,load,145,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:447,integrability,sub,subscripted,447,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1427,integrability,version,version,1427,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1441,integrability,Version,Version,1441,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:179,modifiability,variab,variables,179,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:289,modifiability,variab,variable,289,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1427,modifiability,version,version,1427,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1441,modifiability,Version,Version,1441,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:9,performance,error,error,9,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:20,performance,load,loading,20,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:145,performance,load,load,145,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:406,performance,error,error,406,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:440,performance,error,error,440,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:599,performance,Error,Error,599,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:728,performance,Error,Error,728,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:772,performance,Error,Error,772,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:817,performance,Error,Error,817,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:894,performance,Error,Error,894,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1085,reliability,fail,fails,1085,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:9,safety,error,error,9,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:304,safety,test,testVariable,304,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:354,safety,compl,complains,354,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:406,safety,error,error,406,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:440,safety,error,error,440,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:599,safety,Error,Error,599,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:728,safety,Error,Error,728,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:748,safety,Input,InputFormulaIntoCling,748,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:772,safety,Error,Error,772,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:817,safety,Error,Error,817,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:894,safety,Error,Error,894,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:354,security,compl,complains,354,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1115,security,access,access,1115,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:304,testability,test,testVariable,304,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1094,testability,understand,understanding,1094,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:1574,testability,context,context,1574,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:9,usability,error,error,9,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:406,usability,error,error,406,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:440,usability,error,error,440,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:599,usability,Error,Error,599,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:682,usability,prototyp,prototype,682,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:728,usability,Error,Error,728,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:748,usability,Input,InputFormulaIntoCling,748,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:772,usability,Error,Error,772,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:817,usability,Error,Error,817,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13074:894,usability,Error,Error,894,"TFormula error when loading gdml using matrix; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```. <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>. <variable name=""testVariable"" value=""someNumbers[1]""/>. ```. ROOT complains when parsing the GDML, with the following error:. ```. input_line_155:2:81: error: subscripted value is not an array, pointer, or vector. Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }. ~~~~^~. Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*. Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling. Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid ! Error in <TFormula::Eval>: Formula is invalid and not ready to execute . Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'. aborting. ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,. Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```. root -l. TGeoManager::Import(""geometry_test.gdml""). ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13074
https://github.com/root-project/root/issues/13075:282,testability,context,context,282,"Implement copy constructor for TH2Poly; ### Feature description. Hello,. Unlike the regular TH2x classes, there is no copy constructor implemented for `TH2Poly`. Would it be possible to implement that? Thank you very much! ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13075
https://github.com/root-project/root/pull/13078:322,deployability,updat,updated,322,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/pull/13078:292,safety,test,tested,292,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/pull/13078:322,safety,updat,updated,322,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/pull/13078:322,security,updat,updated,322,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/pull/13078:292,testability,test,tested,292,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/pull/13078:102,usability,support,support,102,[RF][HS3] Non-uniform binnings for HistFactory HS3 and other improvements; # This Pull request:. Adds support for non-uniform binnings to HS3. ## Changes or fixes:. . Adds an if/then/else everywhere RooRealVars are read or written to handle non-uniform binnings as well. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13078
https://github.com/root-project/root/issues/13079:2455,availability,Operat,Operating,2455,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:65,deployability,instal,install,65,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:201,deployability,depend,dependent,201,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:291,deployability,build,build,291,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:326,deployability,fail,fails,326,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:387,deployability,instal,install,387,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:580,deployability,instal,install,580,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:781,deployability,instal,install,781,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:928,deployability,instal,install,928,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1089,deployability,instal,install,1089,"s take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1251,deployability,instal,install,1251," it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1447,deployability,instal,installed,1447,"7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1576,deployability,fail,failing,1576,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1612,deployability,contain,containing,1612,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1701,deployability,fail,failing,1701,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2138,deployability,depend,dependent,2138,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2295,deployability,build,build,2295,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2323,deployability,build,build,2323,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2357,deployability,instal,install,2357,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2375,deployability,version,version,2375,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2418,deployability,Instal,Installation,2418,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2444,deployability,build,build,2444,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:201,integrability,depend,dependent,201,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:374,integrability,pub,public,374,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:567,integrability,pub,public,567,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:768,integrability,pub,public,768,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:915,integrability,pub,public,915,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1076,integrability,pub,public,1076,"r/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1238,integrability,pub,public,1238,"as but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2138,integrability,depend,dependent,2138,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2375,integrability,version,version,2375,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:201,modifiability,depend,dependent,201,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2138,modifiability,depend,dependent,2138,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2375,modifiability,version,version,2375,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:326,reliability,fail,fails,326,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1576,reliability,fail,failing,1576,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:1701,reliability,fail,failing,1701,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2156,reliability,doe,does,2156,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:201,safety,depend,dependent,201,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2138,safety,depend,dependent,2138,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:201,testability,depend,dependent,201,"Builtin TBB library sometimes not found (or more exactly the one install in /usr/lib sometimes take priority); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:. ```. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2138,testability,depend,dependent,2138,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13079:2495,testability,context,context,2495,"gate_base&, long)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'. /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const. ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem. * doing `ldd` on `libImt` prints the expected path for `libtbb`. * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem. * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem . * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that. * we use `-ltbb` for the buitin. * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb. build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13079
https://github.com/root-project/root/issues/13080:294,availability,avail,available,294,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1373,availability,error,error,1373," it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1414,availability,Error,Error,1414,"et's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2981,availability,Error,Error,2981,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3079,availability,Error,Error,3079,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3332,availability,Error,Errors,3332,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3482,availability,failur,failure,3482,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3673,availability,Operat,Operating,3673,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:28,deployability,fail,fail,28,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:238,deployability,build,build,238,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:616,deployability,build,build,616,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:772,deployability,build,build,772,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:876,deployability,unload,unloaded,876,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:952,deployability,unload,unloaded,952,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1028,deployability,unload,unloaded,1028," (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1104,deployability,unload,unloaded,1104," ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1180,deployability,unload,unloaded,1180,"ests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1256,deployability,unload,unloaded,1256," the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1332,deployability,unload,unloaded,1332," the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1462,deployability,build,build,1462,"ck search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1878,deployability,build,build,1878,"ded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1940,deployability,build,build,1940,"8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1979,deployability,build,build,1979,"__cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2024,deployability,build,build,2024," unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2085,deployability,build,build,2085,"x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2128,deployability,build,build,2128,"4: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolutio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2166,deployability,build,build,2166,"4b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2235,deployability,build,build,2235," 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2324,deployability,build,build,2324,"from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2473,deployability,build,build,2473,"ttest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2526,deployability,fail,failed,2526,"17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2586,deployability,unload,unloaded,2586," -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evoluti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2662,deployability,unload,unloaded,2662,"logical-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2738,deployability,unload,unloaded,2738,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2876,deployability,build,build,2876,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3139,deployability,build,build,3139,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3151,deployability,Fail,Failed,3151,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3193,deployability,fail,failed,3193,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3265,deployability,FAIL,FAILED,3265,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3316,deployability,build,build,3316,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3323,deployability,Fail,Failed,3323,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3407,deployability,build,build,3407,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3445,deployability,log,log,3445,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3463,deployability,fail,failed,3463,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3482,deployability,fail,failure,3482,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3505,deployability,fail,failed,3505,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3599,deployability,build,build,3599,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3619,deployability,version,version,3619,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3640,deployability,Instal,Installation,3640,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3619,integrability,version,version,3619,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:742,interoperability,share,shared,742,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1720,interoperability,convers,conversion,1720,"ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2046,interoperability,plug,plugins,2046,". 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evoluti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2387,interoperability,share,shared,2387,"ed quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3619,modifiability,version,version,3619,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1373,performance,error,error,1373," it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1414,performance,Error,Error,1414,"et's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2981,performance,Error,Error,2981,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3079,performance,Error,Error,3079,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3221,performance,time,time,3221,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3332,performance,Error,Errors,3332,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3482,performance,failur,failure,3482,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:28,reliability,fail,fail,28,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:294,reliability,availab,available,294,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2526,reliability,fail,failed,2526,"17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3151,reliability,Fail,Failed,3151,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3193,reliability,fail,failed,3193,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3265,reliability,FAIL,FAILED,3265,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3323,reliability,Fail,Failed,3323,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3463,reliability,fail,failed,3463,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3482,reliability,fail,failure,3482,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3505,reliability,fail,failed,3505,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:44,safety,test,test,44,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:183,safety,test,tests,183,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:294,safety,avail,available,294,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1373,safety,error,error,1373," it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1414,safety,Error,Error,1414,"et's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2981,safety,Error,Error,2981,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3079,safety,Error,Error,3079,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3092,safety,Test,Test,3092,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3171,safety,test,tests,3171,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3187,safety,test,tests,3187,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3216,safety,Test,Test,3216,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3259,safety,test,tests,3259,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3332,safety,Error,Errors,3332,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3378,safety,test,tests,3378,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3418,safety,Test,Testing,3418,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3445,safety,log,log,3445,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:294,security,availab,available,294,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3445,security,log,log,3445,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:44,testability,test,test,44,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:183,testability,test,tests,183,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3092,testability,Test,Test,3092,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3171,testability,test,tests,3171,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3187,testability,test,tests,3187,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3216,testability,Test,Test,3216,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3259,testability,test,tests,3259,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3378,testability,test,tests,3378,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3418,testability,Test,Testing,3418,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3445,testability,log,log,3445,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3720,testability,context,context,3720,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:351,usability,command,command,351,"[FreeBSD] macro compilation fail (evolution test); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build. for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1373,usability,error,error,1373," it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:1414,usability,Error,Error,1414,"et's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```. 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")... 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping. 1874: sh: Syntax error: Unterminated quoted string. 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:2981,usability,Error,Error,2981,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3079,usability,Error,Error,3079,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13080:3332,usability,Error,Errors,3332,"T -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed! 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping. 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1. 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2. 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:. 1874 - roottest-root-meta-evolution-data1-build (Failed). Errors while running CTest. Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log. Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely. ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13080
https://github.com/root-project/root/issues/13081:1621,availability,Operat,Operating,1621,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:279,deployability,observ,observe,279,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:314,deployability,version,version,314,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:521,deployability,build,building,521,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:836,deployability,build,building,836,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1094,deployability,version,version,1094,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1577,deployability,Instal,Installation,1577,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1598,deployability,build,build,1598,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:314,integrability,version,version,314,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1094,integrability,version,version,1094,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:314,modifiability,version,version,314,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1094,modifiability,version,version,1094,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:625,security,rotat,rotate,625,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:940,security,rotat,rotate,940,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1244,security,Team,Team,1244,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:279,testability,observ,observe,279,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1669,testability,context,context,1669,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:137,usability,interact,interactively,137,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/issues/13081:1444,usability,help,help,1444,"clip edit in GL viewer; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. A ROOT feature that allows to interactively edit the clipping region. in the GL viewer, which worked for me in the past, is broken in ROOT. 6.28. My OS is AlmaLinux 9.2. I observe the breakage in both ROOT. version obtained by sourcing. /cvmfs/sft.cern.ch/lcg/views/LCG_103/x86_64-centos9-gcc11-opt/setup.sh. and also in 6.28/04 compiled from source on my system. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### Reproducer. To reproduce: run. $ root $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab. - click ""Box"". - check ""Edit in Viewer"". - rotate to make the three clip box axes visible. - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 20 2023, 15:28:00 |. | From heads/latest-stable@49886c13 |. | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ### Installation method. build from source. ### Operating system. AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13081
https://github.com/root-project/root/pull/13082:191,usability,hint,hints,191,Fix TGCompositeFrame constructor flags; Use the proper `kFitWidth` value (from the frame enum) in several TGCompositeFrame constructors instead of the `kLHintsExpandX` value (from the layout hints enum).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13082
https://github.com/root-project/root/pull/13083:175,deployability,updat,updated,175,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13083:22,interoperability,registr,registration,22,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13083:145,safety,test,tested,145,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13083:175,safety,updat,updated,175,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13083:175,security,updat,updated,175,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13083:145,testability,test,tested,145,"[FreeBSD] Fix library registration in TCling; skip executable, linker and vdso. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13080.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13083
https://github.com/root-project/root/pull/13085:93,deployability,instal,install,93,"[webgui] use local MathJax; While `mathjax.tar.gz` already provided with ROOT sources,. just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder. and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13085
https://github.com/root-project/root/pull/13085:260,deployability,upgrad,upgrade,260,"[webgui] use local MathJax; While `mathjax.tar.gz` already provided with ROOT sources,. just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder. and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13085
https://github.com/root-project/root/pull/13085:304,deployability,releas,release,304,"[webgui] use local MathJax; While `mathjax.tar.gz` already provided with ROOT sources,. just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder. and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13085
https://github.com/root-project/root/pull/13085:260,modifiability,upgrad,upgrade,260,"[webgui] use local MathJax; While `mathjax.tar.gz` already provided with ROOT sources,. just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder. and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13085
https://github.com/root-project/root/pull/13085:248,security,sign,significant,248,"[webgui] use local MathJax; While `mathjax.tar.gz` already provided with ROOT sources,. just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder. and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13085
https://github.com/root-project/root/pull/13086:19,deployability,configurat,configurations,19,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/pull/13086:19,integrability,configur,configurations,19,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/pull/13086:19,modifiability,configur,configurations,19,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/pull/13086:130,safety,test,test,130,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/pull/13086:19,security,configur,configurations,19,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/pull/13086:130,testability,test,test,130,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci]; This also has the advantage that they don't try to upload test results that the nodes happen to find in the filesystem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13086
https://github.com/root-project/root/issues/13087:1187,availability,Operat,Operating,1187,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:38,deployability,observ,observables,38,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:229,deployability,observ,observables,229,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:291,deployability,observ,observables,291,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:450,deployability,observ,observable,450,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:633,deployability,version,version,633,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:1129,deployability,Instal,Installation,1129,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:270,energy efficiency,reduc,reduce,270,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:633,integrability,version,version,633,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:219,interoperability,share,share,219,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:633,modifiability,version,version,633,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:23,reliability,doe,does,23,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:788,security,Team,Team,788,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:38,testability,observ,observables,38,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:229,testability,observ,observables,229,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:291,testability,observ,observables,291,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:450,testability,observ,observable,450,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:1231,testability,context,context,1231,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13087:991,usability,help,help,991,"[RF] RooDataSet::split does not split observables; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When splitting a RooDataSet using the ```split`` method, the resulting partial datasets will share all observables. It would make more sense to reduce the number of observables to the ones that actually appear in the dataset in a non-trivial way. . If all data points in the same data set have the same value for some given observable, it should not appear in the partial dataset. ### Reproducer. Call ""RooDataSet::split"" on the dataset in any given HistFactory workspace with at least 2 channels. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2023, 13:49:51 |. | From heads/hs3-globs-and-nps@v6-29-01-1584-gbd50f9023bb |. | With c++ (GCC) 13.1.1 20230429 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13087
https://github.com/root-project/root/issues/13088:949,availability,Operat,Operating,949,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:774,deployability,version,version,774,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:788,deployability,Version,Version,788,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:905,deployability,Instal,Installation,905,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:774,integrability,version,version,774,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:788,integrability,Version,Version,788,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:774,modifiability,version,version,774,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:788,modifiability,Version,Version,788,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:216,safety,test,testing,216,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:216,testability,test,testing,216,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:576,testability,understand,understand,576,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:989,testability,context,context,989,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/issues/13088:137,usability,help,helpful,137,"Retain tree name through `TChain` with `RNTupleImporter`; ### Explain what you would like to see improved and how. The other day someone helpful suggested this way of creating an artifically enlarged ntuple file for testing:. ```c++. TChain chain;. for (int i = 0; i < 25; i++) chain.Add(""B2HHH~zstd.root?#DecayTree""); // TTree file. ROOT::Experimental::RNTupleImporter::Create(&chain, ""B2HHH~zstd~25x.ntuple"")->Import();. ```. Afterwards however, I was quite lost because the tree inside the result file was no longer called ""DecayTree"", but ""ROOT::Experimental::RNTuple"". I understand that if you mix multiple files with a `TChain` there is no unique name to pick. But if there was a unique name, I think it would be great to carry it over to the resulting file! ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jun 22 2023, 16:45:00. From heads/master@v6-29-01-1712-g1d65f2ecf4. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13088
https://github.com/root-project/root/pull/13089:325,deployability,version,version,325,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:325,integrability,version,version,325,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:325,modifiability,version,version,325,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:319,safety,safe,safer,319,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:10,usability,support,support,10,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:35,usability,command,command,35,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:78,usability,command,command,78,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:198,usability,menu,menu,198,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:203,usability,command,command,203,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13089:228,usability,Support,Supported,228,"[webcanv] support ""Bring to front"" command for different classes; Via special command from client move object in list of primitives to the. end. Reflect changes which are done with ""Bring to front"" menu command. on client side. Supported for objects like `TLine`, `TBox`, `TMarker`, `TPave` and few. others. It is more safer version of `TObject::Pop()` method - do not relies on `gPad`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13089
https://github.com/root-project/root/pull/13090:0,deployability,Automat,Automatically,0,Automatically create an RDataFrame from TTree/RNTuple; Fixes #12932,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13090
https://github.com/root-project/root/pull/13090:0,testability,Automat,Automatically,0,Automatically create an RDataFrame from TTree/RNTuple; Fixes #12932,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13090
https://github.com/root-project/root/issues/13091:556,availability,Operat,Operating,556,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:881,availability,error,error,881,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:428,deployability,version,version,428,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:512,deployability,Instal,Installation,512,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:533,deployability,build,build,533,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:644,deployability,build,build,644,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:791,deployability,build,buildtrees,791,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:428,integrability,version,version,428,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:428,modifiability,version,version,428,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:881,performance,error,error,881,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:715,reliability,doe,does,715,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:881,safety,error,error,881,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:598,testability,context,context,598,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/issues/13091:881,usability,error,error,881,"wchar_t glyphs are too small on windows; ### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```. E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13091
https://github.com/root-project/root/pull/13093:31,availability,Operat,Operator,31,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:135,availability,Operat,Operator,135,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:81,safety,test,tests,81,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:168,safety,test,tested,168,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:76,testability,unit,unit,76,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:81,testability,test,tests,81,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13093:168,testability,test,tested,168,[GSOC][TMVA][SOFIE] Where ONNX Operator implemented with the ccorresponding unit tests; # This Pull request: implements the Where ONNX Operator. . ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13093
https://github.com/root-project/root/pull/13095:15,deployability,Updat,Update,15,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:51,deployability,updat,updates,51,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:15,safety,Updat,Update,15,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:51,safety,updat,updates,51,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:15,security,Updat,Update,15,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:51,security,updat,updates,51,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:28,usability,document,documentation,28,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13095:63,usability,document,documentation,63,[TMVA] [SOFIE] Update SOFIE documentation; This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13095
https://github.com/root-project/root/pull/13096:238,availability,consist,consistently,238,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:65,integrability,interfac,interfaces,65,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:157,integrability,wrap,wrapping,157,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:65,interoperability,interfac,interfaces,65,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:65,modifiability,interfac,interfaces,65,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:121,performance,memor,memory,121,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:121,usability,memor,memory,121,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13096:238,usability,consist,consistently,238,[RF] More use of `RooFit::OwningPtr<T>`; 1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type. 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`. 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13096
https://github.com/root-project/root/pull/13097:16,availability,avail,available,16,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:198,integrability,configur,configured,198,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:198,modifiability,configur,configured,198,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:16,reliability,availab,available,16,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:9,safety,detect,detect,9,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:16,safety,avail,available,16,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:9,security,detect,detect,9,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:16,security,availab,available,16,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:72,security,session,session,72,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:198,security,configur,configured,198,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:60,usability,interact,interactive,60,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:221,usability,support,supported,221,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13097:260,usability,support,support,260,[webgui] detect available browser when producing image; For interactive session default web browser is used. But when producing image exact kind of browser is important. . If exact browser kind not configured -. check if supported browsers are there. Add also support of Edge browser on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13097
https://github.com/root-project/root/pull/13098:19,availability,error,error,19,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:95,availability,error,error,95,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:148,availability,consist,consistency,148,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:250,deployability,updat,updated,250,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:101,integrability,messag,messages,101,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:101,interoperability,messag,messages,101,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:19,performance,error,error,19,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:95,performance,error,error,95,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:19,safety,error,error,19,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:95,safety,error,error,95,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:220,safety,test,tested,220,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:250,safety,updat,updated,250,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:250,security,updat,updated,250,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:220,testability,test,tested,220,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:19,usability,error,error,19,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:95,usability,error,error,95,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13098:148,usability,consist,consistency,148,[RF][HS3] improved error reporting for HistFactory; # This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13098
https://github.com/root-project/root/pull/13099:78,availability,failur,failure,78,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/pull/13099:78,deployability,fail,failure,78,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/pull/13099:78,performance,failur,failure,78,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/pull/13099:78,reliability,fail,failure,78,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/pull/13099:22,testability,assert,assertion,22,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/pull/13099:68,testability,assert,assertion,68,"Revert ""[clang] Relax assertion on generating destructor call""; The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13099
https://github.com/root-project/root/issues/13101:488,availability,error,error,488,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:927,availability,error,error,927,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1326,availability,error,error,1326,"r::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1797,availability,Error,Error,1797," note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1879,availability,error,error,1879,"hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2197,availability,error,error,2197,"red protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2572,availability,error,error,2572,".h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2788,availability,error,error,2788,"xx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3113,availability,error,error,3113,"ode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3305,availability,error,error,3305," | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3633,availability,error,error,3633,"emplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3940,availability,Error,Error,3940,"stall/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4032,availability,Error,Error,4032,"~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4145,availability,error,error,4145," a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5074,availability,operat,operator,5074,"obs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5330,availability,error,error,5330,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5451,availability,Error,Error,5451,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5543,availability,Error,Error,5543,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6048,availability,error,errors,6048,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6124,availability,Operat,Operating,6124,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:167,deployability,instal,install,167,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:765,deployability,instal,install,765,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1154,deployability,instal,install,1154,"n. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1549,deployability,instal,install,1549,"mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1709,deployability,build,build,1709,"/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2410,deployability,instal,install,2410,"xy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2941,deployability,instal,install,2941,"JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3457,deployability,instal,install,3457,"protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused paramet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3852,deployability,build,build,3852,"ext. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5414,deployability,build,build,5414,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5651,deployability,build,build,5651,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5740,deployability,instal,install,5740,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5766,deployability,build,build,5766,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5777,deployability,instal,install,5777,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5799,deployability,version,version,5799,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5825,deployability,version,version,5825,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6004,deployability,continu,continuous,6004,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,deployability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6080,deployability,Instal,Installation,6080,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5037,energy efficiency,alloc,allocator,5037,"ake[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5119,energy efficiency,alloc,allocator,5119,"unction. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5629,integrability,repositor,repository,5629,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5799,integrability,version,version,5799,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5825,integrability,version,version,5825,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,integrability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4882,interoperability,share,shared,4882,"iles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5629,interoperability,repositor,repository,5629,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,interoperability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4454,modifiability,paramet,parameter,4454,"stall/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4481,modifiability,paramet,parameter,4481,"38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4703,modifiability,paramet,parameter,4703,"oxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4730,modifiability,paramet,parameter,4730,"| for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5799,modifiability,version,version,5799,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5825,modifiability,version,version,5825,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,modifiability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:488,performance,error,error,488,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:927,performance,error,error,927,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1326,performance,error,error,1326,"r::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1797,performance,Error,Error,1797," note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1879,performance,error,error,1879,"hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2197,performance,error,error,2197,"red protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2572,performance,error,error,2572,".h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2788,performance,error,error,2788,"xx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3113,performance,error,error,3113,"ode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3305,performance,error,error,3305," | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3633,performance,error,error,3633,"emplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3940,performance,Error,Error,3940,"stall/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4032,performance,Error,Error,4032,"~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4145,performance,error,error,4145," a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5330,performance,error,error,5330,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5451,performance,Error,Error,5451,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5543,performance,Error,Error,5543,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5864,performance,time,time,5864,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6048,performance,error,errors,6048,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,reliability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:488,safety,error,error,488,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:927,safety,error,error,927,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1326,safety,error,error,1326,"r::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1797,safety,Error,Error,1797," note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1879,safety,error,error,1879,"hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2197,safety,error,error,2197,"red protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2572,safety,error,error,2572,".h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2788,safety,error,error,2788,"xx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3113,safety,error,error,3113,"ode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3305,safety,error,error,3305," | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3633,safety,error,error,3633,"emplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3940,safety,Error,Error,3940,"stall/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4032,safety,Error,Error,4032,"~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4145,safety,error,error,4145," a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5330,safety,error,error,5330,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5451,safety,Error,Error,5451,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5543,safety,Error,Error,5543,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6048,safety,error,errors,6048,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:594,security,access,accessible,594,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1044,security,access,accessible,1044,"ht be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1446,security,access,accessible,1446,"JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,security,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:615,testability,context,context,615,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1065,testability,context,context,1065," compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryW",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1467,testability,context,context,1467,"Core.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2259,testability,context,context,2259,"t/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2851,testability,context,context,2851,"nderscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3374,testability,context,context,3374,"s_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6015,testability,integr,integration,6015,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6169,testability,context,context,6169,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:488,usability,error,error,488,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:927,usability,error,error,927,"[CMake] Existing ROOT headers from the system might be picked up when compiling ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1326,usability,error,error,1326,"r::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context). 448 | elem[""x""] << pdf->x().GetName();. | ^. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1797,usability,Error,Error,1797," note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:1879,usability,error,error,1879,"hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context). 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {. | ^~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2197,usability,error,error,2197,"red protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context). 456 | for (const auto &coef : pdf->coefList()) {. | ^~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2572,usability,error,error,2572,".h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:2788,usability,error,error,2788,"xx.o] Error 1. ```. Tried to change method names to those with underscores, got another error about a protected field:. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3113,usability,error,error,3113,"ode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context. 448 | elem[""x""] << pdf->_x().GetName();. | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3305,usability,error,error,3305," | ^~. In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:. /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here. 37 | RooRealProxy _x;. | ^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3633,usability,error,error,3633,"emplateProxy<RooAbsReal>}) ()’. 448 | elem[""x""] << pdf->_x().GetName();. | ~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ^~~~~~~~~~~~. /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:3940,usability,Error,Error,3940,"stall/include/RooExpPoly.h:39:8: note: declared protected here. 39 | int _lowestOrder;. | ^~~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4032,usability,Error,Error,4032,"~~~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:4145,usability,error,error,4145," a function. 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {. | ~~~~~~~~~~~~~~~~~^~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context. 456 | for (const auto &coef : pdf->_coefList()) {. | ^~~~~~~~~. /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here. 38 | RooListProxy _coefList;. | ^~~~~~~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’. 456 | for (const auto &coef : pdf->_coefList()) {. | ~~~~~~~~~~~~~~^~. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. Commented the body of the whole function. Got another error. ```. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5330,usability,error,error,5330,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5356,usability,statu,status,5356,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5451,usability,Error,Error,5451,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:5543,usability,Error,Error,5543,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6048,usability,error,errors,6048,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13101:6199,usability,support,support,6199,"ction ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~~~~~~~~^~~~. /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]. 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override. | ~~~~~~~~~~^~~~. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':. JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'. collect2: error: ld returned 1 exit status. make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1. make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13101
https://github.com/root-project/root/issues/13102:151,availability,error,error,151,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:419,availability,error,error,419,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:676,availability,error,error,676,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:940,availability,Error,Error,940,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1073,availability,Error,Error,1073,"for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1218,availability,Error,Error,1218,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1257,availability,Error,Error,1257,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:2037,availability,Operat,Operating,2037,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:862,deployability,build,build,862,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1636,deployability,build,build,1636,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1723,deployability,instal,install,1723,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1747,deployability,build,build,1747,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1758,deployability,instal,install,1758,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1780,deployability,version,version,1780,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1806,deployability,version,version,1806,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1993,deployability,Instal,Installation,1993,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1614,integrability,repositor,repository,1614,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1780,integrability,version,version,1780,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1806,integrability,version,version,1806,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1614,interoperability,repositor,repository,1614,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1780,modifiability,version,version,1780,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1806,modifiability,version,version,1806,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:151,performance,error,error,151,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:419,performance,error,error,419,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:676,performance,error,error,676,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:940,performance,Error,Error,940,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1073,performance,Error,Error,1073,"for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1218,performance,Error,Error,1218,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1257,performance,Error,Error,1257,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1845,performance,time,time,1845,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:444,reliability,doe,does,444,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:151,safety,error,error,151,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:419,safety,error,error,419,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:676,safety,error,error,676,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:940,safety,Error,Error,940,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1073,safety,Error,Error,1073,"for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1218,safety,Error,Error,1218,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1257,safety,Error,Error,1257,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:2082,testability,context,context,2082,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:151,usability,error,error,151,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:419,usability,error,error,419,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:676,usability,error,error,676,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:940,usability,Error,Error,940,"Can't compile RModelParser_Keras; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Install",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1073,usability,Error,Error,1073,"for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1218,usability,Error,Error,1218,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13102:1257,usability,Error,Error,1257,"ion. When compiling ROOT from source, I got an error:. ```. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’? 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~~~~~~~~~~~. | ROperator_Slice. /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’. 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));. | ^~~~~. make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1. make[2]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2. make: *** [Makefile:156: all] Error 2. ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx. @@ -18,6 +18,7 @@. **********************************************************************************/. . #include ""TMVA/RModelParser_Keras.h"". +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13102
https://github.com/root-project/root/issues/13103:141,availability,error,error,141,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:442,availability,error,error,442,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:755,availability,error,error,755,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1048,availability,error,error,1048,". - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3293,availability,Error,Error,3293,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3393,availability,Error,Error,3393,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:4079,availability,Operat,Operating,4079,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:105,deployability,build,building,105,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1348,deployability,instal,install,1348,"GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1686,deployability,instal,install,1686,"itIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:2138,deployability,instal,install,2138,"entations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:2355,deployability,instal,install,2355,"lude/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:2453,deployability,instal,install,2453,"sentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:2745,deployability,instal,install,2745,"on for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:2843,deployability,instal,install,2843,"FieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3066,deployability,instal,install,3066,"ionExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from sou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3212,deployability,build,build,3212,"Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hop",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3678,deployability,build,build,3678,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3765,deployability,instal,install,3765,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3789,deployability,build,build,3789,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3800,deployability,instal,install,3800,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3822,deployability,version,version,3822,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3848,deployability,version,version,3848,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:4035,deployability,Instal,Installation,4035,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:4160,deployability,instal,installing,4160,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3656,integrability,repositor,repository,3656,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3822,integrability,version,version,3822,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3848,integrability,version,version,3848,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:4195,integrability,sub,submitted,4195,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1741,interoperability,convers,conversion,1741,"x:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3656,interoperability,repositor,repository,3656,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3822,modifiability,version,version,3822,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3848,modifiability,version,version,3848,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:141,performance,error,error,141,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:442,performance,error,error,442,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:755,performance,error,error,755,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1048,performance,error,error,1048,". - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3293,performance,Error,Error,3293,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3393,performance,Error,Error,3393,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3887,performance,time,time,3887,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:141,safety,error,error,141,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:442,safety,error,error,442,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:755,safety,error,error,755,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1048,safety,error,error,1048,". - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3293,safety,Error,Error,3293,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3393,safety,Error,Error,3393,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:4124,testability,context,context,4124,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:141,usability,error,error,141,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:442,usability,error,error,442,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:755,usability,error,error,755,"can't compile RNTupleDS; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:1048,usability,error,error,1048,". - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~~~~~~. | kSplitIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’? 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},. | ^~~~~~~~. | kIndex32. /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’. 79 | {});. | ^. In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:. /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}. 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3293,usability,Error,Error,3293,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3393,usability,Error,Error,3393,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/issues/13103:3427,usability,help,helped,3427,"ons::RColumnRepresentations()’. 110 | RColumnRepresentations();. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’. 107 | class RColumnRepresentations {. | ^~~~~~~~~~~~~~~~~~~~~~. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’. /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided. make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1. make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2. ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not... Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src. cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13103
https://github.com/root-project/root/pull/13104:20,availability,Error,Error,20,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:20,performance,Error,Error,20,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:20,safety,Error,Error,20,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:88,safety,test,tests,88,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:103,safety,test,tested,103,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:83,testability,unit,unit,83,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:88,testability,test,tests,88,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:103,testability,test,tested,103,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13104:20,usability,Error,Error,20,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests; . - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13104
https://github.com/root-project/root/pull/13105:94,deployability,updat,update,94,[rbrowser] use TWebCanvas in async mode; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13105
https://github.com/root-project/root/pull/13105:132,integrability,event,event,132,[rbrowser] use TWebCanvas in async mode; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13105
https://github.com/root-project/root/pull/13105:82,performance,synch,synchronous,82,[rbrowser] use TWebCanvas in async mode; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13105
https://github.com/root-project/root/pull/13105:94,safety,updat,update,94,[rbrowser] use TWebCanvas in async mode; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13105
https://github.com/root-project/root/pull/13105:94,security,updat,update,94,[rbrowser] use TWebCanvas in async mode; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13105
https://github.com/root-project/root/pull/13106:221,availability,error,error,221,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1508,availability,down,download,1508,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1129,deployability,build,build,1129,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1382,deployability,build,build,1382,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1392,deployability,releas,release,1392,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1486,deployability,instal,install,1486,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:370,integrability,topic,topic,370,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1435,interoperability,specif,specify,1435,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:176,modifiability,paramet,parameters,176,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:328,modifiability,paramet,parameter,328,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:221,performance,error,error,221,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:199,safety,prevent,prevent,199,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:221,safety,error,error,221,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1079,safety,input,input,1079,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:199,security,preven,prevent,199,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1576,testability,context,context,1576,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1607,testability,context,context,1607,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:58,usability,command,command,58,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:106,usability,command,command,106,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:166,usability,command,command,166,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:221,usability,error,error,221,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:249,usability,command,command,249,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:320,usability,command,command,320,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:424,usability,tip,tips,424,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:433,usability,efficien,efficient,433,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:513,usability,efficien,efficient-and-successful-posting,513,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:693,usability,clear,clear,693,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:741,usability,behavi,behavior,741,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:781,usability,behavi,behavior,781,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:801,usability,clear,clear,801,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:929,usability,behavi,behavior,929,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1079,usability,input,input,1079,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13106:1367,usability,User,Users,1367,"[skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13106
https://github.com/root-project/root/pull/13107:310,deployability,depend,depending,310,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:112,integrability,configur,configured,112,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:139,integrability,messag,message,139,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:300,integrability,configur,configure,300,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:310,integrability,depend,depending,310,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:481,integrability,messag,message,481,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:573,integrability,batch,batch,573,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:139,interoperability,messag,message,139,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:431,interoperability,specif,specified,431,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:481,interoperability,messag,message,481,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:112,modifiability,configur,configured,112,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:210,modifiability,paramet,parameter,210,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:300,modifiability,configur,configure,300,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:310,modifiability,depend,depending,310,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:573,performance,batch,batch,573,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:310,safety,depend,depending,310,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:41,security,session,sessions,41,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:112,security,configur,configured,112,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:300,security,configur,configure,300,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:404,security,command-lin,command-line,404,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:310,testability,depend,depending,310,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:29,usability,interact,interactive,29,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:256,usability,behavi,behaviour,256,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13107:404,usability,command,command-line,404,"Use TWebCanvas by default in interactive sessions; 1. Create TWebCanvas from TRootGuiFactory if nothing else is configured. 2. Add warning message when web-based canvas started by default. 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back. 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`. If no extra command-line arguments are specified, web canvas will be started and warning message will appear. Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13107
https://github.com/root-project/root/pull/13108:228,availability,error,error,228,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1515,availability,down,download,1515,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1136,deployability,build,build,1136,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1389,deployability,build,build,1389,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1399,deployability,releas,release,1399,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1493,deployability,instal,install,1493,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:377,integrability,topic,topic,377,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1442,interoperability,specif,specify,1442,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:183,modifiability,paramet,parameters,183,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:335,modifiability,paramet,parameter,335,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:228,performance,error,error,228,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:206,safety,prevent,prevent,206,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:228,safety,error,error,228,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1086,safety,input,input,1086,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:206,security,preven,prevent,206,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1583,testability,context,context,1583,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1614,testability,context,context,1614,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:65,usability,command,command,65,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:113,usability,command,command,113,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:173,usability,command,command,173,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:228,usability,error,error,228,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:256,usability,command,command,256,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:327,usability,command,command,327,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:431,usability,tip,tips,431,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:440,usability,efficien,efficient,440,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:520,usability,efficien,efficient-and-successful-posting,520,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:700,usability,clear,clear,700,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:748,usability,behavi,behavior,748,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:788,usability,behavi,behavior,788,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:808,usability,clear,clear,808,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:936,usability,behavi,behavior,936,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1086,usability,input,input,1086,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13108:1374,usability,User,Users,1374,"[v6-28][skip-ci][windows] Use the correct syntax for the `START` command; Use the correct syntax for the `START` command, which is:. ```. START ""title"" [/D path] [options] ""command"" [parameters]. ```. This prevent the following error with the `.forum bug` command:. ```. root [0] .forum bug. The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"". root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13108
https://github.com/root-project/root/pull/13109:280,availability,toler,tolerances,280,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1309,energy efficiency,reduc,reduced,1309,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1419,energy efficiency,current,current,1419,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1603,energy efficiency,model,model,1603,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1544,integrability,configur,configurable,1544,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1649,integrability,event,events,1649,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1544,modifiability,configur,configurable,1544,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:280,reliability,toleran,tolerances,280,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1589,safety,test,tested,1589,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1838,safety,test,tested,1838,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1544,security,configur,configurable,1544,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1603,security,model,model,1603,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1589,testability,test,tested,1589,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1838,testability,test,tested,1838,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:180,usability,behavi,behaviour,180,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:454,usability,minim,minimization,454,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:716,usability,minim,minima,716,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:825,usability,behavi,behaviour,825,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1368,usability,clear,clear,1368,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/pull/13109:1674,usability,minim,minimization,1674,"[Math][Minuit2] Add new Strategy to Minuit2 for more precise hesse algorithm and return without forcing positive definite; This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:. * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. . * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix. * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13109
https://github.com/root-project/root/issues/13110:421,availability,consist,consists,421,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:652,availability,Operat,Operating,652,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:594,deployability,version,version,594,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:622,deployability,Instal,Installation,622,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:539,energy efficiency,reduc,reduced,539,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:594,integrability,version,version,594,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:594,modifiability,version,version,594,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:414,testability,simpl,simply,414,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:690,testability,context,context,690,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:414,usability,simpl,simply,414,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/issues/13110:421,usability,consist,consists,421,"Bug in TDecompBase::DiagProd; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This line. https://github.com/root-project/root/blob/2b997add1d6b432ce27f35c1cbf385ffdc4a7cd5/math/matrix/src/TDecompBase.cxx#L231. is wrong and leads to a runaway loop until it reaches the limit. The handbook mentioned in the comment of the function correctly uses ≥1 instead of <1 in its algorithm. The fix simply consists in changing <1 to ≥1. Pull request in preparation. ### Reproducer. As it is, the code works, but may lead to reduced numerical precision for big matrices. ### ROOT version. all, I guess ? ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13110
https://github.com/root-project/root/pull/13111:144,modifiability,deco,decompositions,144,Fix bug in DiagProd calculation; # This Pull request:. ## Changes or fixes:. Small bug in calculation of product of diagonal terms in LU matrix decompositions. This PR fixes #13110 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13111
https://github.com/root-project/root/pull/13112:144,deployability,continu,continuously,144,"Revert D41416: ""Do not deserialize all lazy template specializations when looking for one.""; The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13112
https://github.com/root-project/root/pull/13112:102,energy efficiency,load,loading,102,"Revert D41416: ""Do not deserialize all lazy template specializations when looking for one.""; The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13112
https://github.com/root-project/root/pull/13112:102,performance,load,loading,102,"Revert D41416: ""Do not deserialize all lazy template specializations when looking for one.""; The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13112
https://github.com/root-project/root/pull/13113:101,deployability,updat,update,101,[rbrowser] use TWebCanvas in async mode [6.28]; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13113
https://github.com/root-project/root/pull/13113:139,integrability,event,event,139,[rbrowser] use TWebCanvas in async mode [6.28]; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13113
https://github.com/root-project/root/pull/13113:89,performance,synch,synchronous,89,[rbrowser] use TWebCanvas in async mode [6.28]; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13113
https://github.com/root-project/root/pull/13113:101,safety,updat,update,101,[rbrowser] use TWebCanvas in async mode [6.28]; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13113
https://github.com/root-project/root/pull/13113:101,security,updat,update,101,[rbrowser] use TWebCanvas in async mode [6.28]; In special engines like qt5web or cefweb synchronous update of the canvas may block normal event loop of such engines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13113
https://github.com/root-project/root/pull/13114:361,deployability,build,build,361,"Remove checks for deprecated _REENTRANT macro; According to `feature_test_macros`, this macro is obsolete and ""glibc has been thread-safe by default for many years."" Other platforms don't use it at all, for example FreeBSD. Some parts of ROOT used it to determine if we are compiling with `-pthread`, but this is essentially unused these days because the CMake build always enables threading support and there exists no option to turn it off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13114
https://github.com/root-project/root/pull/13114:172,interoperability,platform,platforms,172,"Remove checks for deprecated _REENTRANT macro; According to `feature_test_macros`, this macro is obsolete and ""glibc has been thread-safe by default for many years."" Other platforms don't use it at all, for example FreeBSD. Some parts of ROOT used it to determine if we are compiling with `-pthread`, but this is essentially unused these days because the CMake build always enables threading support and there exists no option to turn it off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13114
https://github.com/root-project/root/pull/13114:133,safety,safe,safe,133,"Remove checks for deprecated _REENTRANT macro; According to `feature_test_macros`, this macro is obsolete and ""glibc has been thread-safe by default for many years."" Other platforms don't use it at all, for example FreeBSD. Some parts of ROOT used it to determine if we are compiling with `-pthread`, but this is essentially unused these days because the CMake build always enables threading support and there exists no option to turn it off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13114
https://github.com/root-project/root/pull/13114:392,usability,support,support,392,"Remove checks for deprecated _REENTRANT macro; According to `feature_test_macros`, this macro is obsolete and ""glibc has been thread-safe by default for many years."" Other platforms don't use it at all, for example FreeBSD. Some parts of ROOT used it to determine if we are compiling with `-pthread`, but this is essentially unused these days because the CMake build always enables threading support and there exists no option to turn it off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13114
https://github.com/root-project/root/pull/13115:125,availability,failur,failure,125,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:230,availability,error,errors,230,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:125,deployability,fail,failure,125,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:133,integrability,messag,message,133,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:133,interoperability,messag,message,133,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:125,performance,failur,failure,125,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:230,performance,error,errors,230,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:90,reliability,RCa,RCanvas,90,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:125,reliability,fail,failure,125,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:119,safety,avoid,avoid,119,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:230,safety,error,errors,230,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13115:230,usability,error,errors,230,[webgui] provide method which checks if image can be produced with web browsers; Used in `RCanvas::SaveAs()` method to avoid failure message when image production in . tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13115
https://github.com/root-project/root/pull/13116:16,deployability,updat,update,16,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:201,deployability,version,version,201,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:262,deployability,updat,updated,262,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:23,energy efficiency,optim,optimization,23,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:201,integrability,version,version,201,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:201,modifiability,version,version,201,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:23,performance,optimiz,optimization,23,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:93,performance,content,content,93,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:16,safety,updat,update,16,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:262,safety,updat,updated,262,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:16,security,updat,update,16,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:48,security,Modif,Modified,48,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13116:262,security,updat,updated,262,"[webcanvas] fix update optimization; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13116
https://github.com/root-project/root/pull/13117:16,deployability,updat,update,16,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:208,deployability,version,version,208,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:269,deployability,updat,updated,269,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:23,energy efficiency,optim,optimization,23,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:208,integrability,version,version,208,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:208,modifiability,version,version,208,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:23,performance,optimiz,optimization,23,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:100,performance,content,content,100,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:16,safety,updat,update,16,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:269,safety,updat,updated,269,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:16,security,updat,update,16,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:55,security,Modif,Modified,55,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13117:269,security,updat,updated,269,"[webcanvas] fix update optimization [6.28]; When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13117
https://github.com/root-project/root/pull/13118:157,deployability,depend,dependency,157,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:117,energy efficiency,load,load,117,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:72,integrability,compon,component,72,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:157,integrability,depend,dependency,157,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:72,interoperability,compon,component,72,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:107,interoperability,plug,plugin,107,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:66,modifiability,Reu,Reuse,66,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:72,modifiability,compon,component,72,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:157,modifiability,depend,dependency,157,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:117,performance,load,load,117,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:56,reliability,RCa,RCanvas,56,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:145,safety,Avoid,Avoids,145,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:157,safety,depend,dependency,157,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:157,testability,depend,dependency,157,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:28,usability,dialog,dialog,28,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13118:127,usability,dialog,dialog,127,[webcanvas] provide Save as dialog in `TWebCanvas` and `RCanvas`; Reuse component from `RBrowser`. Provide plugin to load file dialog on demand. Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13118
https://github.com/root-project/root/pull/13119:382,interoperability,convers,conversion,382,"[treeplayer] fix compiler warnings concerning enum combination; Warning like this:. ```. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘virtual Bool_t TFormLeafInfo::IsString() const’:. tree/treeplayer/src/TFormLeafInfo.cxx:361:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 361 | case TStreamerInfo::kOffsetL + kChar_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘T TFormLeafInfo::ReadValueImpl(char*, Int_t)’:. tree/treeplayer/src/TFormLeafInfo.cxx:890:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 890 | case TStreamerInfo::kOffsetL + kULong64_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13119
https://github.com/root-project/root/pull/13119:770,interoperability,convers,conversion,770,"[treeplayer] fix compiler warnings concerning enum combination; Warning like this:. ```. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘virtual Bool_t TFormLeafInfo::IsString() const’:. tree/treeplayer/src/TFormLeafInfo.cxx:361:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 361 | case TStreamerInfo::kOffsetL + kChar_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘T TFormLeafInfo::ReadValueImpl(char*, Int_t)’:. tree/treeplayer/src/TFormLeafInfo.cxx:890:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 890 | case TStreamerInfo::kOffsetL + kULong64_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13119
https://github.com/root-project/root/pull/13119:35,modifiability,concern,concerning,35,"[treeplayer] fix compiler warnings concerning enum combination; Warning like this:. ```. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘virtual Bool_t TFormLeafInfo::IsString() const’:. tree/treeplayer/src/TFormLeafInfo.cxx:361:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 361 | case TStreamerInfo::kOffsetL + kChar_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘T TFormLeafInfo::ReadValueImpl(char*, Int_t)’:. tree/treeplayer/src/TFormLeafInfo.cxx:890:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 890 | case TStreamerInfo::kOffsetL + kULong64_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13119
https://github.com/root-project/root/pull/13119:35,testability,concern,concerning,35,"[treeplayer] fix compiler warnings concerning enum combination; Warning like this:. ```. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘virtual Bool_t TFormLeafInfo::IsString() const’:. tree/treeplayer/src/TFormLeafInfo.cxx:361:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 361 | case TStreamerInfo::kOffsetL + kChar_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~. tree/treeplayer/src/TFormLeafInfo.cxx: In member function ‘T TFormLeafInfo::ReadValueImpl(char*, Int_t)’:. tree/treeplayer/src/TFormLeafInfo.cxx:890:36: warning: arithmetic between different enumeration types ‘TStreamerInfo::EReadWrite’ and ‘EDataType’ is deprecated [-Wdeprecated-enum-enum-conversion]. 890 | case TStreamerInfo::kOffsetL + kULong64_t:. | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13119
https://github.com/root-project/root/pull/13121:131,deployability,modul,modules,131,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:254,deployability,version,versions,254,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:145,energy efficiency,load,load,145,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:254,integrability,version,versions,254,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:26,interoperability,distribut,distributed,26,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:197,interoperability,distribut,distributed,197,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:131,modifiability,modul,modules,131,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:157,modifiability,paramet,parameter,157,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:254,modifiability,version,versions,254,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:145,performance,load,load,145,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/pull/13121:131,safety,modul,modules,131,"[DF] Do not try to import distributed headers; It causes dask to print a warning since they are. typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored. by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13121
https://github.com/root-project/root/issues/13122:461,availability,Operat,Operating,461,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:372,deployability,version,version,372,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:403,deployability,releas,releases,403,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:417,deployability,Instal,Installation,417,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:438,deployability,build,build,438,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:6,energy efficiency,Draw,DrawCopy,6,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:137,energy efficiency,Draw,DrawCopy,137,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:159,energy efficiency,draw,draw,159,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:321,integrability,configur,configured,321,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:372,integrability,version,version,372,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:321,modifiability,configur,configured,321,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:372,modifiability,version,version,372,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:18,reliability,doe,does,18,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:321,security,configur,configured,321,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/issues/13122:510,testability,context,context,510,"`TF1::DrawCopy()` does not copy histogram properties; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13122
https://github.com/root-project/root/pull/13123:15,deployability,patch,patch,15,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:321,deployability,patch,patch,321,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:262,performance,synch,synchronize,262,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:15,safety,patch,patch,15,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:156,safety,test,tests,156,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:221,safety,reme,remember,221,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:321,safety,patch,patch,321,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:15,security,patch,patch,15,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:321,security,patch,patch,321,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/pull/13123:156,testability,test,tests,156,"[clang] Revert patch to `Sema::computeDeclContext`; This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13123
https://github.com/root-project/root/issues/13124:1566,availability,Operat,Operating,1566,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:950,deployability,version,version,950,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1264,deployability,version,version,1264,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1448,deployability,version,version,1448,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1466,deployability,build,building,1466,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1495,deployability,Version,Version,1495,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1518,deployability,Instal,Installation,1518,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1539,deployability,build,building,1539,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:179,energy efficiency,Draw,Draw,179,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:196,energy efficiency,Draw,DrawFrame,196,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:402,energy efficiency,Draw,DrawFrame,402,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:768,energy efficiency,Draw,Draw,768,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:950,integrability,version,version,950,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1264,integrability,version,version,1264,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1448,integrability,version,version,1448,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1495,integrability,Version,Version,1495,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:950,modifiability,version,version,950,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1264,modifiability,version,version,1264,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1448,modifiability,version,version,1448,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1495,modifiability,Version,Version,1495,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:221,performance,time,time,221,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1475,performance,time,time,1475,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1503,performance,time,time,1503,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1100,security,Team,Team,1100,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1609,testability,context,context,1609,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/issues/13124:1313,usability,help,help,1313,"TScatter plotting axis problem; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. new TScatter feature is exciting, but I met a bug when I use `TScatter::Draw` and `gPad->DrawFrame()` at the same time. ### Reproducer. ```. #include <TScatter.h>. #include <TCanvas.h>. #include <TPad.h>. void scatter(). {. 	TCanvas * c1 = new TCanvas();. 	c1->Divide(2,2);. 	c1->cd(1);. 	gPad->DrawFrame(-70, -70, 70, 70);. 	const int n = 10;. 	double x[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double y[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double c[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	double s[n] = {-80, -70, -60, -50, -40, -30, -20, -10, 0, 10};. 	auto scatter = new TScatter(n, x, y, c, s);. 	scatter->Draw(""P same"");. }. ```. cause axis problem like below . ![截屏2023-06-29 20 49 30](https://github.com/root-project/root/assets/6235641/18584203-e407-4f80-90de-b112f2cd1bcb). ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 21 2023, 03:10:00 |. | From heads/master@v6-29-01-1680-gffdc579bbc |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Rint. version: 6.29/01. building time: 20230621 310. Version time:1150. ### Installation method. building from source . ### Operating system. macos m1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13124
https://github.com/root-project/root/pull/13126:160,deployability,updat,updated,160,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13126:1,energy efficiency,core,core,1,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13126:130,safety,test,tested,130,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13126:160,safety,updat,updated,160,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13126:160,security,updat,updated,160,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13126:130,testability,test,tested,130,[core] Improve ROOT_MAX_THREADS doc wrt oversubscription (NFC).; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13126
https://github.com/root-project/root/pull/13127:49,energy efficiency,current,currently,49,"[NFC][DF] Fix link in RDF docs, wording; Link is currently broken:. ![image](https://github.com/root-project/root/assets/10999034/30cffdd9-4143-42b4-a69a-02ab311ac58c).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13127
https://github.com/root-project/root/issues/13128:337,availability,Operat,Operating,337,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:23,deployability,fail,fail,23,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:237,deployability,patch,patch,237,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:283,deployability,version,version,283,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:304,deployability,Instal,Installation,304,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:283,integrability,version,version,283,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:283,modifiability,version,version,283,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:23,reliability,fail,fail,23,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:17,safety,test,tests,17,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:48,safety,except,exception,48,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:160,safety,test,tests,160,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:237,safety,patch,patch,237,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:237,security,patch,patch,237,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:17,testability,test,tests,17,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:160,testability,test,tests,160,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/issues/13128:384,testability,context,context,384,"[FreeBSD] merger tests fail with floating point exception; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. as in desc, possibly more tests affected. Due to unimplemented system info in TUnixSystem. rudimentary patch coming. ### Reproducer. ctest. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13128
https://github.com/root-project/root/pull/13129:208,deployability,updat,updated,208,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:29,energy efficiency,cpu,cpu,29,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:94,energy efficiency,cpu,cpu,94,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:29,performance,cpu,cpu,29,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:94,performance,cpu,cpu,94,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:178,safety,test,tested,178,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:208,safety,updat,updated,208,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:14,security,access,access,14,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:79,security,access,access,79,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:208,security,updat,updated,208,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/pull/13129:178,testability,test,tested,178,[FreeBSD] Add access to some cpu information; # This Pull request:. implements access to some cpu information via gSystem->GetSysInfo. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13128 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13129
https://github.com/root-project/root/issues/13130:240,availability,down,down,240,"Valgrind reports leak when constructing TChain; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I see `definitely lost: 8,904 bytes in 76 blocks` with valgrind in a few different places, which apparently all boil down to the following series of calls. ```. ==174298== at 0x484382F: malloc (vg_replace_malloc.c:431). ==174298== by 0xB8A21C5: llvm::safe_malloc(unsigned long) (MemAlloc.h:26). ==174298== by 0xB8A2ACC: clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2382,availability,Operat,Operating,2382,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:1825,deployability,configurat,configuration,1825,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2221,deployability,version,version,2221,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2338,deployability,Instal,Installation,2338,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:1825,integrability,configur,configuration,1825,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2221,integrability,version,version,2221,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:1825,modifiability,configur,configuration,1825,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2221,modifiability,version,version,2221,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:532,security,Ident,IdentifierInfo,532,"Valgrind reports leak when constructing TChain; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I see `definitely lost: 8,904 bytes in 76 blocks` with valgrind in a few different places, which apparently all boil down to the following series of calls. ```. ==174298== at 0x484382F: malloc (vg_replace_malloc.c:431). ==174298== by 0xB8A21C5: llvm::safe_malloc(unsigned long) (MemAlloc.h:26). ==174298== by 0xB8A2ACC: clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:1215,security,Ident,IdentifierInfo,1215,"parently all boil down to the following series of calls. ```. ==174298== at 0x484382F: malloc (vg_replace_malloc.c:431). ==174298== by 0xB8A21C5: llvm::safe_malloc(unsigned long) (MemAlloc.h:26). ==174298== by 0xB8A2ACC: clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:1825,security,configur,configuration,1825,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2527,security,RSa,RSample,2527,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2642,security,RSa,RSample,2642,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2426,testability,context,context,2426,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/issues/13130:2475,usability,minim,minimal,2475,"dTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206). ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356). ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506). ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094). ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629). ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87). ```. Full report from valgrind. [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration. ```. cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug. ```. This is the reproducer. ```cpp. #include <TChain.h>. int main(){. TChain c;. }. ```. Compile and run with valgrind. ```. $: g++ -g -o repro.out repro.cpp `root-config --cflags --glibs`. $: valgrind --leak-check=full --num-callers=30 --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro.out. ```. ### ROOT version. [master@1be2785](https://github.com/root-project/root/commit/1be278540d35a9a46a4e6c3f11eb8c97ce1a1a68). ### Installation method. built from source. ### Operating system. Fedora 37. ### Additional context. Compiler: GCC 12. I have arrived to the minimal reproducer above starting from the code in [RSample.cxx](https://github.com/root-project/root/blob/8474306b89fdd2b9026c3311d65b63d6f29144f1/tree/dataframe/src/RSample.cxx#L54C4-L72) which creates a temporary TChain in the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13130
https://github.com/root-project/root/pull/13131:112,deployability,build,building,112,"[ntuple] Add LowPrecisionFloats to LinkDef.h; This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13131
https://github.com/root-project/root/pull/13131:61,safety,test,test,61,"[ntuple] Add LowPrecisionFloats to LinkDef.h; This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13131
https://github.com/root-project/root/pull/13131:88,safety,test,test-ntuple-types,88,"[ntuple] Add LowPrecisionFloats to LinkDef.h; This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13131
https://github.com/root-project/root/pull/13131:61,testability,test,test,61,"[ntuple] Add LowPrecisionFloats to LinkDef.h; This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13131
https://github.com/root-project/root/pull/13131:88,testability,test,test-ntuple-types,88,"[ntuple] Add LowPrecisionFloats to LinkDef.h; This fixes the test `gtest-tree-ntuple-v7-test-ntuple-types` when building with `runtime_cxxmodules=OFF`, see #13058.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13131
https://github.com/root-project/root/pull/13132:22,availability,error,errors,22,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:86,availability,error,errors,86,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:363,availability,error,error,363,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:652,interoperability,platform,platforms,652,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:22,performance,error,errors,22,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:86,performance,error,errors,86,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:363,performance,error,error,363,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:504,reliability,doe,doesn,504,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:22,safety,error,errors,22,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:86,safety,error,errors,86,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:363,safety,error,error,363,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:22,usability,error,errors,22,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:86,usability,error,errors,86,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13132:363,usability,error,error,363,"Fix mathtext warnings/errors on Windows; This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:. ```. graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored. ```. With clang_cl.exe. ```. graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type. default: _glyph = L'\U0001d538' + (_code[0] - 'A');. ```. Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13132
https://github.com/root-project/root/pull/13133:29,deployability,updat,updates,29,[RF] WIP RooFit codegen + AD updates; The commits that Garima and I created in the last days but didn't get merged yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13133
https://github.com/root-project/root/pull/13133:29,safety,updat,updates,29,[RF] WIP RooFit codegen + AD updates; The commits that Garima and I created in the last days but didn't get merged yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13133
https://github.com/root-project/root/pull/13133:29,security,updat,updates,29,[RF] WIP RooFit codegen + AD updates; The commits that Garima and I created in the last days but didn't get merged yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13133
https://github.com/root-project/root/pull/13134:129,deployability,build,building,129,"[rbrowser] Move RBrowserDataCleanup into header and LinkDef.h; This fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`, see #13058. ---. I don't know if there is an easier / better solution for this...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13134
https://github.com/root-project/root/pull/13134:98,energy efficiency,core,core-execStatusBitsCheck,98,"[rbrowser] Move RBrowserDataCleanup into header and LinkDef.h; This fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`, see #13058. ---. I don't know if there is an easier / better solution for this...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13134
https://github.com/root-project/root/pull/13134:78,safety,test,test,78,"[rbrowser] Move RBrowserDataCleanup into header and LinkDef.h; This fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`, see #13058. ---. I don't know if there is an easier / better solution for this...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13134
https://github.com/root-project/root/pull/13134:78,testability,test,test,78,"[rbrowser] Move RBrowserDataCleanup into header and LinkDef.h; This fixes the test `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`, see #13058. ---. I don't know if there is an easier / better solution for this...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13134
https://github.com/root-project/root/issues/13136:732,availability,Operat,Operating,732,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:667,deployability,version,version,667,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:688,deployability,Instal,Installation,688,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:709,deployability,build,build,709,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:151,integrability,buffer,buffer,151,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:267,integrability,buffer,buffer,267,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:667,integrability,version,version,667,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:620,interoperability,Format,Format,620,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:180,modifiability,variab,variable,180,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:667,modifiability,version,version,667,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:781,testability,context,context,781,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/issues/13136:232,usability,behavi,behavior,232,"Excessive `Form` usage in TMVA; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls. Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working. See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```. dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));. ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13136
https://github.com/root-project/root/pull/13137:141,deployability,updat,updated,141,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13137:16,modifiability,paramet,parameter,16,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13137:111,safety,test,tested,111,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13137:141,safety,updat,updated,141,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13137:141,security,updat,updated,141,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13137:111,testability,test,tested,111,Fixing template parameter typo for Profile2D; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13137
https://github.com/root-project/root/pull/13138:257,deployability,scale,scale,257,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:257,energy efficiency,scale,scale,257,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:266,energy efficiency,draw,drawing,266,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:297,integrability,configur,configured,297,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:257,modifiability,scal,scale,257,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:297,modifiability,configur,configured,297,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:257,performance,scale,scale,257,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:47,security,access,access,47,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:297,security,configur,configured,297,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:31,usability,support,support,31,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:312,usability,Support,Support,312,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13138:320,usability,custom,custom,320,[webcanvas] Better `TF1`/`TF2` support; 1. Let access histogram from TF1 on the client. 2. Histogram used as axes attributes storage. 3. Always convert TF1 into histogram on client. 4. Fix several problems in function calculation. 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured. 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13138
https://github.com/root-project/root/pull/13140:141,availability,error,errors,141,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:226,deployability,build,build,226,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:411,deployability,updat,updating,411,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:476,integrability,repositor,repository,476,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:476,interoperability,repositor,repository,476,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:125,modifiability,Pac,Packaging,125,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:141,performance,error,errors,141,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:141,safety,error,errors,141,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:411,safety,updat,updating,411,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:411,security,updat,updating,411,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:107,usability,help,help,107,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:135,usability,Tool,Tool,135,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/pull/13140:141,usability,error,errors,141,"Add jitlink to LLVM_LINK_COMPONENTS in relevant cling parts; When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13140
https://github.com/root-project/root/issues/13142:424,availability,error,errors,424,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2989,availability,Operat,Operating,2989,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1064,deployability,Build,Build,1064,"tFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2061,deployability,observ,observe,2061,"uild the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2854,deployability,version,version,2854,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2877,deployability,observ,observed,2877,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2919,deployability,Instal,Installation,2919,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:733,energy efficiency,model,model,733,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:840,energy efficiency,Measur,Measurement,840,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1074,energy efficiency,model,model,1074,"multaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the foll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1081,energy efficiency,Measur,Measurement,1081,"; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1200,energy efficiency,Model,ModelConfig,1200,"mstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1229,energy efficiency,Model,ModelConfig,1229,"ability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1251,energy efficiency,Model,ModelConfig,1251,"on is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1284,energy efficiency,model,model,1284,"ctory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1391,energy efficiency,model,model,1391,"s of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 40",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:3201,energy efficiency,model,model,3201,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1848,integrability,repositor,repository,1848,""". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1976,integrability,repositor,repository,1976,"ing namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2854,integrability,version,version,2854,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1848,interoperability,repositor,repository,1848,""". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1976,interoperability,repositor,repository,1976,"ing namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:32,modifiability,Paramet,Parameters,32,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:607,modifiability,paramet,parameter,607,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1627,modifiability,paramet,parameter,1627,"stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1804,modifiability,paramet,parameters,1804,"#include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2813,modifiability,paramet,parameters,2813,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2854,modifiability,version,version,2854,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:424,performance,error,errors,424,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:478,reliability,doe,does,478,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:424,safety,error,errors,424,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:43,security,Modif,Modified,43,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:733,security,model,model,733,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1074,security,model,model,1074,"multaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the foll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1200,security,Model,ModelConfig,1200,"mstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1229,security,Model,ModelConfig,1229,"ability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1251,security,Model,ModelConfig,1251,"on is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1284,security,model,model,1284,"ctory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1391,security,model,model,1391,"s of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 40",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1757,security,modif,modification,1757,"ory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2835,security,modif,modified,2835,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:3201,security,model,model,3201,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2061,testability,observ,observe,2061,"uild the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:2877,testability,observ,observed,2877,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:3034,testability,context,context,3034,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:424,usability,error,errors,424,"[RF] Gamma Stat. MC Uncertainty Parameters Modified by MINOS in HistFactorySimultaneous; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:. - The overall Probability Density Function is constructed using HistFactory. - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:1404,usability,Minim,Minimisation,1404," `gamma_stat` errors. - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:. ```cpp. #include ""RooStats/HistFactory/Measurement.h"". #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h"". #include ""RooStats/HistFactory/HistFactorySimultaneous.h"". using namespace RooFit;. using namespace RooStats;. using namespace HistFactory;. // Build the model. Measurement meas(""meas"", ""meas"");. // [...]. // [...]. RooWorkspace *w = MakeModelAndMeasurementFast(meas);. RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");. RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();. HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/issues/13142:3255,usability,learn,learning,3255,"actorySimultaneous( *model );. // Minimisation. RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));. RooMinimizer *minuit = new RooMinimizer(*nll_hf);. minuit->setOffsetting(kTRUE);. minuit->setStrategy(1);. minuit->migrad();. // Run MINOS on the parameter of interest. minuit->minos(*parameter_of_interest);. ```. Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug. After cloning the repository, you can run:. ```bash. root example.C. ```. After running it, you should observe the following:. ```. [...]. ======== Before MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 0.999547. gamma_stat_channel1_bin_1: 1.00348. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========. Lumi: 1. SigXsecOverSM: 1.11544. alpha_syst1: 0. alpha_syst2: -0.00946086. alpha_syst3: 0.0209843. gamma_stat_channel1_bin_0: 1.02666. gamma_stat_channel1_bin_1: 1.04061. nom_alpha_syst1: 0. nom_alpha_syst2: 0. nom_alpha_syst3: 0. nom_gamma_stat_channel1_bin_0: 400. nom_gamma_stat_channel1_bin_1: 100. nominalLumi: 1. ```. The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called. Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13142
https://github.com/root-project/root/pull/13143:144,deployability,updat,updated,144,[HS3][RF] Various bugfixes for ATLAS workspaces; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13143
https://github.com/root-project/root/pull/13143:114,safety,test,tested,114,[HS3][RF] Various bugfixes for ATLAS workspaces; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13143
https://github.com/root-project/root/pull/13143:144,safety,updat,updated,144,[HS3][RF] Various bugfixes for ATLAS workspaces; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13143
https://github.com/root-project/root/pull/13143:144,security,updat,updated,144,[HS3][RF] Various bugfixes for ATLAS workspaces; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13143
https://github.com/root-project/root/pull/13143:114,testability,test,tested,114,[HS3][RF] Various bugfixes for ATLAS workspaces; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13143
https://github.com/root-project/root/pull/13144:143,energy efficiency,draw,draw-with-circle-and-circle-size-like-below,143,Markers at the maximum did not have the right color; Fix an issue with TSactter. Mentioned here:. https://root-forum.cern.ch/t/can-tgraph2d-be-draw-with-circle-and-circle-size-like-below/55474/12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13144
https://github.com/root-project/root/pull/13146:100,availability,operat,operations,100,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:17,deployability,modul,modules,17,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:85,deployability,modul,module,85,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:151,deployability,modul,modules,151,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:242,deployability,updat,updated,242,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:92,energy efficiency,load,loading,92,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:124,energy efficiency,profil,profiling,124,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:144,energy efficiency,load,loaded,144,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:17,modifiability,modul,modules,17,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:85,modifiability,modul,module,85,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:151,modifiability,modul,modules,151,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:92,performance,load,loading,92,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:124,performance,profil,profiling,124,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:144,performance,load,loaded,144,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:17,safety,modul,modules,17,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:85,safety,modul,module,85,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:151,safety,modul,modules,151,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:212,safety,test,tested,212,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:242,safety,updat,updated,242,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:4,security,sign,signpost,4,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:53,security,sign,signpost,53,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:242,security,updat,updated,242,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:178,testability,instrument,instruments,178,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13146:212,testability,test,tested,212,Add signpost for modules; # This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13146
https://github.com/root-project/root/pull/13147:31,interoperability,format,formatting,31,"[skip-ci][NFC][DF] Fix doxygen formatting; I don't know why doxygen does not put those titles in bold, but it doesn't:. ![image](https://github.com/root-project/root/assets/10999034/ec9eb86c-7dfc-49d0-b081-a58db417e366)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13147
https://github.com/root-project/root/pull/13147:68,reliability,doe,does,68,"[skip-ci][NFC][DF] Fix doxygen formatting; I don't know why doxygen does not put those titles in bold, but it doesn't:. ![image](https://github.com/root-project/root/assets/10999034/ec9eb86c-7dfc-49d0-b081-a58db417e366)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13147
https://github.com/root-project/root/pull/13147:110,reliability,doe,doesn,110,"[skip-ci][NFC][DF] Fix doxygen formatting; I don't know why doxygen does not put those titles in bold, but it doesn't:. ![image](https://github.com/root-project/root/assets/10999034/ec9eb86c-7dfc-49d0-b081-a58db417e366)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13147
https://github.com/root-project/root/pull/13148:211,deployability,instal,installation,211,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording; `**note**` -> `\note`, and that PyROOT and RDataFrame are required for distRDF is kind of obvious and anyways they are included in virtually any ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13148
https://github.com/root-project/root/pull/13148:31,interoperability,format,formatting,31,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording; `**note**` -> `\note`, and that PyROOT and RDataFrame are required for distRDF is kind of obvious and anyways they are included in virtually any ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13148
https://github.com/root-project/root/pull/13148:43,testability,simpl,simplify,43,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording; `**note**` -> `\note`, and that PyROOT and RDataFrame are required for distRDF is kind of obvious and anyways they are included in virtually any ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13148
https://github.com/root-project/root/pull/13148:43,usability,simpl,simplify,43,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording; `**note**` -> `\note`, and that PyROOT and RDataFrame are required for distRDF is kind of obvious and anyways they are included in virtually any ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13148
https://github.com/root-project/root/pull/13149:307,availability,sli,slips,307,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:297,deployability,API,API,297,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:297,integrability,API,API,297,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:297,interoperability,API,API,297,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:307,reliability,sli,slips,307,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:186,safety,review,reviewed,186,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:186,testability,review,reviewed,186,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:234,testability,simpl,simple,234,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:51,usability,document,documentation,51,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:75,usability,learn,learn,75,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:234,usability,simpl,simple,234,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13149:349,usability,stop,stop,349,"[tree] Various improvements to TNotifyLink, mostly documentation; I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:. ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13149
https://github.com/root-project/root/pull/13150:59,deployability,log,logic,59,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:136,deployability,log,logic,136,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:352,deployability,updat,updated,352,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:13,modifiability,Refact,Refactor,13,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:41,modifiability,variab,variable,41,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:103,modifiability,Refact,Refactors,103,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:154,modifiability,variab,variables,154,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:13,performance,Refactor,Refactor,13,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:103,performance,Refactor,Refactors,103,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:59,safety,log,logic,59,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:136,safety,log,logic,136,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:322,safety,test,tested,322,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:352,safety,updat,updated,352,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:59,security,log,logic,59,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:136,security,log,logic,136,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:352,security,updat,updated,352,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:59,testability,log,logic,59,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:136,testability,log,logic,136,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13150:322,testability,test,tested,322,[RF][PyROOT] Refactor: move RooWorkspace variable creation logic to C++ backend; # This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13150
https://github.com/root-project/root/pull/13151:254,deployability,updat,updated,254,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:73,energy efficiency,current,currently,73,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:24,integrability,pub,publish,24,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:47,modifiability,deco,deconfuse,47,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:32,safety,test,test,32,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:224,safety,test,tested,224,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:254,safety,updat,updated,254,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:254,security,updat,updated,254,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:32,testability,test,test,32,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13151:224,testability,test,tested,224,"[ci] Use unique name in publish test result to deconfuse GH Actions:; GH currently puts this under seemingly arbitrary jobs, such as the unrelated SonarCloud. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13151
https://github.com/root-project/root/pull/13152:5,deployability,Automat,Automatic,5,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:28,deployability,manag,management,28,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:114,deployability,automat,automatically,114,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:336,deployability,updat,updated,336,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:28,energy efficiency,manag,management,28,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:62,energy efficiency,Load,Loads,62,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:198,energy efficiency,load,loadExportKeys,198,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:219,energy efficiency,load,loadFactoryExpressions,219,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:257,energy efficiency,load,load,257,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:20,performance,I/O,I/O,20,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:62,performance,Load,Loads,62,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:198,performance,load,loadExportKeys,198,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:219,performance,load,loadFactoryExpressions,219,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:249,performance,time,time,249,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:257,performance,load,load,257,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:275,performance,I/O,I/O,275,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:28,safety,manag,management,28,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:131,safety,avoid,avoid,131,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:306,safety,test,tested,306,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:336,safety,updat,updated,336,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:336,security,updat,updated,336,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:5,testability,Automat,Automatic,5,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:114,testability,automat,automatically,114,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13152:306,testability,test,tested,306,[RF] Automatic JSON I/O key management; # This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13152
https://github.com/root-project/root/pull/13154:265,deployability,depend,dependency,265,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:265,integrability,depend,dependency,265,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:265,modifiability,depend,dependency,265,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:210,performance,time,time,210,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:333,reliability,RCa,RCanvas,333,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:252,safety,avoid,avoid,252,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:265,safety,depend,dependency,265,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:265,testability,depend,dependency,265,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:0,usability,Support,Support,0,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:101,usability,dialog,dialog,101,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/pull/13154:153,usability,dialog,dialogs,153,"Support multiple connections in `RFileDialog`; One have to provide connection id when accepting file dialog request from client. This allows to use file dialogs for window with multiple connections at the same time. In eve7 use `RWebWindow` methods to avoid direct dependency from `RBrowser`. `RFileDialog` also used in `RBrowser`, `RCanvas`, `TWebCanvas`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13154
https://github.com/root-project/root/issues/13155:192,availability,error,error,192,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:990,availability,error,error,990,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2042,availability,Error,Error,2042,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2156,availability,Error,Error,2156,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2924,availability,Operat,Operating,2924,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:177,deployability,instal,installed,177,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:236,deployability,Version,Version,236,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:871,deployability,version,version,871,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1071,deployability,modul,module,1071," Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1255,deployability,Fail,Failed,1255,"iveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1320,deployability,updat,update,1320,"le(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droosta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1999,deployability,build,build,1999,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2734,deployability,version,version,2734,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2748,deployability,Version,Version,2748,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2866,deployability,Instal,Installation,2866,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:290,energy efficiency,Model,Model,290,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:550,energy efficiency,Model,Model,550,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1879,energy efficiency,model,modelData,1879,"and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation metho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:198,integrability,messag,message,198,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:236,integrability,Version,Version,236,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:871,integrability,version,version,871,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:996,integrability,messag,message,996,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1161,integrability,sub,subscriptable,1161,"ch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. mak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1907,integrability,Sub,Subprocess,1907,"Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2734,integrability,version,version,2734,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2748,integrability,Version,Version,2748,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:198,interoperability,messag,message,198,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:996,interoperability,messag,message,996,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:236,modifiability,Version,Version,236,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:871,modifiability,version,version,871,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:963,modifiability,variab,variables,963,"TMVA doesn't compile with pytorch 2.0.1; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1071,modifiability,modul,module,1071," Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:. ```. Torch Version: 2.0.1. RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). RecursiveScriptModule(. original_name=Model. (fc1): RecursiveScriptModule(original_name=Linear). (fc2): RecursiveScriptModule(original_name=Linear). (relu): RecursiveScriptModule(original_name=ReLU). (sigmoid): RecursiveScriptModule(original_name=Sigmoid). ). <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:1810,modifiability,scal,scalarType,1810,"olic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2734,modifiability,version,version,2734,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
https://github.com/root-project/root/issues/13155:2748,modifiability,Version,Version,2748,"error message:. Traceback (most recent call last):. File ""<string>"", line 6, in <module>. File ""<string>"", line 6, in <dictcomp>. TypeError: 'torch._C.Node' object is not subscriptable. terminate called after throwing an instance of 'std::runtime_error'. what(): . Failed to run python code: for i in graph[0].nodes():. globals().update(locals()). nodeData={}. nodeData['nodeType']=i.kind(). nodeAttributeNames=[x for x in i.attributeNames()]. nodeAttributes={j:i[j] for j in nodeAttributeNames}. nodeData['nodeAttributes']=nodeAttributes. nodeInputs=[x for x in i.inputs()]. nodeInputNames=[x.debugName() for x in nodeInputs]. nodeData['nodeInputs']=nodeInputNames. nodeOutputs=[x for x in i.outputs()]. nodeOutputNames=[x.debugName() for x in nodeOutputs]. nodeData['nodeOutputs']=nodeOutputNames. nodeDType=[x.type().scalarType() for x in nodeOutputs]. nodeData['nodeDType']=nodeDType. modelData.append(nodeData). Subprocess aborted. make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1. make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01. Built for linuxx8664gcc on Jul 03 2023, 09:06:02. From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13155
