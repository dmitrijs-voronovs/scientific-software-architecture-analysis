id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/11822:90,safety,except,except,90,"As seen above, CentOS 8 is quite unhappy about the changes here. I bisected the failures (except for `fit/graph2dfit.C` and `hist/hstack.C`, which will be taken care of by https://github.com/root-project/root/pull/11830) to commit 3ac1d584c821d21e4fae789f595eddf5833848c0. @linev do you see an obvious problem / have an idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:130,reliability,doe,doesn,130,"@linev no, it *is* this precise commit 3ac1d584c821d21e4fae789f595eddf5833848c0. I bisected it, the one before works and that one doesn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:160,deployability,fail,failing,160,"https://github.com/root-project/root/pull/11822#issuecomment-1337446119 is not about `hstack.C` (please note the ""except"" in my comment). It is about the other failing tests reported in https://github.com/root-project/root/pull/11822#issuecomment-1335125359 and still present, see for example https://github.com/root-project/root/pull/11830#issuecomment-1337503041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:160,reliability,fail,failing,160,"https://github.com/root-project/root/pull/11822#issuecomment-1337446119 is not about `hstack.C` (please note the ""except"" in my comment). It is about the other failing tests reported in https://github.com/root-project/root/pull/11822#issuecomment-1335125359 and still present, see for example https://github.com/root-project/root/pull/11830#issuecomment-1337503041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:114,safety,except,except,114,"https://github.com/root-project/root/pull/11822#issuecomment-1337446119 is not about `hstack.C` (please note the ""except"" in my comment). It is about the other failing tests reported in https://github.com/root-project/root/pull/11822#issuecomment-1335125359 and still present, see for example https://github.com/root-project/root/pull/11830#issuecomment-1337503041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:168,safety,test,tests,168,"https://github.com/root-project/root/pull/11822#issuecomment-1337446119 is not about `hstack.C` (please note the ""except"" in my comment). It is about the other failing tests reported in https://github.com/root-project/root/pull/11822#issuecomment-1335125359 and still present, see for example https://github.com/root-project/root/pull/11830#issuecomment-1337503041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:168,testability,test,tests,168,"https://github.com/root-project/root/pull/11822#issuecomment-1337446119 is not about `hstack.C` (please note the ""except"" in my comment). It is about the other failing tests reported in https://github.com/root-project/root/pull/11822#issuecomment-1335125359 and still present, see for example https://github.com/root-project/root/pull/11830#issuecomment-1337503041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/issues/11823:128,deployability,manag,manager,128,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:394,deployability,manag,manager,394,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:128,energy efficiency,manag,manager,128,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:394,energy efficiency,manag,manager,394,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:430,performance,time,time,430,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:314,reliability,Pra,Practically,314,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:128,safety,manag,manager,128,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:394,safety,manag,manager,394,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:120,testability,context,context,120,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:300,testability,context,context,300,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:386,testability,context,context,386,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:194,usability,Close,Close,194,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:369,usability,close,closed,369,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:440,usability,Close,Close,440,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:495,usability,Close,Close,495,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:548,usability,behavi,behaviour,548,"Hi @austindsc ,. Thanks for reaching out! Let me first ask you a clarification. The whole purpose of using `TFile` as a context manager like you are doing is so that you don't have to call the `Close` method manually. Whereas I see from your example that you are still calling that method before the context ends. Practically, this means that your file will already be closed, then the context manager machinery will call another time the `Close` method. Can you try without calling explicitly `Close` and see if you can still reproduce the random behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:13,deployability,updat,update,13,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:36,deployability,build,build,36,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:51,energy efficiency,current,current,51,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:133,performance,time,times,133,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:13,safety,updat,update,13,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:13,security,updat,update,13,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:187,testability,simpl,simpler,187,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:187,usability,simpl,simpler,187,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:300,usability,Close,Close,300,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:311,usability,Close,Close,311,"Just a small update,. I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:. ```python. import ROOT. f = ROOT.TFile(""file1.root"", ""recreate""). f.Close(). f.Close(). ```. So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:79,usability,Close,Close,79,"Hi @austindsc ,. Any news on your side? Did you try without the extra `outfile.Close()` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:130,availability,error,errors,130,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:207,availability,reboot,rebooted,207,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:130,performance,error,errors,130,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:111,reliability,doe,does,111,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:187,reliability,doe,does,187,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:334,reliability,doe,doesn,334,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:130,safety,error,errors,130,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:92,testability,simpl,simpler,92,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:92,usability,simpl,simpler,92,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:130,usability,error,errors,130,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:169,usability,Close,Close,169,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:370,usability,help,help,370,"@vepadulano thanks for the reply! (got caught up with some other work in the meantime). the simpler reproducer does not throw any errors, and removing the extra outfile.Close() no longer does as well. I had rebooted my computer and re-sourced thisroot.sh, so maybe there was something bad being referenced? Not sure. Hopefully issues doesn't arise again. Thanks for the help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/pull/11826:35,safety,review,review,35,"Dear @lmoneta,. Could you, please, review this pull request? It was created 8 months ago, but no any progress since that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:35,testability,review,review,35,"Dear @lmoneta,. Could you, please, review this pull request? It was created 8 months ago, but no any progress since that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:101,usability,progress,progress,101,"Dear @lmoneta,. Could you, please, review this pull request? It was created 8 months ago, but no any progress since that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:430,availability,toler,tolerance,430,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:480,availability,toler,tolerance,480,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:639,modifiability,maintain,maintain,639,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:430,reliability,toleran,tolerance,430,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:480,reliability,toleran,tolerance,480,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11826:639,safety,maintain,maintain,639,"Apologies for the late reply. It is true these hard-coded conditions look to me arbitrary and they can be dropped. . they were introduced many years ago only in the ROOT implementation, see . https://github.com/root-project/root/commit/3f944083fe77f0417904ad3180fb71eb846d4cc8. but they are not part of the original CERNLIB code. In addition, some years ago we have added the possibility to use both the relative and the absolute tolerance, see line 338 (before only the relative tolerance was used). . ```. if ( ( relerr < epsrel || abserr < epsabs ) && ifncls >= minpts) fStatus = 0; . ```. With these changes there is really no need to maintain these lines and we can revert this old commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11826
https://github.com/root-project/root/pull/11830:49,availability,repair,repair,49,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:68,availability,state,state,68,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:6,deployability,build,builds,6,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:27,energy efficiency,green,green,27,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:60,energy efficiency,current,current,60,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:68,integrability,state,state,68,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:49,reliability,repair,repair,49,"First builds are coming in green; I'm merging to repair the current state of affairs... Thanks, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:4,deployability,fail,failing,4,The failing tests on CentOS 8 are starting to be discussed here: https://github.com/root-project/root/pull/11822#issuecomment-1337446119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:4,reliability,fail,failing,4,The failing tests on CentOS 8 are starting to be discussed here: https://github.com/root-project/root/pull/11822#issuecomment-1337446119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:12,safety,test,tests,12,The failing tests on CentOS 8 are starting to be discussed here: https://github.com/root-project/root/pull/11822#issuecomment-1337446119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:12,testability,test,tests,12,The failing tests on CentOS 8 are starting to be discussed here: https://github.com/root-project/root/pull/11822#issuecomment-1337446119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:283,integrability,messag,message,283,"> Commit [e97f74d](https://github.com/root-project/root/commit/e97f74d67e4cf4133d431ffabda283e924fb1bb6) changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0. Yes, see my commit message quoted here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:283,interoperability,messag,message,283,"> Commit [e97f74d](https://github.com/root-project/root/commit/e97f74d67e4cf4133d431ffabda283e924fb1bb6) changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0. Yes, see my commit message quoted here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:243,safety,test,test,243,"> Commit [e97f74d](https://github.com/root-project/root/commit/e97f74d67e4cf4133d431ffabda283e924fb1bb6) changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0. Yes, see my commit message quoted here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11830:243,testability,test,test,243,"> Commit [e97f74d](https://github.com/root-project/root/commit/e97f74d67e4cf4133d431ffabda283e924fb1bb6) changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0. Yes, see my commit message quoted here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11830
https://github.com/root-project/root/pull/11833:337,deployability,roll,roll,337,"Indeed these one are mentioned having a return code:. ```. graphs/timeonaxis.C. graphs/timeonaxis2.C. graphs/timeonaxis3.C. graphs/exclusiongraph.C. graphs/graphstruct.C. ```. I thought that was leftovers from the days the THTML needed canvas as returned parameter to display it. But may be not. I am not sure what is needed now. I will roll back these changes. Thanks again,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11833
https://github.com/root-project/root/pull/11833:255,modifiability,paramet,parameter,255,"Indeed these one are mentioned having a return code:. ```. graphs/timeonaxis.C. graphs/timeonaxis2.C. graphs/timeonaxis3.C. graphs/exclusiongraph.C. graphs/graphstruct.C. ```. I thought that was leftovers from the days the THTML needed canvas as returned parameter to display it. But may be not. I am not sure what is needed now. I will roll back these changes. Thanks again,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11833
https://github.com/root-project/root/pull/11833:66,performance,time,timeonaxis,66,"Indeed these one are mentioned having a return code:. ```. graphs/timeonaxis.C. graphs/timeonaxis2.C. graphs/timeonaxis3.C. graphs/exclusiongraph.C. graphs/graphstruct.C. ```. I thought that was leftovers from the days the THTML needed canvas as returned parameter to display it. But may be not. I am not sure what is needed now. I will roll back these changes. Thanks again,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11833
https://github.com/root-project/root/pull/11833:177,modifiability,paramet,parameter,177,Indeed I see that this was done on some macros some time ago. Like [arrow.C](https://github.com/root-project/root/commit/c83b88c433637693489991a179384956f6aa1c4d). The returned parameter was removed but arrow.C is still mentioned in the [CMakeLists.txt](https://github.com/root-project/root/blob/683f1721b8babc4481bec68265b6e0bdb49d8743/tutorials/CMakeLists.txt#L444),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11833
https://github.com/root-project/root/pull/11833:52,performance,time,time,52,Indeed I see that this was done on some macros some time ago. Like [arrow.C](https://github.com/root-project/root/commit/c83b88c433637693489991a179384956f6aa1c4d). The returned parameter was removed but arrow.C is still mentioned in the [CMakeLists.txt](https://github.com/root-project/root/blob/683f1721b8babc4481bec68265b6e0bdb49d8743/tutorials/CMakeLists.txt#L444),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11833
https://github.com/root-project/root/pull/11840:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11840
https://github.com/root-project/root/pull/11843:230,reliability,doe,does,230,"> this is only a minor quality of life improvement. I'm not sure I agree, having repeated `rdfentry_` values across tasks can potentially break workflows. I understand the problem though. Let's try to come up with a solution that does not break `rdfentry_`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:157,testability,understand,understand,157,"> this is only a minor quality of life improvement. I'm not sure I agree, having repeated `rdfentry_` values across tasks can potentially break workflows. I understand the problem though. Let's try to come up with a solution that does not break `rdfentry_`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:144,usability,workflow,workflows,144,"> this is only a minor quality of life improvement. I'm not sure I agree, having repeated `rdfentry_` values across tasks can potentially break workflows. I understand the problem though. Let's try to come up with a solution that does not break `rdfentry_`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:0,deployability,Updat,Updated,0,"Updated status after implementing the suggestions:. * The free function is declared in `RInterface.hxx` and defined in the new file `RInterface.cxx`, no need for an extra pair of header/implementation files. * The definition is done by the fully-qualified name instead of re-opening the namespace also in the implementation file. * The argument `RNode` is taken by const ref. * The begin and end entries used when processing the empty source are now offset by, respectively, the values `fEmptyEntryRange.first` and `fEmptyEntryRange.second` *both* in the sequential and MT cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:0,safety,Updat,Updated,0,"Updated status after implementing the suggestions:. * The free function is declared in `RInterface.hxx` and defined in the new file `RInterface.cxx`, no need for an extra pair of header/implementation files. * The definition is done by the fully-qualified name instead of re-opening the namespace also in the implementation file. * The argument `RNode` is taken by const ref. * The begin and end entries used when processing the empty source are now offset by, respectively, the values `fEmptyEntryRange.first` and `fEmptyEntryRange.second` *both* in the sequential and MT cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:0,security,Updat,Updated,0,"Updated status after implementing the suggestions:. * The free function is declared in `RInterface.hxx` and defined in the new file `RInterface.cxx`, no need for an extra pair of header/implementation files. * The definition is done by the fully-qualified name instead of re-opening the namespace also in the implementation file. * The argument `RNode` is taken by const ref. * The begin and end entries used when processing the empty source are now offset by, respectively, the values `fEmptyEntryRange.first` and `fEmptyEntryRange.second` *both* in the sequential and MT cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11843:8,usability,statu,status,8,"Updated status after implementing the suggestions:. * The free function is declared in `RInterface.hxx` and defined in the new file `RInterface.cxx`, no need for an extra pair of header/implementation files. * The definition is done by the fully-qualified name instead of re-opening the namespace also in the implementation file. * The argument `RNode` is taken by const ref. * The begin and end entries used when processing the empty source are now offset by, respectively, the values `fEmptyEntryRange.first` and `fEmptyEntryRange.second` *both* in the sequential and MT cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11843
https://github.com/root-project/root/pull/11844:67,availability,error,error,67,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:96,deployability,build,build,96,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:116,deployability,fail,failing,116,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:163,deployability,build,build,163,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:327,deployability,configurat,configuration,327,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:327,integrability,configur,configuration,327,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:327,modifiability,configur,configuration,327,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:67,performance,error,error,67,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:116,reliability,fail,failing,116,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:67,safety,error,error,67,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:327,security,configur,configuration,327,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:25,usability,help,help,25,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:67,usability,error,error,67,"@amadio you will need to help me out here. I have no idea what the error is about. What sort of build is it that is failing? It seems to me that it's attempting a build with `builtin_vdt=TRUE`. But that worked for me with these changes just fine. Also, how the heck is a generated `ROOTConfig.cmake` file being used during the configuration of ROOT itself? :confused:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:460,availability,error,error,460,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:59,deployability,fail,fails,59,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:82,deployability,version,version,82,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:114,deployability,configurat,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:278,deployability,configurat,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:390,deployability,build,builds,390,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:563,deployability,version,version,563,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:595,deployability,build,build,595,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:666,deployability,build,build,666,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:672,deployability,instal,install,672,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:716,deployability,build,build,716,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:732,deployability,configurat,configuration,732,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:82,integrability,version,version,82,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:114,integrability,configur,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:278,integrability,configur,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:563,integrability,version,version,563,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:732,integrability,configur,configuration,732,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:82,modifiability,version,version,82,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:114,modifiability,configur,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:278,modifiability,configur,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:563,modifiability,version,version,563,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:732,modifiability,configur,configuration,732,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:460,performance,error,error,460,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:722,performance,time,time,722,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:746,performance,time,time,746,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:59,reliability,fail,fails,59,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:460,safety,error,error,460,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:114,security,configur,configuration,114,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:278,security,configur,configuration,278,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:732,security,configur,configuration,732,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:161,usability,learn,learned,161,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:460,usability,error,error,460,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself? That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:9,availability,failur,failure,9,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:35,availability,fault,fault,35,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:9,deployability,fail,failure,9,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:35,energy efficiency,fault,fault,35,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:65,energy efficiency,current,current,65,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:9,performance,failur,failure,9,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:35,performance,fault,fault,35,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:9,reliability,fail,failure,9,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:35,reliability,fault,fault,35,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:35,safety,fault,fault,35,"BTW, the failure above is not your fault, but a problem with the current CI. You need to fork also `roottest` to make it go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1054,availability,error,error,1054,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:203,deployability,build,build,203,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:237,deployability,build,build,237,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:657,deployability,build,build,657,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:691,deployability,build,build,691,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:871,deployability,build,build,871,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:905,deployability,build,build,905,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1054,performance,error,error,1054,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1054,safety,error,error,1054,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:126,testability,verif,verify,126,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:85,usability,COMMAND,COMMAND,85,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:471,usability,COMMAND,COMMAND,471,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1054,usability,error,error,1054,"```. 13:00:08 -- Checking if krasznaa-VdtUsageFix-master-20221206 exists: [Executing COMMAND;/usr/bin/git;rev-parse;--quiet;--verify;krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/]. 13:00:08 stdout: . 13:00:08 stderr: . 13:00:08 -- Fetching from https://INVALID:INVALID@github.com/krasznaa/roottest.git branch VdtUsageFix-master-20221206 as krasznaa-VdtUsageFix-master-20221206: [Executing COMMAND;/usr/bin/git;fetch;-p;[https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/root/../roottest/](https://INVALID:INVALID@github.com/krasznaa/roottest.git;VdtUsageFix-master-20221206:krasznaa-VdtUsageFix-master-20221206;WORKING_DIRECTORY;/home/sftnight/build/workspace/root-pullrequests-build/roottest/)]. 13:00:08 stdout: . 13:00:08 stderr: fatal: Couldn't find remote ref VdtUsageFix-master-20221206. ```. BTW, was talking about this error above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:383,availability,error,error,383,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1161,availability,avail,available,1161,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1197,availability,robust,robust,1197,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:69,deployability,manag,manage,69,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:107,deployability,infrastructur,infrastructure,107,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:686,deployability,updat,updated,686,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:853,deployability,configurat,configuration,853,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:929,deployability,configurat,configurations,929,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1039,deployability,build,build,1039,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:69,energy efficiency,manag,manage,69,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:325,integrability,repositor,repository,325,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:389,integrability,messag,message,389,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:615,integrability,repositor,repositories,615,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:853,integrability,configur,configuration,853,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:929,integrability,configur,configurations,929,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:325,interoperability,repositor,repository,325,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:389,interoperability,messag,message,389,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:615,interoperability,repositor,repositories,615,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:853,modifiability,configur,configuration,853,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:929,modifiability,configur,configurations,929,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:24,performance,time,time,24,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:220,performance,time,time,220,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:383,performance,error,error,383,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1161,reliability,availab,available,1161,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1197,reliability,robust,robust,1197,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:69,safety,manag,manage,69,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:99,safety,test,testing,99,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:383,safety,error,error,383,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:409,safety,compl,complained,409,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:686,safety,updat,updated,686,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1161,safety,avail,available,1161,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1197,safety,robust,robust,1197,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:409,security,compl,complained,409,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:638,security,modif,modification,638,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:686,security,updat,updated,686,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:853,security,configur,configuration,853,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:929,security,configur,configurations,929,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1161,security,availab,available,1161,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:99,testability,test,testing,99,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:383,usability,error,error,383,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:1061,usability,usab,usable,1061,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT? After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:245,deployability,pipelin,pipelines,245,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:350,deployability,build,build,350,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:386,deployability,build,build,386,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:434,deployability,fail,fail,434,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:206,integrability,repositor,repository,206,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:245,integrability,pipelin,pipelines,245,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:206,interoperability,repositor,repository,206,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:434,reliability,fail,fail,434,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:65,safety,test,test,65,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:108,safety,test,test,108,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:302,safety,test,test,302,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:463,safety,test,test,463,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:65,testability,test,test,65,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:108,testability,test,test,108,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:302,testability,test,test,302,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:463,testability,test,test,463,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:26,usability,hint,hint,26,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:63,safety,test,test,63,@krasznaa see https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L409-L445.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:63,testability,test,test,63,@krasznaa see https://github.com/root-project/root/blob/master/test/CMakeLists.txt#L409-L445.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:26,deployability,build,build,26,Silly me with the Windows build...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:12,availability,error,error,12,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:103,interoperability,platform,platforms,103,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:12,performance,error,error,12,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:12,safety,error,error,12,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:12,usability,error,error,12,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:14,availability,error,error,14,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:447,availability,sli,slightly,447,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:239,deployability,build,build,239,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:649,deployability,build,build,649,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:725,deployability,fail,failing,725,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:105,interoperability,platform,platforms,105,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:330,modifiability,variab,variable,330,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:546,modifiability,variab,variable,546,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:14,performance,error,error,14,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:540,performance,cach,cache,540,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:447,reliability,sli,slightly,447,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:725,reliability,fail,failing,725,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:14,safety,error,error,14,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:563,safety,test,test,563,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:563,testability,test,test,563,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:14,usability,error,error,14,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms? I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:61,energy efficiency,current,current,61,After just having stumbled over this once again. What is the current status of this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:69,usability,statu,status,69,After just having stumbled over this once again. What is the current status of this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:138,deployability,build,builds,138,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:65,safety,test,test,65,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:148,safety,compl,complete,148,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:148,security,compl,complete,148,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:65,testability,test,test,65,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:122,deployability,build,builds,122,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:86,safety,test,test,86,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:198,safety,test,test,198,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:86,testability,test,test,86,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:107,testability,context,context,107,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11844:198,testability,test,test,198,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11844
https://github.com/root-project/root/pull/11845:303,deployability,releas,release,303,"Please note that the line ""cherry picked from commit"" isn't useful / even confusing because the original commit already got amended and even if not, either rebasing or squashing to ""merge"" would change the commit hash. (In general I would argue that commits should always be picked from `master` to the release branches to guarantee that fixes are never forgotten, but that's another discussion...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:213,security,hash,hash,213,"Please note that the line ""cherry picked from commit"" isn't useful / even confusing because the original commit already got amended and even if not, either rebasing or squashing to ""merge"" would change the commit hash. (In general I would argue that commits should always be picked from `master` to the release branches to guarantee that fixes are never forgotten, but that's another discussion...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:0,availability,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:0,performance,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:0,safety,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:12,safety,compl,completely,12,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:12,security,compl,completely,12,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11845:0,usability,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11845
https://github.com/root-project/root/pull/11846:15,deployability,log,log,15,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:82,deployability,fail,fails,82,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:82,reliability,fail,fails,82,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:15,safety,log,log,15,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:15,security,log,log,15,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:15,testability,log,log,15,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:49,usability,hint,hint,49,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:0,availability,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:0,performance,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:0,safety,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:12,safety,compl,completely,12,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:12,security,compl,completely,12,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11846:0,usability,Error,Errors,0,Errors seem completely unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11846
https://github.com/root-project/root/pull/11850:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11850
https://github.com/root-project/root/pull/11851:369,safety,reme,remember,369,"Sorry to annoy you with this, but for all the new files you created we need a copyright header (see any recent RooFit file for example [this one](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooFitDriver.cxx) to see how it should look like). Similar to this I guess:. ```C++. /*. * Project: RooFit. * Author:. * Will Buttinger, RAL 2022 (if I remember correctly, sorry it it's wrong). *. * Copyright (c) 2022, CERN. *. * Redistribution and use in source and binary forms,. * with or without modification, are permitted according to the terms. * listed in LICENSE (http://roofit.sourceforge.net/license.txt). */. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:327,security,Auth,Author,327,"Sorry to annoy you with this, but for all the new files you created we need a copyright header (see any recent RooFit file for example [this one](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooFitDriver.cxx) to see how it should look like). Similar to this I guess:. ```C++. /*. * Project: RooFit. * Author:. * Will Buttinger, RAL 2022 (if I remember correctly, sorry it it's wrong). *. * Copyright (c) 2022, CERN. *. * Redistribution and use in source and binary forms,. * with or without modification, are permitted according to the terms. * listed in LICENSE (http://roofit.sourceforge.net/license.txt). */. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:517,security,modif,modification,517,"Sorry to annoy you with this, but for all the new files you created we need a copyright header (see any recent RooFit file for example [this one](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooFitDriver.cxx) to see how it should look like). Similar to this I guess:. ```C++. /*. * Project: RooFit. * Author:. * Will Buttinger, RAL 2022 (if I remember correctly, sorry it it's wrong). *. * Copyright (c) 2022, CERN. *. * Redistribution and use in source and binary forms,. * with or without modification, are permitted according to the terms. * listed in LICENSE (http://roofit.sourceforge.net/license.txt). */. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/pull/11851:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11851
https://github.com/root-project/root/issues/11853:879,deployability,build,build,879,"As a matter of fact, I think I do:. ```C++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <gsl/span>. #include <memory>. #include <vector>. #include <arpa/inet.h>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. bool mVLA = true;. std::unique_ptr<TBufferFile> offsetBuffer = nullptr;. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. // other types: use serialized read to build arrays directly. std::vector<char> arrowValuesBuffer;. arrowValuesBuffer.resize(mBranch->GetTotBytes());. auto ptr = arrowValuesBuffer.data();. auto typeSize = TDataType::GetDataType(mType)->Size();. uint32_t offset = 0;. int count = 0;. std::vector<char> arrowOffsetBuffer;. gsl::span<int> offsets;. int size = 0;. uint32_t totalSize = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4404,deployability,Depend,Depending,4404,";. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4476,energy efficiency,alloc,allocations,4476,"ucer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'700 TFile::Open(char const*, char const*, char const*, int, int) [clone .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4523,energy efficiency,profil,profile,4523,"roducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'700 TFile::Open(char const*, char const*, char const*, int, int) [clone .localalias] [13]. 2.5 36'568'432 11'239 TUrl:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:267,integrability,buffer,buffer,267,"As a matter of fact, I think I do:. ```C++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <gsl/span>. #include <memory>. #include <vector>. #include <arpa/inet.h>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. bool mVLA = true;. std::unique_ptr<TBufferFile> offsetBuffer = nullptr;. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. // other types: use serialized read to build arrays directly. std::vector<char> arrowValuesBuffer;. arrowValuesBuffer.resize(mBranch->GetTotBytes());. auto ptr = arrowValuesBuffer.data();. auto typeSize = TDataType::GetDataType(mType)->Size();. uint32_t offset = 0;. int count = 0;. std::vector<char> arrowOffsetBuffer;. gsl::span<int> offsets;. int size = 0;. uint32_t totalSize = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:822,integrability,buffer,buffer,822,"As a matter of fact, I think I do:. ```C++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <gsl/span>. #include <memory>. #include <vector>. #include <arpa/inet.h>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. bool mVLA = true;. std::unique_ptr<TBufferFile> offsetBuffer = nullptr;. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. // other types: use serialized read to build arrays directly. std::vector<char> arrowValuesBuffer;. arrowValuesBuffer.resize(mBranch->GetTotBytes());. auto ptr = arrowValuesBuffer.data();. auto typeSize = TDataType::GetDataType(mType)->Size();. uint32_t offset = 0;. int count = 0;. std::vector<char> arrowOffsetBuffer;. gsl::span<int> offsets;. int size = 0;. uint32_t totalSize = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:2214,integrability,buffer,buffer,2214,"ze = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer->GetCurrent())[i]);. }. }. offsets[count] = (int)offset;. totalSize = offset;. readEntries = 0;. }. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. if (mVLA) {. size = offsets[readEntries + readLast] - offsets[readEntries];. } else {. size = readLast * mListSize;. }. readEntries += readLast;. memcpy(ptr, buffer->GetCurrent(), size * typeSize);. ptr += (ptrdiff_t)(size * typeSize);. }. if (!mVLA) {. totalSize = readEntries * mListSize;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:2382,integrability,buffer,buffer,2382,"File>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer->GetCurrent())[i]);. }. }. offsets[count] = (int)offset;. totalSize = offset;. readEntries = 0;. }. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. if (mVLA) {. size = offsets[readEntries + readLast] - offsets[readEntries];. } else {. size = readLast * mListSize;. }. readEntries += readLast;. memcpy(ptr, buffer->GetCurrent(), size * typeSize);. ptr += (ptrdiff_t)(size * typeSize);. }. if (!mVLA) {. totalSize = readEntries * mListSize;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. repro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4404,integrability,Depend,Depending,4404,";. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4404,modifiability,Depend,Depending,4404,";. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:181,performance,memor,memory,181,"As a matter of fact, I think I do:. ```C++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <gsl/span>. #include <memory>. #include <vector>. #include <arpa/inet.h>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. bool mVLA = true;. std::unique_ptr<TBufferFile> offsetBuffer = nullptr;. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. // other types: use serialized read to build arrays directly. std::vector<char> arrowValuesBuffer;. arrowValuesBuffer.resize(mBranch->GetTotBytes());. auto ptr = arrowValuesBuffer.data();. auto typeSize = TDataType::GetDataType(mType)->Size();. uint32_t offset = 0;. int count = 0;. std::vector<char> arrowOffsetBuffer;. gsl::span<int> offsets;. int size = 0;. uint32_t totalSize = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4426,performance,time,times,4426,"eproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'700 TFile::Open(char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4523,performance,profil,profile,4523,"roducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'700 TFile::Open(char const*, char const*, char const*, int, int) [clone .localalias] [13]. 2.5 36'568'432 11'239 TUrl:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:2730,safety,test,testdata,2730,"talEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer->GetCurrent())[i]);. }. }. offsets[count] = (int)offset;. totalSize = offset;. readEntries = 0;. }. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. if (mVLA) {. size = offsets[readEntries + readLast] - offsets[readEntries];. } else {. size = readLast * mListSize;. }. readEntries += readLast;. memcpy(ptr, buffer->GetCurrent(), size * typeSize);. ptr += (ptrdiff_t)(size * typeSize);. }. if (!mVLA) {. totalSize = readEntries * mListSize;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4404,safety,Depend,Depending,4404,";. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:2730,testability,test,testdata,2730,"talEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer->GetCurrent())[i]);. }. }. offsets[count] = (int)offset;. totalSize = offset;. readEntries = 0;. }. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. if (mVLA) {. size = offsets[readEntries + readLast] - offsets[readEntries];. } else {. size = readLast * mListSize;. }. readEntries += readLast;. memcpy(ptr, buffer->GetCurrent(), size * typeSize);. ptr += (ptrdiff_t)(size * typeSize);. }. if (!mVLA) {. totalSize = readEntries * mListSize;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4404,testability,Depend,Depending,4404,";. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]. 2.8 40'642'462 24'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:181,usability,memor,memory,181,"As a matter of fact, I think I do:. ```C++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <gsl/span>. #include <memory>. #include <vector>. #include <arpa/inet.h>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. bool mVLA = true;. std::unique_ptr<TBufferFile> offsetBuffer = nullptr;. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. // other types: use serialized read to build arrays directly. std::vector<char> arrowValuesBuffer;. arrowValuesBuffer.resize(mBranch->GetTotBytes());. auto ptr = arrowValuesBuffer.data();. auto typeSize = TDataType::GetDataType(mType)->Size();. uint32_t offset = 0;. int count = 0;. std::vector<char> arrowOffsetBuffer;. gsl::span<int> offsets;. int size = 0;. uint32_t totalSize = 0;. if (mVLA) {. auto mSizeBranch = mBranch->GetTree()->GetBranch(. (std::string{mBranch->GetName()} + ""_size"").c_str());. offsetBuffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. arrowOffsetBuffer.resize((totalEntries + 1) * (int64_t)sizeof(int));. auto* ptrOffset = (unsigned char*)arrowOffsetBuffer.data();. auto* tPtrOffset = reinterpret_cast<int*>(ptrOffset);. offsets = gsl::span<int>{tPtrOffset, tPtrOffset + totalEntries + 1};. // read sizes first. while (readEntries < totalEntries) {. auto readLast = mSizeBranch->GetBulkRead().GetEntriesSerialized(. readEntries, *offsetBuffer);. readEntries += readLast;. for (auto i = 0; i < readLast; ++i) {. offsets[count++] = (int)offset;. offset +=. ntohl(reinterpret_cast<uint32_t*>(offsetBuffer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:4375,usability,Close,Close,4375,". reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. reproducer(f);. f->Close();. return 0;. }. ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```. Flat profile (cumulative >= 1%). % total Total Calls Function. 100.0 1'441'603'989 32'730 <spontaneous> [1]. 100.0 1'441'593'885 32'636 _start [2]. 100.0 1'441'593'885 32'636 __libc_start_main [3]. 100.0 1'441'593'885 32'636 main [4]. 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]. 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]. 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]. 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]. 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]. 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]. 96.9 1'397'435'904 480 TBufferFile::ReadArray(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:66,safety,test,testdata,66,You should be able to use http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root for the input...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:176,safety,input,input,176,You should be able to use http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root for the input...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:66,testability,test,testdata,66,You should be able to use http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root for the input...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:176,usability,input,input,176,You should be able to use http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root for the input...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:0,availability,Ping,Pinging,0,Pinging other interested parties @aalkin @jgrosseo @pzhristov.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:39,availability,fault,fault,39,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:524,availability,operat,operator,524,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:15,deployability,fail,fails,15,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:39,energy efficiency,fault,fault,39,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:492,energy efficiency,alloc,alloc,492,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:39,performance,fault,fault,39,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:15,reliability,fail,fails,15,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:39,reliability,fault,fault,39,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:39,safety,fault,fault,39,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:283,safety,test,test,283,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:376,safety,test,test,376,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1366,safety,test,test,1366,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1543,safety,test,test,1543,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1651,safety,test,test,1651,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1744,safety,test,test,1744,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:283,testability,test,test,283,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:376,testability,test,test,376,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1366,testability,test,test,1366,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1543,testability,test,test,1543,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1651,testability,test,test,1651,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1744,testability,test,test,1744,"The reproducer fails for me with a seg fault and the following valgrind report:. ```. ==2486== Invalid read of size 2. ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd. ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283). ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242). ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418). ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585). ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266). ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388). ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550). ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) . ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak). ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:63,interoperability,specif,specific,63,Some more investigations: the issue seems to be related to the specific branch in the example. The same code with the O2track tree and the fX branch is working fine and the memory is correctly cleaned at each iteration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:173,performance,memor,memory,173,Some more investigations: the issue seems to be related to the specific branch in the example. The same code with the O2track tree and the fX branch is working fine and the memory is correctly cleaned at each iteration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:173,usability,memor,memory,173,Some more investigations: the issue seems to be related to the specific branch in the example. The same code with the O2track tree and the fX branch is working fine and the memory is correctly cleaned at each iteration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:207,integrability,buffer,buffer,207,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:811,integrability,buffer,buffer,811,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:942,integrability,buffer,buffer,942,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:145,performance,memor,memory,145,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1625,performance,memor,memory,1625,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1192,safety,test,testdata,1192,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1192,testability,test,testdata,1192,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:0,usability,Minim,Minimal,0,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:145,usability,memor,memory,145,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1355,usability,Close,Close,1355,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1625,usability,memor,memory,1625,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1661,usability,confirm,confirmed,1661,"Minimal reproducer:. ```c++. #include <TBufferFile.h>. #include <TFile.h>. #include <TLeaf.h>. #include <TTree.h>. #include <cstring>. #include <memory>. #include <vector>. void reproducer(TFile *f) {. auto buffer =. std::make_unique<TBufferFile>(TBuffer::EMode::kWrite, 4 * 1024 * 1024);. auto* d = (TDirectoryFile*)f->Get(""DF_2798302689213306054;1"");. auto* t = (TTree*)d->Get(""O2mcparticle_001;1"");. auto* mBranch = t->GetBranch(""fIndexArray_Mothers"");. // Using O2track/fX works just fine. // auto* t = (TTree*)d->Get(""O2track;1"");. // auto* mBranch = t->GetBranch(""fX"");. static TClass* cls;. EDataType mType;. int mListSize =. static_cast<TLeaf*>(mBranch->GetListOfLeaves()->At(0))->GetLenStatic();. mBranch->GetExpectedType(cls, mType);. auto totalEntries = mBranch->GetEntries();. int readEntries = 0;. buffer->Reset();. while (readEntries < totalEntries) {. auto readLast =. mBranch->GetBulkRead().GetEntriesSerialized(readEntries, *buffer);. readEntries += readLast;. }. mBranch->SetStatus(false);. mBranch->DropBaskets(""all"");. mBranch->Reset();. mBranch->GetTransientBuffer(0)->Expand(0);. }. int main(int argc, char** argv) {. auto* f = TFile::Open(""/home/alitrain/train-workdir/testdata/LFN/alice/sim/2021/LHC21i5a/279830/PWGZZ/Run3_Conversion/391_20220829-1326/AOD/024/AO2D.root"");. for (size_t i = 0; i < 60; i++) {. reproducer(f);. }. f->Close();. return 0;. }. ```. Running it with:. ```bash. #!/bin/sh -ex. c++ reproducer.cc -I$ROOTSYS/include -L$ROOTSYS/lib -lCore -lRIO -lTree -std=c++17. rm igprof.*. igprof -mp ./a.out. igprof-analyse -r MEM_LIVE -d -g igprof.a.out.*| less -S. ```. shows 1GB worth of memory retained until the end, also confirmed without igprof and using top.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:78,availability,error,error,78,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:940,energy efficiency,optim,optimized,940,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1031,energy efficiency,optim,optimized,1031,"c 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1303,energy efficiency,alloc,allocator,1303,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1484,energy efficiency,alloc,allocator,1484,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1678,energy efficiency,alloc,allocator,1678,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1744,energy efficiency,optim,optimized,1744,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1856,energy efficiency,alloc,allocator,1856,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1916,energy efficiency,optim,optimized,1916,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:78,performance,error,error,78,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:940,performance,optimiz,optimized,940,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1031,performance,optimiz,optimized,1031,"c 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1744,performance,optimiz,optimized,1744,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:1916,performance,optimiz,optimized,1916,"mentation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b in reproducer (f=0x5555569022a0) at bulkleak.cxx:90. #15 0x0000555555559de9 in main (argc=1, argv=0x7fffffffd6a8) at bulkleak.cxx:96. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:78,safety,error,error,78,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:159,security,sign,signo,159,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:251,security,sign,signo,251,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:365,security,sign,signo,365,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:371,security,sign,signo,371,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:78,usability,error,error,78,"For the record, with v6.26/04 and gcc 11.3 Ubuntu 22. I get the same valgrind error and the following crash:. ```. #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:44. #1 __pthread_kill_internal (signo=6, threadid=140737323350784) at ./nptl/pthread_kill.c:78. #2 __GI___pthread_kill (threadid=140737323350784, signo=signo@entry=6) at ./nptl/pthread_kill.c:89. #3 0x00007ffff6cbc476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26. #4 0x00007ffff6ca27f3 in __GI_abort () at ./stdlib/abort.c:79. #5 0x00007ffff6d036f6 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff6e55b8c ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155. #6 0x00007ffff6d1ad7c in malloc_printerr (str=str@entry=0x7ffff6e587b0 ""double free or corruption (out)"") at ./malloc/malloc.c:5664. #7 0x00007ffff6d1cef0 in _int_free (av=0x7ffff6e93c80 <main_arena>, p=0x7fffe2896000, have_lock=<optimized out>) at ./malloc/malloc.c:4588. #8 0x00007ffff6d1f4d3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391. #9 0x000055555555b133 in __gnu_cxx::new_allocator<char>::deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __t=27601898) at /usr/include/c++/11/ext/new_allocator.h:145 . #10 0x000055555555ae34 in std::allocator_traits<std::allocator<char> >::deallocate (__a=..., __p=0x7fffe2896010 """", __n=27601898) at /usr/include/c++/11/bits/alloc_traits.h:496 . #11 0x000055555555a82c in std::_Vector_base<char, std::allocator<char> >::_M_deallocate (this=0x7fffffffd4b0, __p=0x7fffe2896010 """", __n=27601898). at /usr/include/c++/11/bits/stl_vector.h:354. #12 0x000055555555a32c in std::_Vector_base<char, std::allocator<char> >::~_Vector_base (this=0x7fffffffd4b0, __in_chrg=<optimized out>). at /usr/include/c++/11/bits/stl_vector.h:335. #13 0x000055555555a381 in std::vector<char, std::allocator<char> >::~vector (this=0x7fffffffd4b0, __in_chrg=<optimized out>) at /usr/include/c++/11/bits/stl_vector.h:683. #14 0x0000555555559c9b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:9,deployability,fail,fails,9,and mine fails after 2 iterations ... ok now onto debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:9,reliability,fail,fails,9,and mine fails after 2 iterations ... ok now onto debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:37,safety,compl,completion,37,Note: the minimal reproducer runs to completion (in valgrind too) also for me. So there might be 2 distinct issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:37,security,compl,completion,37,Note: the minimal reproducer runs to completion (in valgrind too) also for me. So there might be 2 distinct issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:10,usability,minim,minimal,10,Note: the minimal reproducer runs to completion (in valgrind too) also for me. So there might be 2 distinct issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:148,integrability,buffer,buffers,148,Do you see the same memory usage? Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:20,performance,memor,memory,20,Do you see the same memory usage? Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:93,testability,simpl,simply,93,Do you see the same memory usage? Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:20,usability,memor,memory,20,Do you see the same memory usage? Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:93,usability,simpl,simply,93,Do you see the same memory usage? Also notice that the issue with the first reproducer might simply be some issue with my attempt to swap the arrow buffers for the std::vector.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:14,availability,error,error,14,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:79,availability,fault,fault,79,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:143,deployability,build,build,143,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:79,energy efficiency,fault,fault,79,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:14,performance,error,error,14,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:79,performance,fault,fault,79,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:79,reliability,fault,fault,79,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:14,safety,error,error,14,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:65,safety,compl,completely,65,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:79,safety,fault,fault,79,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:65,security,compl,completely,65,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:14,usability,error,error,14,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:22,performance,memor,memory,22,> Do you see the same memory usage? yes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11853:22,usability,memor,memory,22,> Do you see the same memory usage? yes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11853
https://github.com/root-project/root/issues/11854:375,availability,operat,operator,375,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:877,availability,operat,operator,877,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:38,deployability,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:854,energy efficiency,alloc,allocator,854,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:915,energy efficiency,load,load,915,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:38,integrability,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:341,integrability,pub,public,341,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:938,interoperability,share,shared,938,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:38,modifiability,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:915,performance,load,load,915,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:30,reliability,doe,doesn,30,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:38,safety,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:121,safety,test,test,121,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:285,safety,test,test,285,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:8,testability,simpl,simpler,8,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:38,testability,depend,depend,38,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:121,testability,test,test,121,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:285,testability,test,test,285,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:8,usability,simpl,simpler,8,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:175,usability,help,helper,175,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:185,usability,help,helper,185,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:199,usability,Help,Helper,199,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:259,usability,help,helper,259,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:331,usability,Help,Helper,331,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:350,usability,Help,Helper,350,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:525,usability,help,helper,525,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:543,usability,help,helper,543,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:646,usability,help,helper,646,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:822,usability,Help,Helper,822,"An even simpler example which doesn't depend on RDF:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper). print(res). ```. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. Output (again with centos stream 8, root 6.26/10):. ```. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:30,energy efficiency,current,current,30,The same behaviour happens on current nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:9,usability,behavi,behaviour,9,The same behaviour happens on current nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:544,availability,operat,operator,544,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1744,availability,operat,operator,1744,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1721,energy efficiency,alloc,allocator,1721,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1782,energy efficiency,load,load,1782,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:492,integrability,pub,public,492,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1805,interoperability,share,shared,1805,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1782,performance,load,load,1782,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:116,safety,test,test,116,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:201,safety,test,test,201,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:210,safety,test,test,210,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:217,safety,test,test,217,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:331,safety,test,test,331,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:984,safety,test,test,984,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1138,safety,test,test,1138,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1466,safety,test,test,1466,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1478,safety,test,test,1478,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:116,testability,test,test,116,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:201,testability,test,test,201,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:210,testability,test,test,210,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:217,testability,test,test,217,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:331,testability,test,test,331,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:984,testability,test,test,984,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1138,testability,test,test,1138,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1466,testability,test,test,1466,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1478,testability,test,test,1478,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:473,usability,Help,Helper,473,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:510,usability,Help,Helper,510,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:740,usability,help,helper,740,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:763,usability,help,helper,763,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1209,usability,help,helper,1209,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1223,usability,help,helper,1223,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1242,usability,Help,Helper,1242,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1322,usability,help,helper,1322,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1514,usability,help,helper,1514,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1689,usability,Help,Helper,1689,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash. (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'. 2.4.1. (cppyy-env) /t/cppyy-test bat test.h test.py. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.h. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ template <typename T>. 2 │ class Helper {. 3 │. 4 │ public:. 5 │. 6 │ Helper() {}. 7 │. 8 │ std::size_t operator() () const {. 9 │ const std::size_t res = 0;. 10 │ res = T{0, 0}.size();. 11 │ return res;. 12 │ }. 13 │. 14 │ };. 15 │. 16 │ template <typename H>. 17 │ std::size_t call_helper(const H &helper) {. 18 │ return helper();. 19 │ }. ───────┴───────────────────────────────────────────────────────────────────────────────────────. ───────┬───────────────────────────────────────────────────────────────────────────────────────. │ File: test.py. ───────┼───────────────────────────────────────────────────────────────────────────────────────. 1 │ import cppyy. 2 │. 3 │ ret = cppyy.include('test.h'). 4 │. 5 │ print(""declare ret"", ret). 6 │. 7 │ print(""creating helper""). 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](). 9 │. 10 │ res = cppyy.gbl.call_helper(helper). 11 │ print(res). ───────┴───────────────────────────────────────────────────────────────────────────────────────. (cppyy-env) /t/cppyy-test python test.py. declare ret True. creating helper. IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'! You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const. Maybe you need to load the corresponding shared library? 18446744073709551615. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1047,availability,error,error,1047,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1121,availability,error,error,1121,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1399,availability,error,error,1399,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1470,availability,error,errors,1470,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:62,deployability,fail,fails,62,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:645,deployability,modul,module,645,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:733,deployability,fail,failed,733,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:841,deployability,Fail,Failed,841,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1053,integrability,messag,message,1053,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1053,interoperability,messag,message,1053,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:645,modifiability,modul,module,645,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1047,performance,error,error,1047,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1121,performance,error,error,1121,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1399,performance,error,error,1399,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1470,performance,error,errors,1470,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:62,reliability,fail,fails,62,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:733,reliability,fail,failed,733,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:841,reliability,Fail,Failed,841,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:134,safety,test,test,134,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:242,safety,test,test,242,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:319,safety,test,test,319,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:622,safety,test,test,622,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:645,safety,modul,module,645,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:948,safety,test,test,948,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1047,safety,error,error,1047,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1093,safety,test,test,1093,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1108,safety,test,test,1108,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1121,safety,error,error,1121,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1225,safety,test,test,1225,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1399,safety,error,error,1399,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1470,safety,error,errors,1470,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:13,testability,simpl,simple,13,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:134,testability,test,test,134,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:242,testability,test,test,242,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:319,testability,test,test,319,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:550,testability,Trace,Traceback,550,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:622,testability,test,test,622,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:948,testability,test,test,948,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1093,testability,test,test,1093,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1108,testability,test,test,1108,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1225,testability,test,test,1225,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:13,usability,simpl,simple,13,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1047,usability,error,error,1047,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1121,usability,error,error,1121,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1399,usability,error,error,1399,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1470,usability,error,errors,1470,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:. ```cpp. template <typename T>. int some_template_function(const T &x) {. return x.size();. }. ```. test.py:. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()). print(""res0"", res0). res1 = ROOT.some_template_function(0.0). print(""res1"", res1). ```. output:. ```. declare ret True. res0 0. Traceback (most recent call last):. File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>. res1 = ROOT.some_template_function(0.0). TypeError: Template method resolution failed:. int ::some_template_function(const vector<double>& x) =>. TypeError: could not convert argument 1. Failed to instantiate ""some_template_function(double)"". ```. . Compare to the same in c++ . ```. #include ""test.h"". const int res = some_template_function(0.0);. ```. . Then the output of clang++ with nice error message is:. ```. In file included from test.cpp:1:. ./test.h:3:11: error: member reference base type 'const double' is not a structure or union. return x.size();. ~^~~~~. test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here. const int res = some_template_function(0.0);. ^. 1 error generated. ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:90,availability,error,error,90,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:673,availability,error,errors,673,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:862,availability,error,errors,862,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1040,availability,error,error,1040,"Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:293,deployability,stack,stack,293,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1300,deployability,instal,install,1300," leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1502,deployability,instal,install,1502,"dered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #3 0x00007ffff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1865,deployability,instal,install,1865,"for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #3 0x00007ffff1a38c6d in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::Lookup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2467,deployability,instal,install,2467,"rom /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #3 0x00007ffff1a38c6d in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3101,deployability,instal,install,3101,"Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #3 0x00007ffff1a38c6d in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3326,deployability,instal,install,3326,", clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #3 0x00007ffff1a38c6d in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/ben",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:522,energy efficiency,optim,optimal,522,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3722,energy efficiency,core,core,3722,"roto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3827,energy efficiency,optim,optimized,3827,"l<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3854,energy efficiency,optim,optimized,3854,"ng::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3973,energy efficiency,optim,optimized,3973,"er&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3995,energy efficiency,optim,optimized,3995,"ng::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4046,energy efficiency,core,core,4046,"per::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4195,energy efficiency,alloc,alloc,4195,"ecl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4293,energy efficiency,load,load,4293,"rom /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4298,energy efficiency,load,load,4298,"home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4351,energy efficiency,core,core,4351," 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6144,energy efficiency,optim,optimized,6144,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6166,energy efficiency,optim,optimized,6166,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6193,energy efficiency,optim,optimized,6193,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4778,interoperability,bind,bindings,4778,"a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4778,modifiability,bind,bindings,4778,"a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:90,performance,error,error,90,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:673,performance,error,errors,673,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:862,performance,error,errors,862,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1040,performance,error,error,1040,"Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3827,performance,optimiz,optimized,3827,"l<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3854,performance,optimiz,optimized,3854,"ng::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3973,performance,optimiz,optimized,3973,"er&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3995,performance,optimiz,optimized,3995,"ng::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4293,performance,load,load,4293,"rom /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4298,performance,load,load,4298,"home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6144,performance,optimiz,optimized,6144,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6166,performance,optimiz,optimized,6166,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:6193,performance,optimiz,optimized,6193,"try=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1cd in ?? () from /usr/lib/libpython3.10.so.1.0. #18 0x00007ffff7c9ae7e in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0. #19 0x00007ffff7c9b831 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0. #20 0x00007ffff7e07d9d in Py_RunMain () from /usr/lib/libpython3.10.so.1.0. #21 0x00007ffff7ddc5eb in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0. #22 0x00007ffff7a36290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffcbb8) at ../sysdeps/nptl/libc_start_call_main.h:58. #23 0x00007ffff7a3634a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffcbb8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, . stack_end=0x7fffffffcba8) at ../csu/libc-start.c:381. #24 0x0000555555555045 in _start (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:759,reliability,Diagno,DiagnosticsStore,759,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:90,safety,error,error,90,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:102,safety,detect,detected,102,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:673,safety,error,errors,673,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:862,safety,error,errors,862,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1040,safety,error,error,1040,"Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1046,safety,detect,detection,1046,"aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:102,security,detect,detected,102,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1046,security,detect,detection,1046,"aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:299,testability,trace,trace,299,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:759,testability,Diagno,DiagnosticsStore,759,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:90,usability,error,error,90,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:386,usability,user,user,386,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:673,usability,error,errors,673,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:862,usability,error,errors,862,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Dec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1040,usability,error,error,1040,"Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is. 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```. 2) If no template is successfully instantiated then print the stored warnings and errors for each case. 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*. ```gdb. Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. (gdb) bt. #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3520,usability,Help,Helper,3520,":FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:3931,usability,Help,Helper,3931,"Info const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so. #4 0x00007ffff1a3571a in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4266,usability,Help,Helper,4266,"Setting, bool) const (). from /home/b/bendavid/rootdev28/install/lib/libCling.so. #5 0x00007ffff19b13aa in TClingClassInfo::GetMethod (this=this@entry=0x7fffffffbfe0, fname=fname@entry=0x7fffffffc530 ""call_helper"", . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:4480,usability,Help,Helper,4480," . proto=proto@entry=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=objectIsConst@entry=false, poffset=poffset@entry=0x0, mode=ROOT::kConversionMatch, . imode=TClingClassInfo::kWithInheritance) at /home/b/bendavid/rootdev28/root/core/metacling/src/TClingDeclInfo.h:38. #6 0x00007ffff195a91a in TCling::GetFunctionWithPrototype (this=<optimized out>, opaque_cl=<optimized out>, method=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", objectIsConst=<optimized out>, mode=<optimized out>) at /home/b/bendavid/rootdev28/root/core/metacling/src/TCling.cxx:5082. #7 0x00007ffff723799c in TROOT::GetGlobalFunctionWithPrototype (this=0x7ffff7499940 <ROOT::Internal::GetROOT1()::alloc>, function=0x7fffffffc530 ""call_helper"", . proto=0x55555c6b3560 ""Helper<vector<double> >&"", load=load@entry=false) at /home/b/bendavid/rootdev28/root/core/base/src/TROOT.cxx:1675. #8 0x00007ffff74e8fa7 in Cppyy::GetMethodTemplate (scope=scope@entry=1, name=""call_helper"", proto=""Helper<vector<double> >&"") at /usr/include/c++/12.2.0/bits/basic_string.h:233. #9 0x00007ffff75752d7 in CPyCppyy::TemplateProxy::Instantiate (this=0x7fffd804ca40, fname=""call_helper"", args=0x7ffff7736bf0, pref=CPyCppyy::Utility::kReference, pcnt=0x7fffffffc4e0). at /home/b/bendavid/rootdev28/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:189. #10 0x00007ffff7576b2a in CPyCppyy::tpp_call (pytmpl=0x7fffd804ca40, args=0x7ffff7736bf0, kwds=0x7fffd8041780) at /usr/include/c++/12.2.0/bits/basic_string.tcc:238. #11 0x00007ffff7d48b4b in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0. #12 0x00007ffff7d43f06 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0. #13 0x00007ffff7d3d760 in ?? () from /usr/lib/libpython3.10.so.1.0. #14 0x00007ffff7deae04 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0. #15 0x00007ffff7dfb5b3 in ?? () from /usr/lib/libpython3.10.so.1.0. #16 0x00007ffff7df6d0a in ?? () from /usr/lib/libpython3.10.so.1.0. #17 0x00007ffff7c9b1c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:154,availability,failur,failure,154,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:200,availability,error,error,200,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:154,deployability,fail,failure,154,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:70,performance,time,time,70,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:154,performance,failur,failure,154,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:200,performance,error,error,200,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:218,performance,perform,performance,218,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:154,reliability,fail,failure,154,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:200,safety,error,error,200,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:101,testability,simpl,simply,101,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:259,testability,simpl,simplifies,259,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:101,usability,simpl,simply,101,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:200,usability,error,error,200,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:218,usability,perform,performance,218,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:259,usability,simpl,simplifies,259,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:15,availability,error,error,15,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1189,availability,error,error,1189,"/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1541,availability,failur,failure,1541,"nRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1565,availability,down,downstream,1565,"-As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1773,availability,error,error,1773,"which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1960,availability,error,errors,1960,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:822,deployability,fail,fails,822,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1541,deployability,fail,failure,1541,"nRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2022,deployability,fail,fails,2022,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2593,deployability,fail,failing,2593,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2908,deployability,build,build,2908,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2922,deployability,fail,fails,2922,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:7,energy efficiency,current,current,7,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:70,energy efficiency,current,current,70,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:811,integrability,event,eventually,811,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1227,integrability,Wrap,WrapperCall,1227,"5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1729,integrability,wrap,wraps,1729,"t/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2401,integrability,translat,translate,2401,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:239,interoperability,bind,bindings,239,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:718,interoperability,bind,bindings,718,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1227,interoperability,Wrapper,WrapperCall,1227,"5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1340,interoperability,bind,bindings,1340,"rlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2228,interoperability,bind,bindings,2228,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2401,interoperability,translat,translate,2401,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2519,interoperability,bind,bindings,2519,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:239,modifiability,bind,bindings,239,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:718,modifiability,bind,bindings,718,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1340,modifiability,bind,bindings,1340,"rlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2228,modifiability,bind,bindings,2228,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2519,modifiability,bind,bindings,2519,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2623,modifiability,concern,concerned,2623,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:15,performance,error,error,15,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1189,performance,error,error,1189,"/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1541,performance,failur,failure,1541,"nRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1773,performance,error,error,1773,"which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1929,performance,time,time,1929,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1960,performance,error,errors,1960,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:519,reliability,doe,does,519,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:822,reliability,fail,fails,822,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1541,reliability,fail,failure,1541,"nRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2022,reliability,fail,fails,2022,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2593,reliability,fail,failing,2593,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2922,reliability,fail,fails,2922,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:15,safety,error,error,15,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:78,safety,test,test,78,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1189,safety,error,error,1189,"/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1773,safety,error,error,1773,"which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1960,safety,error,errors,1960,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2094,safety,except,exception,2094,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2350,safety,except,exception,2350,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2425,safety,except,exception,2425,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1618,security,sign,signed,1618,"on anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:78,testability,test,test,78,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:2623,testability,concern,concerned,2623,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:15,usability,error,error,15,"So the current error handling is a bit messed up. What happens for my current test case is as follows:. -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1189,usability,error,error,1189,"/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628. this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument. -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1773,usability,error,error,1773,"which propagates through cling and eventually fails only because of the missing symbol, which is caught here:. https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/issues/11854:1960,usability,error,errors,1960,"80c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280. (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr). -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814. But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L814 (and in several of the related functions). The exception would be caught here and should properly translate into a python exception: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L73-L75 . As far as just failing the initial lookup is concerned (and properly cleaning up the decl), I tried using DefinitionRequired=true at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 but this creates other problems such that even the build of root fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11854
https://github.com/root-project/root/pull/11861:59,availability,error,error,59,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:89,availability,error,errors,89,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:42,interoperability,share,share,42,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:59,performance,error,error,59,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:89,performance,error,errors,89,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:59,safety,error,error,59,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:89,safety,error,errors,89,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:59,usability,error,error,59,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:89,usability,error,errors,89,"> Linking on mac is not working,. Can you share the linker error? I only see compilation errors (that I know how to take care of).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:73,availability,error,error,73,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:79,integrability,messag,messages,79,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:79,interoperability,messag,messages,79,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:73,performance,error,error,73,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:73,safety,error,error,73,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:73,usability,error,error,73,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:13,availability,failur,failure,13,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,availability,failur,failure,30,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:13,deployability,fail,failure,13,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,deployability,fail,failure,30,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:105,deployability,log,log,105,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:13,performance,failur,failure,13,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,performance,failur,failure,30,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:13,reliability,fail,failure,13,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:30,reliability,fail,failure,30,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:105,safety,log,log,105,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:105,security,log,log,105,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11861:105,testability,log,log,105,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11861
https://github.com/root-project/root/pull/11862:88,usability,minim,minimal,88,@ktf Could you check this also fix your original problem? (It remove all leaks from the minimal example in #11853),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11862
https://github.com/root-project/root/pull/11862:2,usability,confirm,confirm,2,I confirm this fixes the 1GB leak we were witnessing. Thank you for your prompt reaction!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11862
https://github.com/root-project/root/pull/11863:20,deployability,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:40,modifiability,extens,extension,40,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:20,safety,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11863:20,security,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11863
https://github.com/root-project/root/pull/11864:20,deployability,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11864
https://github.com/root-project/root/pull/11864:40,modifiability,extens,extension,40,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11864
https://github.com/root-project/root/pull/11864:20,safety,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11864
https://github.com/root-project/root/pull/11864:20,security,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11864
https://github.com/root-project/root/pull/11865:20,deployability,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11865
https://github.com/root-project/root/pull/11865:40,modifiability,extens,extension,40,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11865
https://github.com/root-project/root/pull/11865:20,safety,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11865
https://github.com/root-project/root/pull/11865:20,security,updat,update,20,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11865
https://github.com/root-project/root/pull/11866:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11866
https://github.com/root-project/root/pull/11868:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11868
https://github.com/root-project/root/pull/11868:150,safety,compl,completely,150,"@MarkusFrankATcernch I'm checking this today, I'm still seeing mixes of different features in some commits. Ideally, the different commits will treat completely different features, and a test should be present where possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11868
https://github.com/root-project/root/pull/11868:187,safety,test,test,187,"@MarkusFrankATcernch I'm checking this today, I'm still seeing mixes of different features in some commits. Ideally, the different commits will treat completely different features, and a test should be present where possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11868
https://github.com/root-project/root/pull/11868:150,security,compl,completely,150,"@MarkusFrankATcernch I'm checking this today, I'm still seeing mixes of different features in some commits. Ideally, the different commits will treat completely different features, and a test should be present where possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11868
https://github.com/root-project/root/pull/11868:187,testability,test,test,187,"@MarkusFrankATcernch I'm checking this today, I'm still seeing mixes of different features in some commits. Ideally, the different commits will treat completely different features, and a test should be present where possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11868
https://github.com/root-project/root/pull/11869:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11869
https://github.com/root-project/root/pull/11870:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11870
https://github.com/root-project/root/pull/11870:8,availability,failur,failure,8,Jupyter failure was fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11870
https://github.com/root-project/root/pull/11870:8,deployability,fail,failure,8,Jupyter failure was fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11870
https://github.com/root-project/root/pull/11870:8,performance,failur,failure,8,Jupyter failure was fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11870
https://github.com/root-project/root/pull/11870:8,reliability,fail,failure,8,Jupyter failure was fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11870
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,"@phsft-bot build just on mac13/cxx20,ROOT-ubuntu2204/cxx20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,"@phsft-bot build just on mac13/cxx20, ROOT-ubuntu2204/cxx20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:55,deployability,modul,modulemap,55,"FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:73,deployability,build,build,73,"FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:55,modifiability,modul,modulemap,55,"FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:55,safety,modul,modulemap,55,"FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,deployability,modul,modulemap,57,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:75,deployability,build,build,75,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:136,deployability,log,log,136,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,modifiability,modul,modulemap,57,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,safety,modul,modulemap,57,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:136,safety,log,log,136,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:136,security,log,log,136,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:136,testability,log,log,136,"> FWIW, I will try seeing if I can come up with a single modulemap on this build node we use for cxx20. @Axel-Naumann, I cannot seem to log on the ubuntu node. Can you take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:17,deployability,log,log,17,> cannot seem to log on the ubuntu node. Which one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:17,safety,log,log,17,> cannot seem to log on the ubuntu node. Which one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:17,security,log,log,17,> cannot seem to log on the ubuntu node. Which one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:17,testability,log,log,17,> cannot seem to log on the ubuntu node. Which one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:19,deployability,log,log,19,> > cannot seem to log on the ubuntu node. > . > Which one? root-ubuntu-2204-1.cern.ch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:19,safety,log,log,19,> > cannot seem to log on the ubuntu node. > . > Which one? root-ubuntu-2204-1.cern.ch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:19,security,log,log,19,> > cannot seem to log on the ubuntu node. > . > Which one? root-ubuntu-2204-1.cern.ch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:19,testability,log,log,19,> > cannot seem to log on the ubuntu node. > . > Which one? root-ubuntu-2204-1.cern.ch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,"@phsft-bot build just on mac13/cxx20, ROOT-ubuntu2204/cxx20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,"@phsft-bot build just on mac13/cxx20, ROOT-ubuntu2204/cxx20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,"@phsft-bot build just on mac13/cxx20, ROOT-ubuntu2204/cxx20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:100,deployability,patch,patch,100,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:106,deployability,releas,release,106,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:126,deployability,patch,patches,126,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:100,safety,patch,patch,100,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:126,safety,patch,patches,126,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:100,security,patch,patch,100,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:126,security,patch,patches,126,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:63,availability,error,errors,63,@vgvassilev I think this needs you ;-) I'm getting a number of errors related to cxxmodules on GCC 12.2.0/libstdc++ (see [relevant output](https://gist.github.com/jalopezg-git/383aae28d9122bc820e1668b2a2172e5)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:63,performance,error,errors,63,@vgvassilev I think this needs you ;-) I'm getting a number of errors related to cxxmodules on GCC 12.2.0/libstdc++ (see [relevant output](https://gist.github.com/jalopezg-git/383aae28d9122bc820e1668b2a2172e5)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:63,safety,error,errors,63,@vgvassilev I think this needs you ;-) I'm getting a number of errors related to cxxmodules on GCC 12.2.0/libstdc++ (see [relevant output](https://gist.github.com/jalopezg-git/383aae28d9122bc820e1668b2a2172e5)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:63,usability,error,errors,63,@vgvassilev I think this needs you ;-) I'm getting a number of errors related to cxxmodules on GCC 12.2.0/libstdc++ (see [relevant output](https://gist.github.com/jalopezg-git/383aae28d9122bc820e1668b2a2172e5)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,availability,failur,failure,57,"@jalopezg-git, on which build node I could reproduce the failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:24,deployability,build,build,24,"@jalopezg-git, on which build node I could reproduce the failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,deployability,fail,failure,57,"@jalopezg-git, on which build node I could reproduce the failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,performance,failur,failure,57,"@jalopezg-git, on which build node I could reproduce the failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:57,reliability,fail,failure,57,"@jalopezg-git, on which build node I could reproduce the failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:61,testability,regress,regresses,61,"@Axel-Naumann, can we merge that in master. I don't think it regresses anything and it improves the C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:106,usability,support,support,106,"@Axel-Naumann, can we merge that in master. I don't think it regresses anything and it improves the C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:0,availability,Failur,Failures,0,Failures seem spurious / pre-existing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:0,deployability,Fail,Failures,0,Failures seem spurious / pre-existing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:0,performance,Failur,Failures,0,Failures seem spurious / pre-existing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:0,reliability,Fail,Failures,0,Failures seem spurious / pre-existing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:59,availability,failur,failure,59,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:26,deployability,build,build,26,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:59,deployability,fail,failure,59,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:95,deployability,build,building,95,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:170,deployability,build,build,170,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:59,performance,failur,failure,59,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/pull/11874:59,reliability,fail,failure,59,"> @jalopezg-git, on which build node I could reproduce the failure? Sorry for the delay. I was building locally on ArchLinux x86_64; I'm not sure as to whether there's a build node with gcc12.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11874
https://github.com/root-project/root/issues/11875:63,usability,support,support,63,"Thanks, I think this is a good idea! I have opened a PR to add support for this:. https://github.com/root-project/root/pull/11903",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11875
https://github.com/root-project/root/issues/11876:487,integrability,wrap,wrapped,487,"Hello @amcdouga! Sorry for the late reply. Thanks for noticing the IO for the `RooMomentMorphND` doesn't work. That gave me the idea to just remove this class, because the code is almost an exact duplicate of the [RooMomentMorphFuncND](https://root.cern.ch/doc/master/classRooMomentMorphFuncND.html), only that the base class is `RooAbsReal` instead of `RooAbsPdf`. So if you want to have an object that is a RooAbsPdf and that you can write to a file, just use the RooMomentMorphFuncND wrapped in a [RooWrapperPdf](https://root.cern.ch/doc/master/classRooWrapperPdf.html).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:97,reliability,doe,doesn,97,"Hello @amcdouga! Sorry for the late reply. Thanks for noticing the IO for the `RooMomentMorphND` doesn't work. That gave me the idea to just remove this class, because the code is almost an exact duplicate of the [RooMomentMorphFuncND](https://root.cern.ch/doc/master/classRooMomentMorphFuncND.html), only that the base class is `RooAbsReal` instead of `RooAbsPdf`. So if you want to have an object that is a RooAbsPdf and that you can write to a file, just use the RooMomentMorphFuncND wrapped in a [RooWrapperPdf](https://root.cern.ch/doc/master/classRooWrapperPdf.html).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:116,availability,fault,fault,116,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:176,availability,error,error,176,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:451,availability,fault,fault,451,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:314,deployability,version,versions,314,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1082,deployability,Scale,Scale,1082,"iption, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,deployability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1124,deployability,Scale,Scale,1124,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,deployability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:116,energy efficiency,fault,fault,116,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:451,energy efficiency,fault,fault,451,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1082,energy efficiency,Scale,Scale,1082,"iption, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1124,energy efficiency,Scale,Scale,1124,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:182,integrability,messag,message,182,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:314,integrability,version,versions,314,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,integrability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,integrability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:182,interoperability,messag,message,182,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,interoperability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,interoperability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:314,modifiability,version,versions,314,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1082,modifiability,Scal,Scale,1082,"iption, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,modifiability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1124,modifiability,Scal,Scale,1124,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,modifiability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:116,performance,fault,fault,116,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:176,performance,error,error,176,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:451,performance,fault,fault,451,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1082,performance,Scale,Scale,1082,"iption, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1124,performance,Scale,Scale,1124,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:116,reliability,fault,fault,116,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:451,reliability,fault,fault,451,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,reliability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,reliability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:116,safety,fault,fault,116,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:176,safety,error,error,176,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:392,safety,test,test,392,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:451,safety,fault,fault,451,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,security,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,security,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:392,testability,test,test,392,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1099,testability,Integr,Integral,1099,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:1143,testability,Integr,Integral,1143,"on, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeToFile(""test_workspace.root"");. }. ```. Do you know if something can be done to fix this? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:176,usability,error,error,176,"Hi @guitargeek ,. Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). . I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. . ```c++. #include <iostream>. #include <fstream>. #include<TRandom.h>. float input_lambda(float width){. 	return -6.347e-07*width*width+0.0015*width+1.835;. }. void exampleND_v2(){. auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}. 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);. 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}. 	hist_1->Scale(1./hist_1->Integral());. 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);. 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);. auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};. 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){. 		paramVec[j] = Lambda_list[j];. 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();. 	w->import(*morph_ND);. 	w->Print();. 	w->writeTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:825,deployability,releas,release,825,"Ah, sorry I missed that! Well, the `RooMomentMorphFuncND` makes the mistake of having a pointer to the last cached normalization set as a data member, and it is not excluded from IO:. https://github.com/root-project/root/blob/master/roofit/roofit/inc/RooMomentMorphFuncND.h#L133. You can therefore make the writing work if you first evaluate your function with a normalization set, and make sure that the normalization set is still alive during `writeToFile()` such that the pointer is not invalid:. ```C++. RooArgSet nset{*myy};. morph_ND->getVal(&nset);. . morph_ND->Print();. w->import(*morph_ND);. w->Print();. w->writeToFile(""test_workspace.root"");. ```. This is of course annoying, and I will quickly fix this. The `_curNormSet` member should be excluded from IO. But at least you have a workaround until the next ROOT release!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:108,performance,cach,cached,108,"Ah, sorry I missed that! Well, the `RooMomentMorphFuncND` makes the mistake of having a pointer to the last cached normalization set as a data member, and it is not excluded from IO:. https://github.com/root-project/root/blob/master/roofit/roofit/inc/RooMomentMorphFuncND.h#L133. You can therefore make the writing work if you first evaluate your function with a normalization set, and make sure that the normalization set is still alive during `writeToFile()` such that the pointer is not invalid:. ```C++. RooArgSet nset{*myy};. morph_ND->getVal(&nset);. . morph_ND->Print();. w->import(*morph_ND);. w->Print();. w->writeToFile(""test_workspace.root"");. ```. This is of course annoying, and I will quickly fix this. The `_curNormSet` member should be excluded from IO. But at least you have a workaround until the next ROOT release!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:0,usability,Clear,Clearly,0,"Clearly, the original developers didn't care about IO for these classes. It's likely that you will run into other problems. If yes, please let me know here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:131,deployability,updat,updated,131,"Ah great thanks! I confirm it works for me with the lines of code you mentioned to add. . This will be fine for now, I'll keep you updated in case I have any further issues!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:131,safety,updat,updated,131,"Ah great thanks! I confirm it works for me with the lines of code you mentioned to add. . This will be fine for now, I'll keep you updated in case I have any further issues!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:131,security,updat,updated,131,"Ah great thanks! I confirm it works for me with the lines of code you mentioned to add. . This will be fine for now, I'll keep you updated in case I have any further issues!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/issues/11876:19,usability,confirm,confirm,19,"Ah great thanks! I confirm it works for me with the lines of code you mentioned to add. . This will be fine for now, I'll keep you updated in case I have any further issues!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11876
https://github.com/root-project/root/pull/11877:110,integrability,queue,queue,110,"Jenkins passed except for `ROOT-performance-centos8-multicore`, but I don't think we need to wait for it (the queue is quite full right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11877
https://github.com/root-project/root/pull/11877:32,performance,perform,performance-,32,"Jenkins passed except for `ROOT-performance-centos8-multicore`, but I don't think we need to wait for it (the queue is quite full right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11877
https://github.com/root-project/root/pull/11877:110,performance,queue,queue,110,"Jenkins passed except for `ROOT-performance-centos8-multicore`, but I don't think we need to wait for it (the queue is quite full right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11877
https://github.com/root-project/root/pull/11877:15,safety,except,except,15,"Jenkins passed except for `ROOT-performance-centos8-multicore`, but I don't think we need to wait for it (the queue is quite full right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11877
https://github.com/root-project/root/pull/11877:32,usability,perform,performance-,32,"Jenkins passed except for `ROOT-performance-centos8-multicore`, but I don't think we need to wait for it (the queue is quite full right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11877
https://github.com/root-project/root/pull/11878:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11878
https://github.com/root-project/root/pull/11878:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11878
https://github.com/root-project/root/pull/11878:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11878
https://github.com/root-project/root/pull/11880:34,deployability,depend,dependency,34,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/pull/11880:34,integrability,depend,dependency,34,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/pull/11880:34,modifiability,depend,dependency,34,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/pull/11880:34,safety,depend,dependency,34,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/pull/11880:66,safety,accid,accident,66,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/pull/11880:34,testability,depend,dependency,34,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11880
https://github.com/root-project/root/issues/11881:36,usability,support,supported,36,"Hi, sorry, but Windows arm64 is not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11881
https://github.com/root-project/root/issues/11881:0,usability,Close,Closed,0,Closed as per comment above.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11881
https://github.com/root-project/root/pull/11882:13,interoperability,format,format,13,Please clang-format...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:20,interoperability,format,format,20,"Looks like my clang-format and the CI's clang-format disagree, so I will leave this as it is now. It seems that CI's clang-format wants shorter lines than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:46,interoperability,format,format,46,"Looks like my clang-format and the CI's clang-format disagree, so I will leave this as it is now. It seems that CI's clang-format wants shorter lines than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:123,interoperability,format,format,123,"Looks like my clang-format and the CI's clang-format disagree, so I will leave this as it is now. It seems that CI's clang-format wants shorter lines than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:12,availability,error,error,12,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:94,availability,error,error,94,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1409,availability,error,error,1409,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1205,deployability,build,build,1205,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1239,deployability,build,build,1239,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1245,deployability,build,build,1245,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1330,deployability,build,build,1330,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1364,deployability,build,build,1364,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1370,deployability,build,build,1370,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1451,deployability,build,build,1451,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1485,deployability,build,build,1485,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1491,deployability,build,build,1491,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1251,energy efficiency,core,core,1251,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1497,energy efficiency,core,core,1497,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:12,performance,error,error,12,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:94,performance,error,error,94,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1409,performance,error,error,1409,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:12,safety,error,error,12,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:94,safety,error,error,94,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1409,safety,error,error,1409,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:12,usability,error,error,12,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:94,usability,error,error,94,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11882:1409,usability,error,error,1409,"The Windows error. ```. [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. ```. seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11882
https://github.com/root-project/root/pull/11885:8,availability,failur,failures,8,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:164,availability,robust,robust,164,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:8,deployability,fail,failures,8,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:0,energy efficiency,Current,Current,0,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:8,performance,failur,failures,8,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:8,reliability,fail,failures,8,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:164,reliability,robust,robust,164,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:175,reliability,doe,does,175,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:124,safety,avoid,avoiding,124,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:164,safety,robust,robust,164,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11885:184,usability,support,support,184,"Current failures fixed by https://github.com/root-project/roottest/pull/924 , although they underline a deeper problem with avoiding the use of `?#`, which is more robust but does not support wildcards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11885
https://github.com/root-project/root/pull/11886:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11886
https://github.com/root-project/root/pull/11887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11887
https://github.com/root-project/root/pull/11888:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:134,reliability,doe,does,134,"@MarkusFrankATcernch these commits should be squashed unless you want to do an interactive rebase and merge some of them manually. It does not make sense to have commits like ""re-introducing bug to maximize number of commits"" ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:79,usability,interact,interactive,79,"@MarkusFrankATcernch these commits should be squashed unless you want to do an interactive rebase and merge some of them manually. It does not make sense to have commits like ""re-introducing bug to maximize number of commits"" ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:133,integrability,interfac,interface,133,"> @agheata How is a ""squash"" done ? I am not at all a git expert....actually git is my outspoken enemy! I can do it from the git web interface when merging, but this will squash all commits into one. Otherwise, if your branch started after say commit #N, you can locally rebase interactively the branch on top of that commit using `git rebase -i #N`, which opens an editor and allows you to do actions like squashing commits. Then you must push the branch with --force, since you are altering history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:133,interoperability,interfac,interface,133,"> @agheata How is a ""squash"" done ? I am not at all a git expert....actually git is my outspoken enemy! I can do it from the git web interface when merging, but this will squash all commits into one. Otherwise, if your branch started after say commit #N, you can locally rebase interactively the branch on top of that commit using `git rebase -i #N`, which opens an editor and allows you to do actions like squashing commits. Then you must push the branch with --force, since you are altering history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:133,modifiability,interfac,interface,133,"> @agheata How is a ""squash"" done ? I am not at all a git expert....actually git is my outspoken enemy! I can do it from the git web interface when merging, but this will squash all commits into one. Otherwise, if your branch started after say commit #N, you can locally rebase interactively the branch on top of that commit using `git rebase -i #N`, which opens an editor and allows you to do actions like squashing commits. Then you must push the branch with --force, since you are altering history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:278,usability,interact,interactively,278,"> @agheata How is a ""squash"" done ? I am not at all a git expert....actually git is my outspoken enemy! I can do it from the git web interface when merging, but this will squash all commits into one. Otherwise, if your branch started after say commit #N, you can locally rebase interactively the branch on top of that commit using `git rebase -i #N`, which opens an editor and allows you to do actions like squashing commits. Then you must push the branch with --force, since you are altering history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11888:167,reliability,doe,does,167,"@agheata In this case squashing all commits into the first one should be just perfect. There is then anyhow PR https://github.com/root-project/root/pull/11895 , which does nothing than just this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11888
https://github.com/root-project/root/pull/11889:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11889
https://github.com/root-project/root/pull/11890:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11890
https://github.com/root-project/root/pull/11891:6,performance,perform,performance-,6,"`ROOT-performance-centos8-multicore/cxx17` is off, all other are done - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11891
https://github.com/root-project/root/pull/11891:6,usability,perform,performance-,6,"`ROOT-performance-centos8-multicore/cxx17` is off, all other are done - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11891
https://github.com/root-project/root/pull/11892:82,usability,interact,interactive,82,"You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11892
https://github.com/root-project/root/pull/11892:205,testability,simpl,simply,205,"> You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`). Isn't ""squash and merge"" good enough? Otherwise I will simply make another PR, so I'm sure not to screw up ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11892
https://github.com/root-project/root/pull/11892:84,usability,interact,interactive,84,"> You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`). Isn't ""squash and merge"" good enough? Otherwise I will simply make another PR, so I'm sure not to screw up ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11892
https://github.com/root-project/root/pull/11892:205,usability,simpl,simply,205,"> You should probably just delete that commit from the branch history, e.g. with an interactive rebase (`git rebase -i master` + `git push --force`). Isn't ""squash and merge"" good enough? Otherwise I will simply make another PR, so I'm sure not to screw up ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11892
https://github.com/root-project/root/pull/11894:63,availability,error,error,63,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:290,availability,error,error,290,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:28,deployability,build,build,28,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:212,deployability,build,build,212,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:260,deployability,build,build,260,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:63,performance,error,error,63,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:290,performance,error,error,290,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:361,performance,time,time,361,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:63,safety,error,error,63,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:290,safety,error,error,290,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:63,usability,error,error,63,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:290,usability,error,error,290,"FYI, this broke the Windows build with:. ```. TGDMLWrite.obj : error LNK2001: unresolved external symbol ""protected: static unsigned int TGeoManager::fgExportPrecision"" (?fgExportPrecision@TGeoManager@@1IA) . C:\build\wsincrmaster\LABEL\windows10\SPEC\default\build\bin\libGdml.dll : fatal error LNK1120: 1 unresolved externals . ```. Sergey fixed it, but next time please make sure to run the CI before merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:132,deployability,build,build,132,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:165,deployability,build,builds,165,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:221,deployability,build,build-configuration,221,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:227,integrability,configur,configuration,227,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:227,modifiability,configur,configuration,227,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:176,safety,test,tests,176,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:227,security,configur,configuration,227,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:176,testability,test,tests,176,"> @bellenot Thanks for fixing! But: How do I run the CI on the changes ? I don't know if everyone can do it, but typing `@phsft-bot build` in the comment starts the builds and tests. See also https://github.com/phsft-bot/build-configuration/blob/master/README.md.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:38,deployability,build,build,38,"It's on me, I just forgot to type the build command on this one...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11894:44,usability,command,command,44,"It's on me, I just forgot to type the build command on this one...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11894
https://github.com/root-project/root/pull/11895:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11895
https://github.com/root-project/root/pull/11895:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11895
https://github.com/root-project/root/pull/11895:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11895
https://github.com/root-project/root/issues/11901:68,modifiability,pac,package-for-ubuntu-,68,Maybe related: https://root-forum.cern.ch/t/unofficial-root-6-26-10-package-for-ubuntu-22-04/52773,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:50,deployability,build,build,50,"Thanks - yes, @amadio and I chatted a bit and his build without `runtime_cxxmodules` is much more successful. I don't know why this is causing so much trouble on WSL2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:108,deployability,depend,dependency,108,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:108,integrability,depend,dependency,108,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:16,modifiability,pac,package,16,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:108,modifiability,depend,dependency,108,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:108,safety,depend,dependency,108,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:108,testability,depend,dependency,108,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:152,usability,confirm,confirm,152,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:36,deployability,releas,releases,36,This is fixed in the current binary releases. Do not hesitate to re-open if this issue appears again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/issues/11901:21,energy efficiency,current,current,21,This is fixed in the current binary releases. Do not hesitate to re-open if this issue appears again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11901
https://github.com/root-project/root/pull/11906:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11906
https://github.com/root-project/root/pull/11908:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:8,availability,failur,failure,8,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:44,availability,down,downloading,44,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:8,deployability,fail,failure,8,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:8,performance,failur,failure,8,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:8,reliability,fail,failure,8,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:74,availability,servic,services,74,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:191,availability,failur,failures,191,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:21,deployability,build,build,21,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:74,deployability,servic,services,74,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:191,deployability,fail,failures,191,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:353,deployability,releas,release,353,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:74,integrability,servic,services,74,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:74,modifiability,servic,services,74,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:191,performance,failur,failures,191,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:191,reliability,fail,failures,191,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/pull/11908:93,safety,avoid,avoid,93,"> It is fixed, see #12090 which had been already added as part of the v6.28 PR. Ok. We could avoid such problems by first merging everything into `master` and then backporting...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11908
https://github.com/root-project/root/issues/11920:8293,availability,Error,Error,8293,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8338,availability,operat,operation,8338,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8410,availability,Error,Error,8410,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8426,availability,Error,Error,8426,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8466,availability,Error,Error,8466,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8594,availability,error,errors,8594,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:490,deployability,build,build-cling,490,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1381,deployability,version,version,1381," MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with ol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1447,deployability,version,version,1447,"ne. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1666,deployability,Build,Building,1666,"ompiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2389,deployability,version,versions,2389,".13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2477,deployability,Stack,Stack,2477,"ction: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2955,deployability,Fail,Failed,2955,"est SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3098,deployability,Fail,Failed,3098,"r/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3617,deployability,Fail,Failed,3617,g Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3748,deployability,Fail,Failed,3748,R_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4341,deployability,Fail,Failed,4341,LLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4696,deployability,Fail,Failed,4696, Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4813,deployability,Fail,Failed,4813,forming Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4934,deployability,Fail,Failed,4934,"ing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6065,deployability,version,versions,6065," -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6147,deployability,Stack,Stack,6147,"CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6593,deployability,version,versions,6593,"ming Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6677,deployability,Stack,Stack,6677,"A_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6848,deployability,Modul,Modules,6848,"CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7117,deployability,version,versions,7117,"le 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7216,deployability,Stack,Stack,7216,"ng is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7578,deployability,version,version,7578,"with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7952,deployability,version,version,7952,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7966,deployability,VERSION,VERSION,7966,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8481,deployability,modul,modules,8481,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8635,deployability,build,build-cling,8635,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8670,deployability,log,log,8670,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8700,deployability,build,build-cling,8700,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8734,deployability,log,log,8734,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1381,integrability,version,version,1381," MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with ol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1447,integrability,version,version,1447,"ne. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2389,integrability,version,versions,2389,".13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6065,integrability,version,versions,6065," -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6593,integrability,version,versions,6593,"ming Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7117,integrability,version,versions,7117,"le 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7578,integrability,version,version,7578,"with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7952,integrability,version,version,7952,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7966,integrability,VERSION,VERSION,7966,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8549,integrability,configur,configuring,8549,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8570,integrability,Configur,Configuring,8570,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2364,interoperability,compatib,compatibility,2364,"so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6040,interoperability,compatib,compatibility,6040,"TATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6568,interoperability,compatib,compatibility,6568,"TA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (fou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6836,interoperability,share,share,6836,"on):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7092,interoperability,compatib,compatibility,7092,"ing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:298,modifiability,reu,reused,298,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:322,modifiability,pac,pack-reused,322,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1381,modifiability,version,version,1381," MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with ol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1447,modifiability,version,version,1447,"ne. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2219,modifiability,variab,variables,2219," Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIAL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2389,modifiability,version,versions,2389,".13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2439,modifiability,variab,variable,2439,"und version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5895,modifiability,variab,variables,5895,"SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Pol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6065,modifiability,version,versions,6065," -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6115,modifiability,variab,variable,6115,"ATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older ve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6423,modifiability,variab,variables,6423,"-- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppres",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6593,modifiability,version,versions,6593,"ming Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6643,modifiability,variab,variable,6643,"Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6848,modifiability,Modul,Modules,6848,"CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6947,modifiability,variab,variables,6947,"details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7117,modifiability,version,versions,7117,"le 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7167,modifiability,variab,variable,7167,"first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7578,modifiability,version,version,7578,"with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7952,modifiability,version,version,7952,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7966,modifiability,VERSION,VERSION,7966,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8481,modifiability,modul,modules,8481,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8549,modifiability,configur,configuring,8549,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8570,modifiability,Configur,Configuring,8570,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1100,performance,Performing Test,Performing Test,1100,"into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1134,performance,Performing Test,Performing Test,1134,"g objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1214,performance,Performing Test,Performing Test,1214,"Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal var",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1252,performance,Performing Test,Performing Test,1252,"one. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1498,performance,Performing Test,Performing Test,1498,"iltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1534,performance,Performing Test,Performing Test,1534,"entification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1580,performance,Performing Test,Performing Test,1580,"r identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1618,performance,Performing Test,Performing Test,1618,"ecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1690,performance,Performing Test,Performing Test,1690,"Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1748,performance,Performing Test,Performing Test,1748,"tecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DAT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1816,performance,Performing Test,Performing Test,1816,"-- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1876,performance,Performing Test,Performing Test,1876,"r ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1946,performance,Performing Test,Performing Test,1946,"kipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2007,performance,Performing Test,Performing Test,2007,"ompile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2611,performance,Performing Test,Performing Test,2611,"erforming Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Fa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2659,performance,Performing Test,Performing Test,2659,"uilding with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SW",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2717,performance,Performing Test,Performing Test,2717,"NTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2767,performance,Performing Test,Performing Test,2767,"FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2827,performance,Performing Test,Performing Test,2827,"_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2892,performance,Performing Test,Performing Test,2892,"ORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2966,performance,Performing Test,Performing Test,2966,"SIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3033,performance,Performing Test,Performing Test,3033,"TY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3109,performance,Performing Test,Performing Test,3109,"b/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3174,performance,Performing Test,Performing Test,3174,"7 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3249,performance,Performing Test,Performing Test,3249,"MP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3306,performance,Performing Test,Performing Test,3306,"to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3373,performance,Performing Test,Performing Test,3373,"h older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3432,performance,Performing Test,Performing Test,3432,ariable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3501,performance,Performing Test,Performing Test,3501, CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3560,performance,Performing Test,Performing Test,3560,evelopers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRID,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3628,performance,Performing Test,Performing Test,3628,S_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3689,performance,Performing Test,Performing Test,3689,_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3759,performance,Performing Test,Performing Test,3759,Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Perfor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3813,performance,Performing Test,Performing Test,3813,s. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3877,performance,Performing Test,Performing Test,3877,EW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Perfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3930,performance,Performing Test,Performing Test,3930,AILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3993,performance,Performing Test,Performing Test,3993,_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4048,performance,Performing Test,Performing Test,4048,PORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4113,performance,Performing Test,Performing Test,4113,est CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4165,performance,Performing Test,Performing Test,4165, Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4227,performance,Performing Test,Performing Test,4227,- Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4285,performance,Performing Test,Performing Test,4285,UGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4352,performance,Performing Test,Performing Test,4352, Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4407,performance,Performing Test,Performing Test,4407,THROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4472,performance,Performing Test,Performing Test,4472,H_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4532,performance,Performing Test,Performing Test,4532,CH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4602,performance,Performing Test,Performing Test,4602,FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4650,performance,Performing Test,Performing Test,4650,OVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4707,performance,Performing Test,Performing Test,4707,TS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4761,performance,Performing Test,Performing Test,4761, Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4824,performance,Performing Test,Performing Test,4824,_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:100,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4880,performance,Performing Test,Performing Test,4880,Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4945,performance,Performing Test,Performing Test,4945,"PORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5004,performance,Performing Test,Performing Test,5004,"_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5073,performance,Performing Test,Performing Test,5073,"IMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMak",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5134,performance,Performing Test,Performing Test,5134,"NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5205,performance,Performing Test,Performing Test,5205,"- Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5258,performance,Performing Test,Performing Test,5258,"NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5321,performance,Performing Test,Performing Test,5321,"RTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5371,performance,Performing Test,Performing Test,5371,"S_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5431,performance,Performing Test,Performing Test,5431,"GEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5483,performance,Performing Test,Performing Test,5483,"_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5545,performance,Performing Test,Performing Test,5545,"SUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5591,performance,Performing Test,Performing Test,5591,"-- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5647,performance,Performing Test,Performing Test,5647,"rming Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5695,performance,Performing Test,Performing Test,5695," -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7600,performance,Performing Test,Performing Test,7600,"ke, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7650,performance,Performing Test,Performing Test,7650,"ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7710,performance,Performing Test,Performing Test,7710,"ts.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7765,performance,Performing Test,Performing Test,7765,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7830,performance,Performing Test,Performing Test,7830,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7883,performance,Performing Test,Performing Test,7883,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8293,performance,Error,Error,8293,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8410,performance,Error,Error,8410,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8426,performance,Error,Error,8426,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8466,performance,Error,Error,8466,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8594,performance,error,errors,8594,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2955,reliability,Fail,Failed,2955,"est SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3098,reliability,Fail,Failed,3098,"r/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3617,reliability,Fail,Failed,3617,g Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3748,reliability,Fail,Failed,3748,R_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4341,reliability,Fail,Failed,4341,LLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4696,reliability,Fail,Failed,4696, Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4813,reliability,Fail,Failed,4813,forming Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4934,reliability,Fail,Failed,4934,"ing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:623,safety,Detect,Detecting,623,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:657,safety,Detect,Detecting,657,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:754,safety,Detect,Detecting,754,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:787,safety,Detect,Detecting,787,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:827,safety,Detect,Detecting,827,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:863,safety,Detect,Detecting,863,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:965,safety,Detect,Detecting,965,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1000,safety,Detect,Detecting,1000,"reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1111,safety,Test,Test,1111,"'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1145,safety,Test,Test,1145,"ects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1225,safety,Test,Test,1225,"essing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1263,safety,Test,Test,1263,"remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1476,safety,detect,detection,1476,"cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1509,safety,Test,Test,1509,"_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1545,safety,Test,Test,1545,"ication is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1591,safety,Test,Test,1591,"ntification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1629,safety,Test,Test,1629,"g C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1701,safety,Test,Test,1701," for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1759,safety,Test,Test,1759,"ng C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1827,safety,Test,Test,1827,"tecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1887,safety,Test,Test,1887," info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1957,safety,Test,Test,1957,"d. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2018,safety,Test,Test,2018,"e features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2622,safety,Test,Test,2622,"ming Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2670,safety,Test,Test,2670,"ng with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2728,safety,Test,Test,2728,"INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWIT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2778,safety,Test,Test,2778,"EMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2838,safety,Test,Test,2838,"ORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2903,safety,Test,Test,2903,"FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2977,safety,Test,Test,2977,"ITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3044,safety,Test,Test,3044,"LINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3120,safety,Test,Test,3120,"ke/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3185,safety,Test,Test,3185,"not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3260,safety,Test,Test,3260,"7"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3317,safety,Test,Test,3317,"et the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3384,safety,Test,Test,3384,"er versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3443,safety,Test,Test,3443,le 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_O,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3512,safety,Test,Test,3512,eLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3571,safety,Test,Test,3571,pers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3639,safety,Test,Test,3639,ROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3700,safety,Test,Test,3700, - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3770,safety,Test,Test,3770,rming Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3824,safety,Test,Test,3824, Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3888,safety,Test,Test,3888,- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3941,safety,Test,Test,3941,ILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4004,safety,Test,Test,4004,ARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4059,safety,Test,Test,4059,_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4124,safety,Test,Test,4124,XX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4176,safety,Test,Test,4176,orming Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4238,safety,Test,Test,4238,cess. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4296,safety,Test,Test,4296,LAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4363,safety,Test,Test,4363,ess. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4418,safety,Test,Test,4418,GH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4483,safety,Test,Test,4483,G - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4543,safety,Test,Test,4543,FAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4613,safety,Test,Test,4613,- Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPOR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4661,safety,Test,Test,4661,D_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4718,safety,Test,Test,4718,VERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4772,safety,Test,Test,4772, CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4835,safety,Test,Test,4835,ORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4891,safety,Test,Test,4891,CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors norma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4956,safety,Test,Test,4956,"_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5015,safety,Test,Test,5015,"ORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5084,safety,Test,Test,5084,"NG_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5145,safety,Test,Test,5145,"EPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5216,safety,Test,Test,5216,"cess. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5269,safety,Test,Test,5269,"RTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5332,safety,Test,Test,5332,"DTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5382,safety,Test,Test,5382,"GEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5442,safety,Test,Test,5442,"OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5494,safety,Test,Test,5494,"GEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5556,safety,Test,Test,5556,"ST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5602,safety,Test,Test,5602,"rforming Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5658,safety,Test,Test,5658," Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5706,safety,Test,Test,5706,"erforming Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6848,safety,Modul,Modules,6848,"CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7611,safety,Test,Test,7611,"ption is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7661,safety,Test,Test,7661,"E_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7721,safety,Test,Test,7721,"t:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7776,safety,Test,Test,7776,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7841,safety,Test,Test,7841,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7894,safety,Test,Test,7894,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8293,safety,Error,Error,8293,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8410,safety,Error,Error,8410,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8426,safety,Error,Error,8426,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8466,safety,Error,Error,8466,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8481,safety,modul,modules,8481,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8594,safety,error,errors,8594,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8670,safety,log,log,8670,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8734,safety,log,log,8734,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:540,security,ident,identification,540,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:590,security,ident,identification,590,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:623,security,Detect,Detecting,623,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:657,security,Detect,Detecting,657,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:754,security,Detect,Detecting,754,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:787,security,Detect,Detecting,787,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:827,security,Detect,Detecting,827,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:863,security,Detect,Detecting,863,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:965,security,Detect,Detecting,965,"Also reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1000,security,Detect,Detecting,1000,"reproducible on gentoo. ```. jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git. Cloning into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1476,security,detect,detection,1476,"cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2169,security,Polic,Policy,2169,"s. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2249,security,polic,policy,2249,"Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Per",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2269,security,polic,policy,2269,"info_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2326,security,polic,policy,2326,"btinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5845,security,Polic,Policy,5845,"ORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5925,security,polic,policy,5925,"LAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: opti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5945,security,polic,policy,5945,"forming Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6002,security,polic,policy,6002,"erforming Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6373,security,Polic,Policy,6373,"rming Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6453,security,polic,policy,6453,"RTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_sign",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6473,security,polic,policy,6473,"NS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6530,security,polic,policy,6530,"Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6897,security,Polic,Policy,6897,"bles. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6977,security,polic,policy,6977,"y command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6997,security,polic,policy,6997,"e policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7054,security,polic,policy,7054,"h older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8549,security,configur,configuring,8549,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8570,security,Configur,Configuring,8570,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8670,security,log,log,8670,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8734,security,log,log,8734,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1111,testability,Test,Test,1111,"'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1145,testability,Test,Test,1145,"ects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1225,testability,Test,Test,1225,"essing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1263,testability,Test,Test,1263,"remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1509,testability,Test,Test,1509,"_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1545,testability,Test,Test,1545,"ication is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1591,testability,Test,Test,1591,"ntification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1629,testability,Test,Test,1629,"g C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1701,testability,Test,Test,1701," for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1759,testability,Test,Test,1759,"ng C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1827,testability,Test,Test,1827,"tecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1887,testability,Test,Test,1887," info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1957,testability,Test,Test,1957,"d. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2018,testability,Test,Test,2018,"e features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2622,testability,Test,Test,2622,"ming Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2670,testability,Test,Test,2670,"ng with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2728,testability,Test,Test,2728,"INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWIT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2778,testability,Test,Test,2778,"EMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2838,testability,Test,Test,2838,"ORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2903,testability,Test,Test,2903,"FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2977,testability,Test,Test,2977,"ITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3044,testability,Test,Test,3044,"LINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3120,testability,Test,Test,3120,"ke/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3185,testability,Test,Test,3185,"not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3260,testability,Test,Test,3260,"7"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3317,testability,Test,Test,3317,"et the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3384,testability,Test,Test,3384,"er versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3443,testability,Test,Test,3443,le 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_O,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3512,testability,Test,Test,3512,eLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3571,testability,Test,Test,3571,pers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3639,testability,Test,Test,3639,ROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3700,testability,Test,Test,3700, - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3770,testability,Test,Test,3770,rming Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3824,testability,Test,Test,3824, Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3888,testability,Test,Test,3888,- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3941,testability,Test,Test,3941,ILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4004,testability,Test,Test,4004,ARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4059,testability,Test,Test,4059,_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4124,testability,Test,Test,4124,XX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4176,testability,Test,Test,4176,orming Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4238,testability,Test,Test,4238,cess. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4296,testability,Test,Test,4296,LAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4363,testability,Test,Test,4363,ess. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4418,testability,Test,Test,4418,GH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4483,testability,Test,Test,4483,G - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4543,testability,Test,Test,4543,FAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4613,testability,Test,Test,4613,- Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPOR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4661,testability,Test,Test,4661,D_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4718,testability,Test,Test,4718,VERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4772,testability,Test,Test,4772, CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4835,testability,Test,Test,4835,ORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4891,testability,Test,Test,4891,CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors norma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4956,testability,Test,Test,4956,"_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5015,testability,Test,Test,5015,"ORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5084,testability,Test,Test,5084,"NG_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5145,testability,Test,Test,5145,"EPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5216,testability,Test,Test,5216,"cess. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5269,testability,Test,Test,5269,"RTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5332,testability,Test,Test,5332,"DTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5382,testability,Test,Test,5382,"GEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5442,testability,Test,Test,5442,"OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5494,testability,Test,Test,5494,"GEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5556,testability,Test,Test,5556,"ST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this war",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5602,testability,Test,Test,5602,"rforming Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5658,testability,Test,Test,5658," Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5706,testability,Test,Test,5706,"erforming Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7611,testability,Test,Test,7611,"ption is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7661,testability,Test,Test,7661,"E_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7721,testability,Test,Test,7721,"t:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7776,testability,Test,Test,7776,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7841,testability,Test,Test,7841,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7894,testability,Test,Test,7894,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8670,testability,log,log,8670,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8734,testability,log,log,8734,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1100,usability,Perform,Performing,1100,"ng into 'cling'... remote: Enumerating objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1134,usability,Perform,Performing,1134,"ting objects: 31202, done. remote: Counting objects: 100% (651/651), done. remote: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1214,usability,Perform,Performing,1214,"e: Compressing objects: 100% (193/193), done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1252,usability,Perform,Performing,1252,", done. remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551. Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done. Resolving deltas: 100% (23380/23380), done. jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1498,usability,Perform,Performing,1498,"Dbuiltin_llvm=OFF. -- The C compiler identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1534,usability,Perform,Performing,1534," identification is GNU 11.3.1. -- The CXX compiler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1580,usability,Perform,Performing,1580,"iler identification is GNU 11.3.1. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -W",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1618,usability,Perform,Performing,1618,"Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1690,usability,Perform,Performing,1690,"-- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1748,usability,Perform,Performing,1748," Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1816,usability,Perform,Performing,1816,"e. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Succes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1876,usability,Perform,Performing,1876,"iler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:1946,usability,Perform,Performing,1946,"- skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2007,usability,Perform,Performing,2007,"X compile features - done. -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config. -- Performing Test HAVE_FFI_CALL. -- Performing Test HAVE_FFI_CALL - Success. -- Found FFI: /usr/lib64/libffi.so. -- Performing Test Terminfo_LINKABLE. -- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2244,usability,help,help-policy,2244,"- Performing Test Terminfo_LINKABLE - Success. -- Found Terminfo: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2306,usability,command,command,2306,"info: /usr/lib64/libtinfo.so. -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""). -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2418,usability,clear,clearing,2418,"/lib64/libxml2.so (found version ""2.10.3""). -- Linker detection: GNU ld. -- Performing Test C_SUPPORTS_FPIC. -- Performing Test C_SUPPORTS_FPIC - Success. -- Performing Test CXX_SUPPORTS_FPIC. -- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2611,usability,Perform,Performing,2611,"- Performing Test CXX_SUPPORTS_FPIC - Success. -- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2659,usability,Perform,Performing,2659,"- Building with -fPIC. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2717,usability,Perform,Performing,2717,"EMANTIC_INTERPOSITION. -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2767,usability,Perform,Performing,2767,"TS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2827,usability,Perform,Performing,2827,"CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION. -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2892,usability,Perform,Performing,2892,"UPPORTS_FNO_SEMANTIC_INTERPOSITION - Success. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:2966,usability,Perform,Performing,2966,"FVISIBILITY_INLINES_HIDDEN_FLAG. -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3033,usability,Perform,Performing,3033,"ILITY_INLINES_HIDDEN_FLAG - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3109,usability,Perform,Performing,3109,"/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3174,usability,Perform,Performing,3174,"0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3249,usability,Perform,Performing,3249,"y CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3306,usability,Perform,Performing,3306,"nd to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_W",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3373,usability,Perform,Performing,3373,"with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPOR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3432,usability,Perform,Performing,3432,l variable 'LLVM_ENABLE_WARNINGS'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3501,usability,Perform,Performing,3501,):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3560,usability,Perform,Performing,3560,t developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVER,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3628,usability,Perform,Performing,3628,ORTS_WERROR_DATE_TIME. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3689,usability,Perform,Performing,3689,ATE_TIME - Success. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME. -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3759,usability,Perform,Performing,3759,-- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Per,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3813,usability,Perform,Performing,3813,cess. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3877,usability,Perform,Performing,3877,Y_NEW. -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Pe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3930,usability,Perform,Performing,3930,_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:3993,usability,Perform,Performing,3993,ROR_UNGUARDED_AVAILABILITY_NEW. -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4048,usability,Perform,Performing,4048,SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4113,usability,Perform,Performing,4113,g Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG. -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDEN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4165,usability,Perform,Performing,4165, -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEAD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4227,usability,Perform,Performing,4227,AG - Success. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4285,usability,Perform,Performing,4285,HROUGH_FLAG. -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4352,usability,Perform,Performing,4352,G - Success. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4407,usability,Perform,Performing,4407,ALLTHROUGH_FLAG. -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4472,usability,Perform,Performing,4472,OUGH_FLAG - Success. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTION,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4532,usability,Perform,Performing,4532,WITCH_DEFAULT_FLAG. -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Succ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4602,usability,Perform,Performing,4602,LT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4650,usability,Perform,Performing,4650,S_COVERED_SWITCH_DEFAULT_FLAG. -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4707,usability,Perform,Performing,4707,PORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4761,usability,Perform,Performing,4761,ing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG. -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4824,usability,Perform,Performing,4824,CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4880,usability,Perform,Performing,4880,ng Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() hono,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:4945,usability,Perform,Performing,4945,"SUPPORTS_REDUNDANT_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for polic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5004,usability,Perform,Performing,5004,"CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG. -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5073,usability,Perform,Performing,5073,"ESSIMIZING_MOVE_FLAG - Success. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5134,usability,Perform,Performing,5134,"TS_NOEXCEPT_TYPE_FLAG. -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5205,usability,Perform,Performing,5205,"AG - Success. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5258,usability,Perform,Performing,5258,"AL_NONVIRTUALDTOR. -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5321,usability,Perform,Performing,5321,"NVIRTUALDTOR - Failed. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmak",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5371,usability,Perform,Performing,5371,"ORTS_SUGGEST_OVERRIDE_FLAG. -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Pol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5431,usability,Perform,Performing,5431,"SUGGEST_OVERRIDE_FLAG - Success. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5483,usability,Perform,Performing,5483,"CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL. -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5545,usability,Perform,Performing,5545,"X_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5591,usability,Perform,Performing,5591,"s. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP. -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5647,usability,Perform,Performing,5647,"rforming Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5695,usability,Perform,Performing,5695,"ed. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG. -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5920,usability,help,help-policy,5920,"_FLAG - Failed. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5982,usability,command,command,5982,"ENTATION_FLAG. -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6094,usability,clear,clearing,6094,"RTS_MISLEADING_INDENTATION_FLAG. -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6448,usability,help,help-policy,6448,"PORTS_FFUNCTION_SECTIONS. -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6510,usability,command,command,6510,"UNCTION_SECTIONS - Success. -- Performing Test C_SUPPORTS_FDATA_SECTIONS. -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6622,usability,clear,clearing,6622,"CTIONS - Success. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS. -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:6972,usability,help,help-policy,6972,"icy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7034,usability,command,command,7034,"r compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_EH'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7146,usability,clear,clearing,7146,"ck (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7600,usability,Perform,Performing,7600,"CMake, option is clearing the. normal variable 'LLVM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7650,usability,Perform,Performing,7650,"VM_ENABLE_RTTI'. Call Stack (most recent call first):. CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7710,usability,Perform,Performing,7710,"Lists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7765,usability,Perform,Performing,7765,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7830,usability,Perform,Performing,7830,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:7883,usability,Perform,Performing,7883,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8293,usability,Error,Error,8293,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8410,usability,Error,Error,8410,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8426,usability,Error,Error,8426,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8466,usability,Error,Error,8466,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:8594,usability,error,errors,8594,"ject developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):. Policy CMP0077 is not set: option() honors normal variables. Run ""cmake. --help-policy CMP0077"" for policy details. Use the cmake_policy command to. set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the. normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'. Call Stack (most recent call first):. /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION). CMakeLists.txt:95 (include). This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin. -- Looking for os_signpost_interval_begin - not found. -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""). -- Performing Test CXX_HAS_Wno_nested_anon_types. -- Performing Test CXX_HAS_Wno_nested_anon_types - Success. -- Performing Test CXX_HAS_Wno_covered_switch_default. -- Performing Test CXX_HAS_Wno_covered_switch_default - Success. -- Performing Test CXX_HAS_Wno_unused_local_typedef. -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success. -- Cling version (from VERSION file): 1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime. -- And if not found, will invoke: '/usr/bin/c++ ' for them. CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp. CMake Error: : System Error: No such file or directory. CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):. configure_file Problem configuring file. -- Configuring incomplete, errors occurred! See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"". See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"". jonesmz@ymir ~ $. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/issues/11920:5,safety,accid,accidentally,5,Ah I accidentally duplicated the issue: https://github.com/root-project/root/issues/12151. https://github.com/root-project/root/pull/12153 should fix this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11920
https://github.com/root-project/root/pull/11921:31,availability,Error,Error,31,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:210,availability,Error,Error,210,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:393,availability,Error,Error,393,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:560,availability,Error,Error,560,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:596,availability,Error,Error,596,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:703,availability,Error,Error,703,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:792,availability,avail,available,792,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:854,availability,Error,Error,854,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:943,availability,avail,available,943,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1005,availability,Error,Error,1005,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1094,availability,avail,available,1094,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1222,deployability,build,build,1222,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1342,deployability,upgrad,upgrade,1342,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:721,energy efficiency,Load,LoadClassInfo,721,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:872,energy efficiency,Load,LoadClassInfo,872,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1023,energy efficiency,Load,LoadClassInfo,1023,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:633,integrability,EVENT,EVENT,633,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:672,integrability,EVENT,EVENT,672,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:774,integrability,EVENT,EVENT,774,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:845,integrability,rout,routine,845,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:925,integrability,EVENT,EVENT,925,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:996,integrability,rout,routine,996,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1076,integrability,EVENT,EVENT,1076,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1147,integrability,rout,routine,1147,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1342,modifiability,upgrad,upgrade,1342,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:31,performance,Error,Error,31,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:210,performance,Error,Error,210,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:393,performance,Error,Error,393,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:560,performance,Error,Error,560,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:596,performance,Error,Error,596,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:653,performance,content,content,653,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:703,performance,Error,Error,703,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:721,performance,Load,LoadClassInfo,721,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:854,performance,Error,Error,854,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:872,performance,Load,LoadClassInfo,872,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1005,performance,Error,Error,1005,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1023,performance,Load,LoadClassInfo,1023,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:792,reliability,availab,available,792,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:943,reliability,availab,available,943,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1094,reliability,availab,available,1094,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:31,safety,Error,Error,31,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:210,safety,Error,Error,210,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:393,safety,Error,Error,393,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:560,safety,Error,Error,560,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:596,safety,Error,Error,596,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:703,safety,Error,Error,703,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:792,safety,avail,available,792,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:854,safety,Error,Error,854,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:943,safety,avail,available,943,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1005,safety,Error,Error,1005,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1094,safety,avail,available,1094,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1192,safety,test,testDetails,1192,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1208,safety,test,test,1208,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1241,safety,Test,Test,1241,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:792,security,availab,available,792,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:943,security,availab,available,943,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1094,security,availab,available,1094,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1192,testability,test,testDetails,1192,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1208,testability,test,test,1208,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1241,testability,Test,Test,1241,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:31,usability,Error,Error,31,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:210,usability,Error,Error,210,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:393,usability,Error,Error,393,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:560,usability,Error,Error,560,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:596,usability,Error,Error,596,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:703,usability,Error,Error,703,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:854,usability,Error,Error,854,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1005,usability,Error,Error,1005,"@andresailer reports. ```. ... Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. requested to autoload type IOIMPL::TrackerPulseIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. requested to autoload type IOIMPL::TrackerRawDataIOImpl. Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. Missing FileEntry for include/IOIMPL/VertexIOImpl.h. requested to autoload type IOIMPL::VertexIOImpl. Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload"". ... Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. ```. and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:43,availability,Error,Error,43,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:228,availability,Error,Error,228,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:417,availability,Error,Error,417,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:590,availability,Error,Error,590,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:626,availability,Error,Error,626,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:743,availability,Error,Error,743,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:832,availability,avail,available,832,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:896,availability,Error,Error,896,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:985,availability,avail,available,985,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1049,availability,Error,Error,1049,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1138,availability,avail,available,1138,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1274,deployability,build,build,1274,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1394,deployability,upgrad,upgrade,1394,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:761,energy efficiency,Load,LoadClassInfo,761,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:914,energy efficiency,Load,LoadClassInfo,914,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1067,energy efficiency,Load,LoadClassInfo,1067,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:663,integrability,EVENT,EVENT,663,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:708,integrability,EVENT,EVENT,708,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:814,integrability,EVENT,EVENT,814,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:885,integrability,rout,routine,885,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:967,integrability,EVENT,EVENT,967,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1038,integrability,rout,routine,1038,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1120,integrability,EVENT,EVENT,1120,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1191,integrability,rout,routine,1191,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1394,modifiability,upgrad,upgrade,1394,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:43,performance,Error,Error,43,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:228,performance,Error,Error,228,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:417,performance,Error,Error,417,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:590,performance,Error,Error,590,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:626,performance,Error,Error,626,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:683,performance,content,content,683,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:743,performance,Error,Error,743,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:761,performance,Load,LoadClassInfo,761,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:896,performance,Error,Error,896,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:914,performance,Load,LoadClassInfo,914,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1049,performance,Error,Error,1049,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1067,performance,Load,LoadClassInfo,1067,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:832,reliability,availab,available,832,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:985,reliability,availab,available,985,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1138,reliability,availab,available,1138,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:43,safety,Error,Error,43,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:228,safety,Error,Error,228,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:417,safety,Error,Error,417,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:590,safety,Error,Error,590,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:626,safety,Error,Error,626,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:743,safety,Error,Error,743,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:832,safety,avail,available,832,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:896,safety,Error,Error,896,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:985,safety,avail,available,985,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1049,safety,Error,Error,1049,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1138,safety,avail,available,1138,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1244,safety,test,testDetails,1244,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1260,safety,test,test,1260,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1293,safety,Test,Test,1293,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:832,security,availab,available,832,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:985,security,availab,available,985,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1138,security,availab,available,1138,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1244,testability,test,testDetails,1244,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1260,testability,test,test,1260,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1293,testability,Test,Test,1293,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:43,usability,Error,Error,43,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:228,usability,Error,Error,228,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:417,usability,Error,Error,417,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:590,usability,Error,Error,590,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:626,usability,Error,Error,626,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:743,usability,Error,Error,743,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:896,usability,Error,Error,896,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:1049,usability,Error,Error,1049,"> @andresailer reports. > . > ```. > ... > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h. > requested to autoload type IOIMPL::TrackerPulseIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h. > requested to autoload type IOIMPL::TrackerRawDataIOImpl. > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:. > Missing FileEntry for include/IOIMPL/VertexIOImpl.h. > requested to autoload type IOIMPL::VertexIOImpl. > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. > . > #line 1 ""EVENT dictionary payload"". > ... > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine. > ```. > . > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:63,deployability,upgrad,upgrade,63,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:165,deployability,build,build,165,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:63,modifiability,upgrad,upgrade,63,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:135,safety,test,testDetails,135,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:151,safety,test,test,151,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:135,testability,test,testDetails,135,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:151,testability,test,test,151,"> (cough cough) - this might be pre-existing before the llvm13 upgrade. Have some 💧 :) no ""might"" about this T_T. http://cdash.cern.ch/testDetails.php?test=14519774&build=210942",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:69,deployability,upgrad,upgrade,69,Thanks @andresailer - 2022-12-16 23:06:39 is before you saw the llvm upgrade?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:69,modifiability,upgrad,upgrade,69,Thanks @andresailer - 2022-12-16 23:06:39 is before you saw the llvm upgrade?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:27,deployability,patch,patches,27,"This is dev4, so ROOT 6.26-patches branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:27,safety,patch,patches,27,"This is dev4, so ROOT 6.26-patches branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11921:27,security,patch,patches,27,"This is dev4, so ROOT 6.26-patches branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11921
https://github.com/root-project/root/pull/11922:223,availability,error,error,223,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:15,deployability,build,build,15,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:77,interoperability,compatib,compatible,77,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:223,performance,error,error,223,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:223,safety,error,error,223,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:223,usability,error,error,223,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:225,availability,error,error,225,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:17,deployability,build,build,17,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:400,deployability,patch,patch,400,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:596,deployability,build,build,596,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:682,deployability,patch,patch,682,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:693,energy efficiency,reduc,reduce,693,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:756,integrability,event,eventually,756,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:79,interoperability,compatib,compatible,79,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:225,performance,error,error,225,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:225,safety,error,error,225,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:400,safety,patch,patch,400,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:682,safety,patch,patch,682,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:309,security,control,controlled,309,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:400,security,patch,patch,400,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:682,security,patch,patch,682,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:309,testability,control,controlled,309,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:225,usability,error,error,225,"> Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. > . > I don't see this discussed here - what's the intent? We have much more controlled way to set up the ROOT PCH within TCling and rootcling. The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. I am happy to move that to TCling but I think it would be a nop in the end as the way we build thePCH nowadays is pretty well connected to the way we run cling anyway. . This patch will reduce the boilerplate we have in the CIFactory allowing us to eventually switch to clang-repl for bootstrap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:11,deployability,build,build,11,@phsft-bot build with flags -Druntime_cxxmodules=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:751,availability,replic,replicated,751,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:26,deployability,patch,patch,26,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:179,deployability,build,build,179,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:446,deployability,version,version,446,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:670,deployability,build,build,670,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:730,deployability,build,building,730,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:806,deployability,build,building,806,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:926,deployability,fail,fail,926,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1176,deployability,build,building,1176,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1249,deployability,build,build,1249,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1285,deployability,modul,modules,1285,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1565,deployability,patch,patches,1565,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1224,energy efficiency,current,currently,1224,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1405,energy efficiency,current,currently,1405,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:446,integrability,version,version,446,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:369,modifiability,pac,package,369,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:446,modifiability,version,version,446,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1285,modifiability,modul,modules,1285,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:642,performance,time,time,642,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:926,reliability,fail,fail,926,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:26,safety,patch,patch,26,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1285,safety,modul,modules,1285,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1344,safety,test,test,1344,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1565,safety,patch,patches,1565,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:26,security,patch,patch,26,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1565,security,patch,patches,1565,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1344,testability,test,test,1344,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1443,testability,assert,assert,1443,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/pull/11922:1384,usability,prefer,preferred,1384,"> The motivation for this patch is that cling should not adjust itself to the PCHs of the client, pretty much the same way as clang. That seems to contradict the goal that a ROOT build should be relocatable. Let me retry to explain better:. ROOT is built on machine 1 with some flags, e.g. `-DMACOS_DEPLOYMENT_TARGET=13.1` (just making this up). Now we try to run this package on a different machine, where clang would (e.g. because of the Xcode version) set `-DMACOS_DEPLOYMENT_TARGET=13.2`. Before this used to work because the compiler config is taken from the PCH. This PR will break this case. Typical cases might be:. - not all compile time flags made it from the build of ROOT to . - not all flags passed to rootcling when building the PCH are replicated by the Driver. You should be able to try by building ROOT with `CXXFLAGS=-Dfoo` and then running the resulting ROOT binary without. This works in master and should fail in your PR. This has been a real issue, seen with macOS and experiments, which triggered me to take the PCH compiler config as the source of truth, and not an unrelated config determined at runtime and potentially clashing with what we had when building the PCH. I believe several experiments currently still use ROOT build with a PCH due to issues with modules. As a way forward I propose:. - try the `CXXFLAGS` test I mention above. - check with your preferred experiment currently using PCH in production, to assert relocatability e.g. onto grid nodes. Either way I'd strongly recommend we merge this only after branching v6-28-00-patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11922
https://github.com/root-project/root/issues/11924:251,deployability,version,version,251,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:251,integrability,version,version,251,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:251,modifiability,version,version,251,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:192,safety,compl,complex,192,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:234,safety,compl,complex,234,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:192,security,compl,complex,192,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:234,security,compl,complex,234,"The output is here:. ```. Function(x): myfun(1.0)=(1+0j). Function(x): myfun((1+1j))=(1+1j). ```. The first line demonstrates the problem: . here I expect to obtain `double` value instead of `complex`. . For both argument type, `std::complex<double>` version of the function is invoked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:163,performance,time,time,163,"Hi @VanyaBelyaev ,. Thanks for reaching out! I can't take a look at this right now, but I know the place where overload resolution happens and it is not the first time that I see this unexpected behaviour from cppyy. I assign this to myself, will let you know when I have news.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:195,usability,behavi,behaviour,195,"Hi @VanyaBelyaev ,. Thanks for reaching out! I can't take a look at this right now, but I know the place where overload resolution happens and it is not the first time that I see this unexpected behaviour from cppyy. I assign this to myself, will let you know when I have news.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:31,deployability,updat,updating,31,This will indeed be fixed when updating to the newest CPyCppyy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:31,safety,updat,updating,31,This will indeed be fixed when updating to the newest CPyCppyy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11924:31,security,updat,updating,31,This will indeed be fixed when updating to the newest CPyCppyy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11924
https://github.com/root-project/root/issues/11927:130,availability,slo,slowdown,130,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:78,deployability,upgrad,upgrade,78,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:269,deployability,patch,patch,269,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:78,modifiability,upgrad,upgrade,78,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:130,reliability,slo,slowdown,130,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:213,safety,test,test,213,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:269,safety,patch,patch,269,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:269,security,patch,patch,269,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:213,testability,test,test,213,"Hi @VanyaBelyaev,. thanks for reaching out! This may be related to the recent upgrade to LLVM 13, it seems there is an unexpected slowdown with JITted code. The root cause is not known yet, but we'll make sure to test with your example script as well once we have some patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:77,availability,slo,slot,77,"thank you @vepadulano . but please note that performace for the ""pre-Friday"" slot is also not perfect.. It will be very good to come back to the numbers obtained with 6.26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,performance,perform,performace,45,"thank you @vepadulano . but please note that performace for the ""pre-Friday"" slot is also not perfect.. It will be very good to come back to the numbers obtained with 6.26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:77,reliability,slo,slot,77,"thank you @vepadulano . but please note that performace for the ""pre-Friday"" slot is also not perfect.. It will be very good to come back to the numbers obtained with 6.26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,usability,perform,performace,45,"thank you @vepadulano . but please note that performace for the ""pre-Friday"" slot is also not perfect.. It will be very good to come back to the numbers obtained with 6.26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:68,availability,degrad,degradation,68,The LLVM upgrade was merged on Friday December 9th. Do you see this degradation before that date too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:9,deployability,upgrad,upgrade,9,The LLVM upgrade was merged on Friday December 9th. Do you see this degradation before that date too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:9,modifiability,upgrad,upgrade,9,The LLVM upgrade was merged on Friday December 9th. Do you see this degradation before that date too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:68,reliability,degrad,degradation,68,The LLVM upgrade was merged on Friday December 9th. Do you see this degradation before that date too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:114,deployability,fail,fail,114,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:181,energy efficiency,CPU,CPU,181,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:129,performance,time,timeout,129,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:181,performance,CPU,CPU,181,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:185,performance,time,time,185,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:114,reliability,fail,fail,114,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:48,safety,test,tests,48,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:97,safety,test,tests,97,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:129,safety,timeout,timeout,129,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:198,safety,test,tests,198,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:264,safety,test,tests,264,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:48,testability,test,tests,48,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:97,testability,test,tests,97,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:198,testability,test,tests,198,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:264,testability,test,tests,264,"the first two weeks of December I've not run my tests very often. Actually all my GitHub actions tests started to fail to due to timeout from the Friday. And inspecting the overall CPU time for all tests, I do not see large steps/peaks . around December 8 for my [tests](https://github.com/OstapHEP/ostap/actions?page=2).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:46,usability,hint,hints,46,Can you provide a Flamegraph or anything that hints us where to look?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:101,availability,slo,slower,101,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:22,deployability,continu,continue,22,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:62,energy efficiency,current,currently,62,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:128,energy efficiency,optim,optimization,128,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:128,performance,optimiz,optimization,128,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:101,reliability,slo,slower,101,"FYI I'm on it, I will continue after the break early 2023. It currently seems to be a combination of slower jitting and missing optimization, I am working on fixing the latter today. We saw these effects also in our own benchmarks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:375,availability,slo,slot,375,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,deployability,modul,module,45,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:324,deployability,releas,release,324,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:402,deployability,scale,scale,402,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:105,energy efficiency,core,core,105,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:110,energy efficiency,core,core,110,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:126,energy efficiency,load,loads,126,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:254,energy efficiency,CPU,CPU,254,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:402,energy efficiency,scale,scale,402,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,modifiability,modul,module,45,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:209,modifiability,deco,decoration,209,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:402,modifiability,scal,scale,402,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:126,performance,load,loads,126,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:194,performance,perform,performs,194,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:254,performance,CPU,CPU,254,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:402,performance,scale,scale,402,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:375,reliability,slo,slot,375,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,safety,modul,module,45,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:194,usability,perform,performs,194,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:448,usability,indicat,indicates,448,"@Axel-Naumann . I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:69,deployability,upgrad,upgrade,69,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:174,deployability,upgrad,upgrade,174,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:216,deployability,releas,release-with-debug,216,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:235,deployability,build,build,235,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:470,deployability,updat,update,470,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:685,deployability,build,build,685,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:296,energy efficiency,CPU,CPU,296,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:69,modifiability,upgrad,upgrade,69,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:174,modifiability,upgrad,upgrade,174,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:256,performance,time,time,256,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:296,performance,CPU,CPU,296,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:300,performance,time,time,300,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:612,performance,perform,performance,612,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:100,safety,detect,detected,100,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:470,safety,updat,update,470,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:100,security,detect,detected,100,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:470,security,updat,update,470,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:116,testability,regress,regression,116,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:291,usability,user,user,291,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:612,usability,perform,performance,612,"I cannot reproduce this :-/ I'm looking at ROOT just-before-the-llvm-upgrade (I do realize that you detected a perf regression also wrt to that - but let's focus on the llvm upgrade first) and ROOT right after, in a release-with-debug build, running. ```. time python3 ./tst100.py. ```. For user CPU time I get 2.60s for llvm9 and 2.69s for llvm13. So indeed it would be good to have flamegraphs from you - or anything like that (callgrind,...). @VanyaBelyaev could you update your sentence from the [first post](https://github.com/root-project/root/issues/11927#issue-1502617659). > but about of factor of 2 in performance comes from the of 2 of this difference that comes the Friday build. I guess I know what you mean but I'd like to make sure :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:179,availability,echo,echo,179,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:420,availability,echo,echo,420,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:35,energy efficiency,profil,profile,35,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:210,energy efficiency,profil,profile,210,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:451,energy efficiency,profil,profile,451,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:75,interoperability,platform,platform,75,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:312,interoperability,platform,platform,312,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:35,performance,profil,profile,35,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:195,performance,time,time,195,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:210,performance,profil,profile,210,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:436,performance,time,time,436,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:451,performance,profil,profile,451,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:24,testability,simpl,simple,24,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:24,usability,simpl,simple,24,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:51,usability,help,helpful,51,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:273,usability,user,user,273,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:512,usability,user,user,512,@Axel-Naumann . In case simple `-m profile` can be helpful:. ```. ( lb-set-platform x86_64-centos7-gcc11-opt ; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root626.txt) . ... . real	0m14.144s. user	0m10.412s. sys	0m2.730s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627.txt ). ... real	0m45.779s. user	0m36.429s. sys	0m4.734s. ```. output files: . [root626.txt](https://gist.github.com/VanyaBelyaev/17884a2fb55deea182d27fe1b3076c70). [root627.txt](https://gist.github.com/VanyaBelyaev/c8bc792ead4f2a76c08edb0392046211),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:158,availability,echo,echo,158,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:400,availability,echo,echo,400,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:573,deployability,log,log-files,573,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:916,deployability,fail,fails,916,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:189,energy efficiency,profil,profile,189,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:431,energy efficiency,profil,profile,431,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:820,energy efficiency,CPU,CPU,820,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:53,interoperability,platform,platform,53,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:295,interoperability,platform,platform,295,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:174,performance,time,time,174,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:189,performance,profil,profile,189,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:416,performance,time,time,416,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:431,performance,profil,profile,431,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:541,performance,time,time,541,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:820,performance,CPU,CPU,820,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:824,performance,perform,performance,824,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:929,performance,time,timeover,929,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:916,reliability,fail,fails,916,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:4,safety,compl,completeness,4,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:573,safety,log,log-files,573,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:753,safety,test,tests,753,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:4,security,compl,completeness,4,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:573,security,log,log-files,573,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:573,testability,log,log-files,573,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:753,testability,test,tests,753,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:256,usability,user,user,256,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:501,usability,user,user,501,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:779,usability,clear,clearly,779,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:824,usability,perform,performance,824,"For completeness dev3/Fri vs dev3/Thu. ```. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt . ... real	0m45.976s. user	0m36.305s. sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ). ... real	0m31.001s. user	0m12.790s. sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:179,availability,slo,slow-down,179,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:147,energy efficiency,profil,profiles,147,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:244,energy efficiency,CPU,CPU,244,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:248,energy efficiency,Profil,Profiling,248,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:319,interoperability,share,share,319,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:147,performance,profil,profiles,147,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:244,performance,CPU,CPU,244,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:248,performance,Profil,Profiling,248,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:179,reliability,slo,slow-down,179,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:2,safety,compl,completely,2,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:2,security,compl,completely,2,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:125,usability,help,help,125,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:162,usability,help,help,162,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,performance,time,time,45,"thank you, @Axel-Naumann . it will take some time for me and likely I will be able to do it only in January.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:73,availability,slo,slot,73,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:93,performance,perform,performance,93,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:73,reliability,slo,slot,73,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,safety,test,tests,45,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:45,testability,test,tests,45,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:16,usability,paus,pause,16,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:93,usability,perform,performance,93,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:108,usability,close,close,108,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/issues/11927:206,usability,close,closed,206,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11927
https://github.com/root-project/root/pull/11929:8,availability,failur,failure,8,Windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11929
https://github.com/root-project/root/pull/11929:8,deployability,fail,failure,8,Windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11929
https://github.com/root-project/root/pull/11929:8,performance,failur,failure,8,Windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11929
https://github.com/root-project/root/pull/11929:8,reliability,fail,failure,8,Windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11929
https://github.com/root-project/root/issues/11930:0,deployability,Version,Version,0,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11930:60,deployability,upgrad,upgrade,60,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11930:0,integrability,Version,Version,0,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11930:0,modifiability,Version,Version,0,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11930:60,modifiability,upgrad,upgrade,60,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11930:261,usability,prototyp,prototype,261,"In general, it is problem of `TClass::GetMethodWithPrototype` method. I can reproduce it with other static methods like:. ```. TClass *cl = TClass::GetClass(""TGeoManager"");. auto fMethod = cl->GetMethodWithPrototype(""UnlockGeometry"", """"); // works with ""()"" as prototype. auto fCallEnv = new TMethodCall;. fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;. fCallEnv->Execute(ret);. ```. Should I try to fix `GetMethodWithPrototype`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11930
https://github.com/root-project/root/issues/11931:83,deployability,upgrad,upgraded,83,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:100,deployability,version,version,100,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:100,integrability,version,version,100,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:83,modifiability,upgrad,upgraded,83,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:100,modifiability,version,version,100,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:205,usability,close,close,205,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:293,usability,close,close,293,"Hi @bernhardmgruber, is this issue still relevant? It might be fixed now that ROOT upgraded the tbb version:. https://github.com/root-project/root/pull/13724. Can you maybe try again, and if it works now, close the issue? Or if you don't care about reproducing the problem again, you can also close the issue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:64,deployability,upgrad,upgraded,64,"Hi @guitargeek, I am no longer able to check this, since I have upgraded to Ubuntu 23.04 in the meantime. I can try it again on my newer system in a few days, but would then open a separate issue, if the problem persists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/issues/11931:64,modifiability,upgrad,upgraded,64,"Hi @guitargeek, I am no longer able to check this, since I have upgraded to Ubuntu 23.04 in the meantime. I can try it again on my newer system in a few days, but would then open a separate issue, if the problem persists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11931
https://github.com/root-project/root/pull/11932:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -DCMAKE_CXX_STANDARD=17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11932
https://github.com/root-project/root/pull/11932:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -DCMAKE_CXX_STANDARD=17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11932
https://github.com/root-project/root/issues/11934:115,availability,state,statement,115,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:977,availability,error,error,977,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1591,availability,error,error,1591,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2109,availability,error,error,2109,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:998,deployability,fail,failed,998," guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1743,deployability,fail,fails,1743,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:115,integrability,state,statement,115,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:565,integrability,messag,message,565,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1448,integrability,sub,substituting,1448,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1658,integrability,wrap,wrapper,1658,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2219,integrability,messag,message,2219,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:565,interoperability,messag,message,565,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1658,interoperability,wrapper,wrapper,1658,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2219,interoperability,messag,message,2219,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:928,modifiability,scal,scalar,928,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:955,modifiability,scal,scalar,955,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1165,modifiability,paramet,parameter,1165," with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1375,modifiability,Scal,Scalar,1375,"chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:977,performance,error,error,977,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1591,performance,error,error,1591,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2109,performance,error,error,2109,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:998,reliability,fail,failed,998," guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1743,reliability,fail,fails,1743,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:977,safety,error,error,977,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1591,safety,error,error,1591,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2109,safety,error,error,2109,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:845,usability,User,Users,845,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:894,usability,User,Users,894,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:977,usability,error,error,977,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. std::chrono::nanoseconds dur;. std::chrono::floor<std::chrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:1591,usability,error,error,1591,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/issues/11934:2109,usability,error,error,2109,"hrono::seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . $ . ```. Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```. #include ""Vc/vector.h"". #include <chrono>. void foo() {. using namespace std::chrono;. nanoseconds dur;. floor<seconds>(dur);. }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp . In file included from a.cpp:1:. In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:. /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T."". static_assert(std::is_arithmetic<T>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here. floor<seconds>(dur);. ^. a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]. floor<seconds>(dur);. ^. 1 error generated. ```. In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```. #if _LIBCPP_STD_VER > 14. template <class _ToDuration, class _Clock, class _Duration>. typename enable_if. <. __is_duration<_ToDuration>::value,. time_point<_Clock, _ToDuration>. >::type. floor(const time_point<_Clock, _Duration>& __t). {. return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};. // ^^^^^ here is a compiler error. }. ```. I tried to insert std::chrono there (right to the 'chrono' header), and the code from my first message. ```. void foo() {. std::chrono::time_point<std::chrono::system_clock,. std::chrono::nanoseconds> tp;. std::chrono::floor<std::chrono::seconds>(tp);. }. ```. got compiled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11934
https://github.com/root-project/root/pull/11936:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11936
https://github.com/root-project/root/issues/11937:127,deployability,version,versions,127,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11937:311,deployability,version,versions,311,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11937:127,integrability,version,versions,127,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11937:311,integrability,version,versions,311,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11937:127,modifiability,version,versions,127,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11937:311,modifiability,version,versions,311,"Apple's solution was to default ""no-fixup-chains"" to on when `undefined dynamic_lookup` is passed; you can enable it for older versions to hide the warning as well, see https://github.com/pybind/pybind11/pull/4301#issuecomment-1446246379 and the linked CPython issue. Not sure yet if it causes issues for older versions that don't produce the warning in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11937
https://github.com/root-project/root/issues/11938:640,energy efficiency,Draw,Draw,640,"a simpler reproducer:. ```. void HV_comp_red(){. Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};. Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};. auto graph0 = new TGraph(28, biasVoltage, mean0);. graph0->SetMarkerColor(2);. graph0->SetMarkerStyle(20);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);. canvas->SetLogx();. graph0->Draw(""a p rx"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:2,testability,simpl,simpler,2,"a simpler reproducer:. ```. void HV_comp_red(){. Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};. Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};. auto graph0 = new TGraph(28, biasVoltage, mean0);. graph0->SetMarkerColor(2);. graph0->SetMarkerStyle(20);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);. canvas->SetLogx();. graph0->Draw(""a p rx"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:2,usability,simpl,simpler,2,"a simpler reproducer:. ```. void HV_comp_red(){. Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};. Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};. auto graph0 = new TGraph(28, biasVoltage, mean0);. graph0->SetMarkerColor(2);. graph0->SetMarkerStyle(20);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);. canvas->SetLogx();. graph0->Draw(""a p rx"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:147,deployability,log,log,147,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:57,interoperability,coordinat,coordinates,57,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:3,reliability,doe,does,3,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:147,safety,log,log,147,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:147,security,log,log,147,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:147,testability,log,log,147,"It does not seem possible because we do not have reverse coordinates for pads. In linear mode, we can revert each point but that’s not possible in log. At least I do not see how to do it right now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:24,availability,error,errors,24,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:24,performance,error,errors,24,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:24,safety,error,errors,24,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/issues/11938:24,usability,error,errors,24,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11938
https://github.com/root-project/root/pull/11939:858,energy efficiency,Draw,Draw,858,"Thanks for merging! Now I also checked that the NLL defined like this is indeed chisquare distributed:. ```c++. void checkChiSquare(). {. using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 0, -10, 10);. RooRealVar sigma(""sigma"", ""width of gaussian"", 2, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. double xmin = 0;. double xmax = 200;. TH1F hist{""minNll"", ""minNll"", 100, xmin, xmax};. for(std::size_t i = 0; i < 10000; ++i) {. std::unique_ptr<RooAbsData> data{gauss.generateBinned(x, 1000000)};. std::unique_ptr<RooFitResult> res{gauss.fitTo(*data, Save(), PrintLevel(-1), Offset(""bin""))};. hist.Fill(2 * res->minNll());. }. TF1 f1(""ch2f"",""[1]*ROOT::Math::chisquared_pdf(x,[0])"", xmin, xmax);. f1.SetParameter(0, 60);. hist.Fit(&f1);. gStyle->SetOptFit(1011);. TCanvas c1;. hist.Draw(""E"");. c1.SaveAs(""plot.png"");. }. ```. ![plot](https://user-images.githubusercontent.com/6578603/208722037-9453a7c7-ccc1-4287-9d55-eadbc8d16649.png). The degrees of freedom is 100 bins minus 2 parameters, equals 98.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11939
https://github.com/root-project/root/pull/11939:90,interoperability,distribut,distributed,90,"Thanks for merging! Now I also checked that the NLL defined like this is indeed chisquare distributed:. ```c++. void checkChiSquare(). {. using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 0, -10, 10);. RooRealVar sigma(""sigma"", ""width of gaussian"", 2, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. double xmin = 0;. double xmax = 200;. TH1F hist{""minNll"", ""minNll"", 100, xmin, xmax};. for(std::size_t i = 0; i < 10000; ++i) {. std::unique_ptr<RooAbsData> data{gauss.generateBinned(x, 1000000)};. std::unique_ptr<RooFitResult> res{gauss.fitTo(*data, Save(), PrintLevel(-1), Offset(""bin""))};. hist.Fill(2 * res->minNll());. }. TF1 f1(""ch2f"",""[1]*ROOT::Math::chisquared_pdf(x,[0])"", xmin, xmax);. f1.SetParameter(0, 60);. hist.Fit(&f1);. gStyle->SetOptFit(1011);. TCanvas c1;. hist.Draw(""E"");. c1.SaveAs(""plot.png"");. }. ```. ![plot](https://user-images.githubusercontent.com/6578603/208722037-9453a7c7-ccc1-4287-9d55-eadbc8d16649.png). The degrees of freedom is 100 bins minus 2 parameters, equals 98.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11939
https://github.com/root-project/root/pull/11939:1056,modifiability,paramet,parameters,1056,"Thanks for merging! Now I also checked that the NLL defined like this is indeed chisquare distributed:. ```c++. void checkChiSquare(). {. using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 0, -10, 10);. RooRealVar sigma(""sigma"", ""width of gaussian"", 2, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. double xmin = 0;. double xmax = 200;. TH1F hist{""minNll"", ""minNll"", 100, xmin, xmax};. for(std::size_t i = 0; i < 10000; ++i) {. std::unique_ptr<RooAbsData> data{gauss.generateBinned(x, 1000000)};. std::unique_ptr<RooFitResult> res{gauss.fitTo(*data, Save(), PrintLevel(-1), Offset(""bin""))};. hist.Fill(2 * res->minNll());. }. TF1 f1(""ch2f"",""[1]*ROOT::Math::chisquared_pdf(x,[0])"", xmin, xmax);. f1.SetParameter(0, 60);. hist.Fit(&f1);. gStyle->SetOptFit(1011);. TCanvas c1;. hist.Draw(""E"");. c1.SaveAs(""plot.png"");. }. ```. ![plot](https://user-images.githubusercontent.com/6578603/208722037-9453a7c7-ccc1-4287-9d55-eadbc8d16649.png). The degrees of freedom is 100 bins minus 2 parameters, equals 98.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11939
https://github.com/root-project/root/pull/11939:918,usability,user,user-images,918,"Thanks for merging! Now I also checked that the NLL defined like this is indeed chisquare distributed:. ```c++. void checkChiSquare(). {. using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 0, -10, 10);. RooRealVar sigma(""sigma"", ""width of gaussian"", 2, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. double xmin = 0;. double xmax = 200;. TH1F hist{""minNll"", ""minNll"", 100, xmin, xmax};. for(std::size_t i = 0; i < 10000; ++i) {. std::unique_ptr<RooAbsData> data{gauss.generateBinned(x, 1000000)};. std::unique_ptr<RooFitResult> res{gauss.fitTo(*data, Save(), PrintLevel(-1), Offset(""bin""))};. hist.Fill(2 * res->minNll());. }. TF1 f1(""ch2f"",""[1]*ROOT::Math::chisquared_pdf(x,[0])"", xmin, xmax);. f1.SetParameter(0, 60);. hist.Fit(&f1);. gStyle->SetOptFit(1011);. TCanvas c1;. hist.Draw(""E"");. c1.SaveAs(""plot.png"");. }. ```. ![plot](https://user-images.githubusercontent.com/6578603/208722037-9453a7c7-ccc1-4287-9d55-eadbc8d16649.png). The degrees of freedom is 100 bins minus 2 parameters, equals 98.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11939
https://github.com/root-project/root/pull/11941:200,performance,time,time,200,"Good to hear! Btw, now that I think about it, I think this PR doesn't actually need the first commit (which is also in #11940). It could just be ad1505066194502735875bb6fd8596eade922832. I don't have time right now to rebase the branch, but I can do it later (or someone else can do it if they feel like it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:62,reliability,doe,doesn,62,"Good to hear! Btw, now that I think about it, I think this PR doesn't actually need the first commit (which is also in #11940). It could just be ad1505066194502735875bb6fd8596eade922832. I don't have time right now to rebase the branch, but I can do it later (or someone else can do it if they feel like it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:76,deployability,build,build,76,"Ah, I know what the problem is there (I commented that line out in my local build, that's why it didn't fail for me). I'll fix the commit up later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:104,deployability,fail,fail,104,"Ah, I know what the problem is there (I commented that line out in my local build, that's why it didn't fail for me). I'll fix the commit up later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:104,reliability,fail,fail,104,"Ah, I know what the problem is there (I commented that line out in my local build, that's why it didn't fail for me). I'll fix the commit up later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:210,availability,error,error,210,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:204,deployability,build,build,204,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:210,performance,error,error,210,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:210,safety,error,error,210,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:210,usability,error,error,210,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:122,safety,accid,accidentally,122,"Together with @guitargeek, we found and fixed (in commit abf72d623f3654b20af73b5cdbb4e6afc05e7ba6) a bug in RooNLLVarNew, accidentally proving the usefulness of this PR 😄",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:58,availability,consist,consistent,58,"The last rebase doesn't change any contents, just made it consistent with the branch in #11940. Still need to wait for CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:35,performance,content,contents,35,"The last rebase doesn't change any contents, just made it consistent with the branch in #11940. Still need to wait for CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:16,reliability,doe,doesn,16,"The last rebase doesn't change any contents, just made it consistent with the branch in #11940. Still need to wait for CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:58,usability,consist,consistent,58,"The last rebase doesn't change any contents, just made it consistent with the branch in #11940. Still need to wait for CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:22,availability,failur,failures,22,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:22,deployability,fail,failures,22,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:22,performance,failur,failures,22,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:22,reliability,fail,failures,22,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11941:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11941
https://github.com/root-project/root/pull/11944:58,deployability,version,version,58,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:101,deployability,version,version,101,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:146,deployability,version,version,146,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:58,integrability,version,version,58,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:101,integrability,version,version,101,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:146,integrability,version,version,146,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:58,modifiability,version,version,58,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:101,modifiability,version,version,101,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:146,modifiability,version,version,146,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11944:112,performance,disk,disk,112,> Very nice! I think we should be able to check the class version as well. We should store the class version on disk and compare it with the rule version. Fair enough (and... done!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11944
https://github.com/root-project/root/pull/11945:3,availability,failur,failures,3,"CI failures are unrelated / show up in other PRs, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11945
https://github.com/root-project/root/pull/11945:3,deployability,fail,failures,3,"CI failures are unrelated / show up in other PRs, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11945
https://github.com/root-project/root/pull/11945:3,performance,failur,failures,3,"CI failures are unrelated / show up in other PRs, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11945
https://github.com/root-project/root/pull/11945:3,reliability,fail,failures,3,"CI failures are unrelated / show up in other PRs, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11945
https://github.com/root-project/root/pull/11946:11,deployability,build,build,11,@phsft-bot build just on mac13arm/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:11,deployability,build,build,11,"@phsft-bot build just on mac11arm/default, mac12arm/default, mac13arm/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:14,safety,except,except,14,Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:77,safety,except,exceptions,77,Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:166,availability,failur,failure,166,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:339,availability,failur,failures,339,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:166,deployability,fail,failure,166,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:339,deployability,fail,failures,339,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:166,performance,failur,failure,166,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:339,performance,failur,failures,339,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:166,reliability,fail,failure,166,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:339,reliability,fail,failures,339,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:16,safety,except,except,16,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:79,safety,except,exceptions,79,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:227,safety,test,test,227,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:227,testability,test,test,227,"> Seems to work except for `gtest_tree_dataframe_test_dataframe_vary` throwing exceptions. I think we'll have to keep this disabled for now. This was a communication failure on my side; what I meant is that we have to keep the test disabled, but the revert of disabling GlobalISel is probably fine / potentially even needed now to address failures in the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:11,deployability,build,build,11,"@phsft-bot build just on mac11arm/default, mac12arm/default, mac13arm/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:11,deployability,build,build,11,"@phsft-bot build just on mac11arm/default, mac12arm/default, mac13arm/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:213,energy efficiency,model,model,213,"Well actually, this doesn't change anything: As I documented in https://github.com/root-project/root/pull/7419#issuecomment-799389082 almost two years ago, GlobalISel is now disabled by default for the large code model - which we enable again after https://github.com/root-project/root/pull/12237 - due to a change in LLVM 13: https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:20,reliability,doe,doesn,20,"Well actually, this doesn't change anything: As I documented in https://github.com/root-project/root/pull/7419#issuecomment-799389082 almost two years ago, GlobalISel is now disabled by default for the large code model - which we enable again after https://github.com/root-project/root/pull/12237 - due to a change in LLVM 13: https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:213,security,model,model,213,"Well actually, this doesn't change anything: As I documented in https://github.com/root-project/root/pull/7419#issuecomment-799389082 almost two years ago, GlobalISel is now disabled by default for the large code model - which we enable again after https://github.com/root-project/root/pull/12237 - due to a change in LLVM 13: https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:50,usability,document,documented,50,"Well actually, this doesn't change anything: As I documented in https://github.com/root-project/root/pull/7419#issuecomment-799389082 almost two years ago, GlobalISel is now disabled by default for the large code model - which we enable again after https://github.com/root-project/root/pull/12237 - due to a change in LLVM 13: https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:75,energy efficiency,reduc,reduce,75,"But that still means we should merge this, I suppose? Even if it's just to reduce the LOC / complexity and use defaults where possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:92,safety,compl,complexity,92,"But that still means we should merge this, I suppose? Even if it's just to reduce the LOC / complexity and use defaults where possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:92,security,compl,complexity,92,"But that still means we should merge this, I suppose? Even if it's just to reduce the LOC / complexity and use defaults where possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:100,availability,sli,slight,100,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:107,availability,slo,slowdown,107,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:39,deployability,observ,observe,39,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:100,reliability,sli,slight,100,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:107,reliability,slo,slowdown,107,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:39,testability,observ,observe,39,"But FWIW, if I force GlobalISel, I can observe no difference in the runtime of `test_hugeRDF` and a slight slowdown (up to 10%) in `JitLargeGraphs` (from `rootbench`), which really tortures the JIT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11946:0,availability,ping,ping,0,ping @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11946
https://github.com/root-project/root/pull/11948:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11948
https://github.com/root-project/root/pull/11949:327,integrability,interfac,interface,327,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:337,integrability,event,eventually,337,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:327,interoperability,interfac,interface,327,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:327,modifiability,interfac,interface,327,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:303,security,expos,expose,303,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:130,usability,efficien,efficient,130,"Hi, Thank you @ShamrockLee very much for this contribution! As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. . If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5,deployability,updat,updated,5,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5,safety,updat,updated,5,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:172,safety,review,reviewing,172,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5,security,updat,updated,5,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:172,testability,review,reviewing,172,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:187,usability,behavi,behavior,187,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:337,usability,behavi,behavioral,337,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:466,usability,efficien,efficiencies,466,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:498,usability,document,documentation,498,"Just updated according to your suggestion in another PR https://github.com/root-project/root/pull/11948#discussion_r1054468412 . @lmoneta Thank you for your suggestion and reviewing. The behavior of the added `TH1::GetCumulativeIncExc` is equivalent to the original `TH1::GetCumulative` *only* for 1D histograms (`fDimension == 1`). The behavioral difference in higher-dimensional histograms is to ensure that the output is still sensible when calculating selection efficiencies. According to the [documentation](https://root.cern.ch/doc/master/classTH1.html#a5709d315b774a89b1f7e6a71b0e9c380), the original implementation of `GetCumulative` method may not make sense for higher-dimensional use. This would be a good reason to replace the existing method with this one. However, the change could be breaking for people who happen to use the existing method on higher-dimensional histograms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:275,availability,sli,slightly,275,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3059,availability,error,error,3059,orials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:323,deployability,build,build,323,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:857,deployability,build,build,857,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:876,deployability,build,build,876,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:917,deployability,build,build,917,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1375,deployability,build,build,1375, Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resoluti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1401,deployability,build,build,1401,hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1434,deployability,build,build,1434,*) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1970,deployability,build,build,1970,t [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_reso,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1989,deployability,build,build,1989,le tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2030,deployability,build,build,2030,File *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2577,deployability,build,build,2577,no::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2603,deployability,build,build,2603,::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> st,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2636,deployability,build,build,2636,std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3684,deployability,fail,failed,3684,[0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3797,deployability,build,build,3797,::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4331,deployability,build,build,4331,= std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4350,deployability,build,build,4350,_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4391,deployability,build,build,4391,] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4938,deployability,build,build,4938,rono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4964,deployability,build,build,4964,no::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4997,deployability,build,build,4997,= std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5531,deployability,build,build,5531, std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resoluti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5550,deployability,build,build,5550,point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = st,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5591,deployability,build,build,5591, start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6140,deployability,build,build,6140,no::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6166,deployability,build,build,6166,::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6199,deployability,build,build,6199,std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6733,deployability,build,build,6733,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6752,deployability,build,build,6752,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6793,deployability,build,build,6793,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3059,performance,error,error,3059,orials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:275,reliability,sli,slightly,275,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3684,reliability,fail,failed,3684,[0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3059,safety,error,error,3059,orials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:128,testability,simpl,simple,128,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:14,usability,efficien,efficiency,14,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:128,usability,simpl,simple,128,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:668,usability,stop,stop,668,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:771,usability,stop,stop,771,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1289,usability,stop,stop,1289, ```. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x372cc00. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1779,usability,stop,stop,1779,rt).count(). (double) 0.00026606600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:1884,usability,stop,stop,1884,xc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x3c458b0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024825600. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2388,usability,stop,stop,2388,cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2491,usability,stop,stop,2491,aching file tutorials/hsimple.root as _file0... (TFile *) 0x2b9a7d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re. solution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027867100. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:2987,usability,stop,stop,2987,build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_cl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3059,usability,error,error,3059,orials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1f2eaf0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3329,usability,stop,stop,3329,::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024412700. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:3604,usability,stop,stop,3604,ld. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x23be190. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ROOT_prompt_1:1:132: error: no member named 'GetCumulativeIncExc' in 'TH1F'. std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4142,usability,stop,stop,4142,chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chron,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4245,usability,stop,stop,4245,etCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. ~~~ ^. root [2] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_ZN21__ROOT_SpecialObjects3hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4749,usability,stop,stop,4749,hpxE'. root [3] .q. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::tim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:4852,usability,stop,stop,4852,ttaching file tutorials/hsimple.root as _file0... (TFile *) 0x1d86820. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00027366700. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5342,usability,stop,stop,5342,/root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5445,usability,stop,stop,5445,t [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x25389f0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00022777000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:5949,usability,stop,stop,5949,$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6054,usability,stop,stop,6054,aching file tutorials/hsimple.root as _file0... (TFile *) 0x2283130. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6544,usability,stop,stop,6544,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:6647,usability,stop,stop,6647,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:7151,usability,stop,stop,7151,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:7254,usability,stop,stop,7254,ono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00030141800. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x29b7b20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::h. igh_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00026997000. root [3] .q. [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build. [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x2bec4d0. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00024567600. root [3] .q. [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/. [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root. root [0]. Attaching file tutorials/hsimple.root as _file0... (TFile *) 0x36d9a20. root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();. root [2] static_cast<std::chrono::duration<double>>(stop - start).count(). (double) 0.00023166700. root [3]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:85,usability,document,document,85,@lmoneta I just replaced `TH1::GetCumulative` with this new implementation. Should I document the potentially-breaking change somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:67,interoperability,conflict,conflict,67,Just rebased this PR onto the master branch and resolved the merge conflict.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:37,security,auth,author,37,Just did `git commit --amend --reset-author` name from my cybername (Shamrock Lee) to my legal name (Yueh-Shun Li).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:17,availability,avail,available,17,@lmoneta Are you available to take a look at this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:17,reliability,availab,available,17,@lmoneta Are you available to take a look at this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:17,safety,avail,available,17,@lmoneta Are you available to take a look at this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:17,security,availab,available,17,@lmoneta Are you available to take a look at this one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11949:32,usability,help,help,32,"@lmoneta @guitargeek, Could you help take another look at this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11949
https://github.com/root-project/root/pull/11950:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11950
https://github.com/root-project/root/issues/11951:239,performance,overhead,overhead,239,"Removed from the 6.28 milestone because in ROOT 6.28, one can already achieve this by using the `RooBinIntegrator`. This is still a bit complicated, so the issue is left open to remind that we should implement an easier solution with less overhead in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11951
https://github.com/root-project/root/issues/11951:136,safety,compl,complicated,136,"Removed from the 6.28 milestone because in ROOT 6.28, one can already achieve this by using the `RooBinIntegrator`. This is still a bit complicated, so the issue is left open to remind that we should implement an easier solution with less overhead in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11951
https://github.com/root-project/root/issues/11951:136,security,compl,complicated,136,"Removed from the 6.28 milestone because in ROOT 6.28, one can already achieve this by using the `RooBinIntegrator`. This is still a bit complicated, so the issue is left open to remind that we should implement an easier solution with less overhead in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11951
https://github.com/root-project/root/pull/11953:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11953
https://github.com/root-project/root/issues/11954:143,availability,reliab,reliably,143,"Thinking about it some more, surely this was some number crunching from the 32-bit days when we could only store a max of seven decimal digits reliably? I'm not sure what a good resolution would be, considering that taking it out is not backward compatible at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11954
https://github.com/root-project/root/issues/11954:246,interoperability,compatib,compatible,246,"Thinking about it some more, surely this was some number crunching from the 32-bit days when we could only store a max of seven decimal digits reliably? I'm not sure what a good resolution would be, considering that taking it out is not backward compatible at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11954
https://github.com/root-project/root/issues/11954:143,reliability,reliab,reliably,143,"Thinking about it some more, surely this was some number crunching from the 32-bit days when we could only store a max of seven decimal digits reliably? I'm not sure what a good resolution would be, considering that taking it out is not backward compatible at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11954
https://github.com/root-project/root/issues/11954:207,deployability,releas,released,207,"Hi @denehoffman! Thanks for using RooFit and opening this issue. I agree with all you say, and think it's better to get rid of these surprising epsilons in all `inRange` overload for ROOT 6.28 which will be released in January. There is only one thing you said that I can't follow:. > ...as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`)... I don't see where the overloads are inconsistent with the `<` vs `<=`. As far as I can tell, it checks `xmin <= x <= xmax` in all overloads, if we were just to remove the epsilons. Or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11954
https://github.com/root-project/root/issues/11954:177,interoperability,compatib,compatibility,177,"Okay I have met with the other RooFit developers, and there is no strong reason to have this epsilon margin. We can remove it, but keep a way on enabling it again for backwards compatibility if one really wants to. The PR that implements this is here:. https://github.com/root-project/root/pull/11999. Would merging these changes be enough for you to consider this issue resolved?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11954
https://github.com/root-project/root/pull/11956:11,deployability,build,build,11,@phsft-bot build ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:22,performance,perform,performance-,22,@phsft-bot build ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:22,usability,perform,performance-,22,@phsft-bot build ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:13,deployability,build,build,13,. @phsft-bot build just on ROOT-performance-centos8-multicore/cxx17.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:32,performance,perform,performance-,32,. @phsft-bot build just on ROOT-performance-centos8-multicore/cxx17.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:32,usability,perform,performance-,32,. @phsft-bot build just on ROOT-performance-centos8-multicore/cxx17.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/pull/11956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11956
https://github.com/root-project/root/issues/11957:145,performance,perform,performance,145,Note: this is related to https://github.com/root-project/root/issues/11955 which is one example where changing the default would not only affect performance but also have a functional effect (`gDirectory` having different values before and after).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11957
https://github.com/root-project/root/issues/11957:145,usability,perform,performance,145,Note: this is related to https://github.com/root-project/root/issues/11955 which is one example where changing the default would not only affect performance but also have a functional effect (`gDirectory` having different values before and after).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11957
https://github.com/root-project/root/issues/11957:47,security,team,team,47,"This is a matter to be discussed widely in the team. However, I am also of the opinion that the option should be enabled by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11957
https://github.com/root-project/root/pull/11958:4,availability,failur,failure,4,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:4,deployability,fail,failure,4,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:93,deployability,patch,patch,93,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:4,performance,failur,failure,4,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:4,reliability,fail,failure,4,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:93,safety,patch,patch,93,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/pull/11958:93,security,patch,patch,93,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11958
https://github.com/root-project/root/issues/11964:49,usability,effectiv,effectively,49,"I think already the switch to C++14 made GCC 4.8 effectively unsupported, so you may already be able to do this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11964
https://github.com/root-project/root/issues/11964:26,safety,reme,remember,26,"Okay that may be, I don't remember this very well. I have opened a PR to remove it and I'll just ask in the daily or group meeting if anyone has objections. Thanks for pointing this out!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11964
https://github.com/root-project/root/issues/11965:365,availability,avail,available,365,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:103,deployability,build,builder,103,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:80,interoperability,xml,xml,80,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:66,modifiability,maintain,maintainer,66,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:365,reliability,availab,available,365,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:66,safety,maintain,maintainer,66,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:365,safety,avail,available,365,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:438,safety,test,test,438,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:365,security,availab,available,365,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:438,testability,test,test,438,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:56,availability,avail,available,56,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:56,reliability,availab,available,56,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:56,safety,avail,available,56,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:56,security,availab,available,56,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:33,usability,support,support,33,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11965:99,usability,support,supported,99,"Thanks @guitargeek for the great addition of the `Offset(""bin"")` option. Very interested to see it supported for RooDataSet as well to use it in quickFit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11965
https://github.com/root-project/root/issues/11967:407,deployability,instal,installed,407,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:465,deployability,api,api,465,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1411,deployability,depend,depending,1411,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:465,integrability,api,api,465,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1163,integrability,translat,translations,1163,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1411,integrability,depend,depending,1411,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:255,interoperability,format,format,255,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:465,interoperability,api,api,465,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:680,interoperability,standard,standard,680,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1163,interoperability,translat,translations,1163,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1654,interoperability,format,format,1654,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1411,modifiability,depend,depending,1411,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:848,reliability,doe,does,848,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:985,safety,compl,complete,985,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1272,safety,compl,complicated,1272,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1411,safety,depend,depending,1411,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:26,security,team,team,26,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:985,security,compl,complete,985,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1272,security,compl,complicated,1272,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1411,testability,depend,depending,1411,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:139,usability,help,helpful,139,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:620,usability,Document,DocumentRoot,620,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:1033,usability,document,documented,1033,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:86,usability,help,help,86,https://root.cern/manual/. https://root.cern/primer/. @bobOnGitHub : do these manuals help ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:154,performance,content,content,154,"@HenryDayHall, @couet . I _was_ working through the online materials when I became frustrated and posted the issue. Eg. the ""magic"" code issue relates to content in the primer. Not sure if/when I'll get a chance/excuse to look at ROOT again. Nice ideas though - particularly Cling and the interactive ui functionality. . On the other hand a quick search on how to do bubble charts in ROOT led to some depressing results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:289,usability,interact,interactive,289,"@HenryDayHall, @couet . I _was_ working through the online materials when I became frustrated and posted the issue. Eg. the ""magic"" code issue relates to content in the primer. Not sure if/when I'll get a chance/excuse to look at ROOT again. Nice ideas though - particularly Cling and the interactive ui functionality. . On the other hand a quick search on how to do bubble charts in ROOT led to some depressing results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:301,usability,ui,ui,301,"@HenryDayHall, @couet . I _was_ working through the online materials when I became frustrated and posted the issue. Eg. the ""magic"" code issue relates to content in the primer. Not sure if/when I'll get a chance/excuse to look at ROOT again. Nice ideas though - particularly Cling and the interactive ui functionality. . On the other hand a quick search on how to do bubble charts in ROOT led to some depressing results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/issues/11967:23,usability,close,close,23,@bobOnGitHub Ok can we close this issue thought? if not can you tell us what should be improved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11967
https://github.com/root-project/root/pull/11968:36,availability,avail,available,36,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:100,availability,avail,available,100,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:74,deployability,version,version,74,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:74,integrability,version,version,74,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:74,modifiability,version,version,74,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:36,reliability,availab,available,36,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:100,reliability,availab,available,100,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:36,safety,avail,available,36,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:100,safety,avail,available,100,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:295,safety,compl,complaints,295,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:36,security,availab,available,36,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:100,security,availab,available,100,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:295,security,compl,complaints,295,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/pull/11968:356,usability,support,support,356,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11968
https://github.com/root-project/root/issues/11971:183,safety,compl,complex,183,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11971
https://github.com/root-project/root/issues/11971:183,security,compl,complex,183,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11971
https://github.com/root-project/root/issues/11971:167,testability,simpl,simpler,167,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11971
https://github.com/root-project/root/issues/11971:167,usability,simpl,simpler,167,"Hi @HenryDayHall ,. yes that line is a leftover and #11972 will remove it (thanks to @ferdymercury ). I suggest looking at RCsvDS, RNTupleDS or RArrowDS (ordered from simpler to more complex) for existing implementations of data sources. RRootDS is unused and we might remove it in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11971
https://github.com/root-project/root/pull/11972:34,energy efficiency,green,green,34,Will merge when the CI is back to green (unrelated to this PR),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11972
https://github.com/root-project/root/pull/11972:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11972
https://github.com/root-project/root/pull/11973:136,deployability,stack,stackoverflow,136,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:197,deployability,fail,fails-with-variable-declared-from-structured-binding,197,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:105,interoperability,bind,binding,105,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:242,interoperability,bind,binding,242,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:105,modifiability,bind,binding,105,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:208,modifiability,variab,variable-declared-from-structured-binding,208,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11973:197,reliability,fail,fails-with-variable-declared-from-structured-binding,197,I'm facing compilation issues with clang + C++17 on C8S because apparently lambda-capturing a structured binding is ill-formed: https://stackoverflow.com/questions/46114214/lambda-implicit-capture-fails-with-variable-declared-from-structured-binding :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11973
https://github.com/root-project/root/pull/11975:111,reliability,doe,doesn,111,@Moelf could you please squash the commits and force-push the branch? (for some reason the `clang-tools` check doesn't pass due to ` fatal: bad object c58cdcce5b6f82aeae7a22d90ee60727688504f7` and that blocks the merge),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11975
https://github.com/root-project/root/pull/11975:98,usability,tool,tools,98,@Moelf could you please squash the commits and force-push the branch? (for some reason the `clang-tools` check doesn't pass due to ` fatal: bad object c58cdcce5b6f82aeae7a22d90ee60727688504f7` and that blocks the merge),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11975
https://github.com/root-project/root/pull/11978:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11978
https://github.com/root-project/root/pull/11979:100,deployability,releas,release,100,"I'll better merge it now and don't accumulate more PRs, otherwise other people might touch also the release notes and I'll have conflicts here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11979
https://github.com/root-project/root/pull/11979:128,interoperability,conflict,conflicts,128,"I'll better merge it now and don't accumulate more PRs, otherwise other people might touch also the release notes and I'll have conflicts here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11979
https://github.com/root-project/root/pull/11980:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11980
https://github.com/root-project/root/pull/11983:79,interoperability,bind,bindPdf,79,I will come back to this at some point. This forum post reminded be about the `bindPdf()` and how it's not a good solution:. https://root-forum.cern.ch/t/import-binded-rooabspdf-into-a-rooworkspace/58522/2. Jitting with RooGenericPdf and RooFormulaVar is better.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11983
https://github.com/root-project/root/pull/11983:161,interoperability,bind,binded-rooabspdf-into-a-rooworkspace,161,I will come back to this at some point. This forum post reminded be about the `bindPdf()` and how it's not a good solution:. https://root-forum.cern.ch/t/import-binded-rooabspdf-into-a-rooworkspace/58522/2. Jitting with RooGenericPdf and RooFormulaVar is better.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11983
https://github.com/root-project/root/pull/11983:79,modifiability,bind,bindPdf,79,I will come back to this at some point. This forum post reminded be about the `bindPdf()` and how it's not a good solution:. https://root-forum.cern.ch/t/import-binded-rooabspdf-into-a-rooworkspace/58522/2. Jitting with RooGenericPdf and RooFormulaVar is better.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11983
https://github.com/root-project/root/pull/11983:161,modifiability,bind,binded-rooabspdf-into-a-rooworkspace,161,I will come back to this at some point. This forum post reminded be about the `bindPdf()` and how it's not a good solution:. https://root-forum.cern.ch/t/import-binded-rooabspdf-into-a-rooworkspace/58522/2. Jitting with RooGenericPdf and RooFormulaVar is better.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11983
https://github.com/root-project/root/pull/11984:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11984
https://github.com/root-project/root/pull/11986:76,testability,verif,verify,76,"Yes you're right. It's probably alright because the CI is passing, but I'll verify that later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11986
https://github.com/root-project/root/pull/11990:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11990
https://github.com/root-project/root/pull/11991:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11991
https://github.com/root-project/root/pull/11991:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11991
https://github.com/root-project/root/issues/11992:227,integrability,sub,substituting,227,"> Possibly `RooConst`s should be matched only by index? Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11992
https://github.com/root-project/root/issues/11992:104,modifiability,variab,variables,104,"> Possibly `RooConst`s should be matched only by index? Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11992
https://github.com/root-project/root/issues/11992:267,modifiability,variab,variable,267,"> Possibly `RooConst`s should be matched only by index? Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11992
https://github.com/root-project/root/issues/11992:561,modifiability,paramet,parameters,561,"> Possibly `RooConst`s should be matched only by index? Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11992
https://github.com/root-project/root/issues/11992:374,safety,except,exception,374,"> Possibly `RooConst`s should be matched only by index? Yes, I think this makes sense. Or maybe better: variables where the name is a number should only be matched by index. Because if the value is the name there is no need in substituting them anyway. If there is a variable with a name that is a number that is not a `RooConstVar` where the value is equal to the name, an exception will be thrown. Because at that point you're basically asking for trouble. Would this fix your usecas? I'm curious, what is your usecase for this anyway :)? Having constants as parameters of a RooFormulaVar sounds quite useless. Probably it happens in some bigger framework?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11992
https://github.com/root-project/root/pull/11996:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11996
https://github.com/root-project/root/pull/11997:11,deployability,build,build,11,"@phsft-bot build just on mac11arm/cxx17, mac12arm/cxx17, mac13arm/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:11,deployability,build,build,11,"@phsft-bot build just on mac11/cxx17, mac11arm/default, mac12arm/default, mac13arm/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:197,deployability,fail,fails,197,"The problems with C++17 on macOS are pre-existing (see https://github.com/root-project/root/issues/12003) and `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec` also fails in the nightlies on macOS 12. @Axel-Naumann @vgvassilev how much do we care about `CLING_DEBUG` on macOS? If it's ok to lose this ability, I think this could be merged as-is, otherwise I have to look into it some more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:197,reliability,fail,fails,197,"The problems with C++17 on macOS are pre-existing (see https://github.com/root-project/root/issues/12003) and `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec` also fails in the nightlies on macOS 12. @Axel-Naumann @vgvassilev how much do we care about `CLING_DEBUG` on macOS? If it's ok to lose this ability, I think this could be merged as-is, otherwise I have to look into it some more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:138,safety,test,test,138,"The problems with C++17 on macOS are pre-existing (see https://github.com/root-project/root/issues/12003) and `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec` also fails in the nightlies on macOS 12. @Axel-Naumann @vgvassilev how much do we care about `CLING_DEBUG` on macOS? If it's ok to lose this ability, I think this could be merged as-is, otherwise I have to look into it some more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:138,testability,test,test,138,"The problems with C++17 on macOS are pre-existing (see https://github.com/root-project/root/issues/12003) and `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec` also fails in the nightlies on macOS 12. @Axel-Naumann @vgvassilev how much do we care about `CLING_DEBUG` on macOS? If it's ok to lose this ability, I think this could be merged as-is, otherwise I have to look into it some more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:278,performance,time,time,278,"> Can we not merge this, and then leave macOS `CLING_DEBUG` (or really, JITLink `CLING_DEBUG`) as an open ""challenge"" for a future PR? Yes, this was also my thinking. However, this means `CLING_DEBUG` won't work on macOS in the meantime, or we cannot default to JITLink for the time being. I'm fine either way, I think it's a step forward to support JITLink (again) and have all tests passing on macOS with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:379,safety,test,tests,379,"> Can we not merge this, and then leave macOS `CLING_DEBUG` (or really, JITLink `CLING_DEBUG`) as an open ""challenge"" for a future PR? Yes, this was also my thinking. However, this means `CLING_DEBUG` won't work on macOS in the meantime, or we cannot default to JITLink for the time being. I'm fine either way, I think it's a step forward to support JITLink (again) and have all tests passing on macOS with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:379,testability,test,tests,379,"> Can we not merge this, and then leave macOS `CLING_DEBUG` (or really, JITLink `CLING_DEBUG`) as an open ""challenge"" for a future PR? Yes, this was also my thinking. However, this means `CLING_DEBUG` won't work on macOS in the meantime, or we cannot default to JITLink for the time being. I'm fine either way, I think it's a step forward to support JITLink (again) and have all tests passing on macOS with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:342,usability,support,support,342,"> Can we not merge this, and then leave macOS `CLING_DEBUG` (or really, JITLink `CLING_DEBUG`) as an open ""challenge"" for a future PR? Yes, this was also my thinking. However, this means `CLING_DEBUG` won't work on macOS in the meantime, or we cannot default to JITLink for the time being. I'm fine either way, I think it's a step forward to support JITLink (again) and have all tests passing on macOS with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:41,reliability,doe,doesn,41,"I checked today and AFAICT `CLING_DEBUG` doesn't work with `lldb` at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:0,availability,ping,ping,0,ping @Axel-Naumann @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:289,deployability,version,version,289,"> I checked today and AFAICT CLING_DEBUG doesn't work with lldb at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged. On Linux I tried and `CLING_DEBUG` did work with lldb as far as I could tell (I could break on interpreted version of `hsimple` and step through the macro). What doesn't quite work is embedded DWARF debugging information, with either gdb or lldb. What did you try that didn't work with lldb?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:289,integrability,version,version,289,"> I checked today and AFAICT CLING_DEBUG doesn't work with lldb at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged. On Linux I tried and `CLING_DEBUG` did work with lldb as far as I could tell (I could break on interpreted version of `hsimple` and step through the macro). What doesn't quite work is embedded DWARF debugging information, with either gdb or lldb. What did you try that didn't work with lldb?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:289,modifiability,version,version,289,"> I checked today and AFAICT CLING_DEBUG doesn't work with lldb at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged. On Linux I tried and `CLING_DEBUG` did work with lldb as far as I could tell (I could break on interpreted version of `hsimple` and step through the macro). What doesn't quite work is embedded DWARF debugging information, with either gdb or lldb. What did you try that didn't work with lldb?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:41,reliability,doe,doesn,41,"> I checked today and AFAICT CLING_DEBUG doesn't work with lldb at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged. On Linux I tried and `CLING_DEBUG` did work with lldb as far as I could tell (I could break on interpreted version of `hsimple` and step through the macro). What doesn't quite work is embedded DWARF debugging information, with either gdb or lldb. What did you try that didn't work with lldb?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/11997:344,reliability,doe,doesn,344,"> I checked today and AFAICT CLING_DEBUG doesn't work with lldb at the moment anyway, so I'm not ""breaking"" that functionality. I think this means the PR is ready and can be merged. On Linux I tried and `CLING_DEBUG` did work with lldb as far as I could tell (I could break on interpreted version of `hsimple` and step through the macro). What doesn't quite work is embedded DWARF debugging information, with either gdb or lldb. What did you try that didn't work with lldb?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11997
https://github.com/root-project/root/pull/12000:225,availability,consist,consistent,225,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:25,deployability,observ,observation,25,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:552,energy efficiency,adapt,adapter,552,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:552,integrability,adapt,adapter,552,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:340,interoperability,compatib,compatibility,340,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:552,interoperability,adapt,adapter,552,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:552,modifiability,adapt,adapter,552,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:25,testability,observ,observation,25,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:123,usability,user,users,123,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:225,usability,consist,consistent,225,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12000:491,usability,user,users,491,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12000
https://github.com/root-project/root/pull/12001:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:93,reliability,doe,does,93,"Hi @guitargeek, my most recent commit should fix the issue that you encountered, at least it does for me locally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:0,energy efficiency,Cool,Cool,0,"Cool, thanks! Okay I'll try it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:34,deployability,fail,failing,34,Hi @Zeff020! There are some tests failing now. Can you check what's going on there? Let me know on Mattermost if you need help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:34,reliability,fail,failing,34,Hi @Zeff020! There are some tests failing now. Can you check what's going on there? Let me know on Mattermost if you need help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:28,safety,test,tests,28,Hi @Zeff020! There are some tests failing now. Can you check what's going on there? Let me know on Mattermost if you need help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:28,testability,test,tests,28,Hi @Zeff020! There are some tests failing now. Can you check what's going on there? Let me know on Mattermost if you need help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:122,usability,help,help,122,Hi @Zeff020! There are some tests failing now. Can you check what's going on there? Let me know on Mattermost if you need help,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:70,deployability,build,build,70,"Hi @guitargeek, I've amended my most recent commit, could you try the build and tests again? All problems should be resolved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:80,safety,test,tests,80,"Hi @guitargeek, I've amended my most recent commit, could you try the build and tests again? All problems should be resolved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:80,testability,test,tests,80,"Hi @guitargeek, I've amended my most recent commit, could you try the build and tests again? All problems should be resolved now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12001:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12001
https://github.com/root-project/root/pull/12002:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12002
https://github.com/root-project/root/issues/12006:148,deployability,build,building,148,"Hi @cburgard! Sometimes the changes in root master also require changes in [roottest](https://github.com/root-project/roottest). Probably, you were building ROOT with `-Dtest=ON`, which implicitly clones the `roottest` repo as a subdirectory of the ROOT source directory, as you can see in the path. Probably you just need to go to `/home/cburgard/Physics/root/src/roottest` and do `git pull`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12006:229,integrability,sub,subdirectory,229,"Hi @cburgard! Sometimes the changes in root master also require changes in [roottest](https://github.com/root-project/roottest). Probably, you were building ROOT with `-Dtest=ON`, which implicitly clones the `roottest` repo as a subdirectory of the ROOT source directory, as you can see in the path. Probably you just need to go to `/home/cburgard/Physics/root/src/roottest` and do `git pull`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12006:56,modifiability,require chang,require changes,56,"Hi @cburgard! Sometimes the changes in root master also require changes in [roottest](https://github.com/root-project/roottest). Probably, you were building ROOT with `-Dtest=ON`, which implicitly clones the `roottest` repo as a subdirectory of the ROOT source directory, as you can see in the path. Probably you just need to go to `/home/cburgard/Physics/root/src/roottest` and do `git pull`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12006:8,deployability,updat,updating,8,"Indeed, updating roottest fixes it. thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12006:8,safety,updat,updating,8,"Indeed, updating roottest fixes it. thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12006:8,security,updat,updating,8,"Indeed, updating roottest fixes it. thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12006
https://github.com/root-project/root/issues/12007:61,integrability,wrap,wrap,61,"Hi Attila,. This is a know limitation. The work-around is to wrap the `std::array` by another class (for which you need to declare a dictionary). How urgently would you need the proper implementation? Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:51,performance,time,timeline,51,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:250,performance,memor,memory,250,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:78,usability,prefer,prefer,78,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:175,usability,prefer,preferred,175,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:250,usability,memor,memory,250,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/issues/12007:316,usability,efficien,efficiently,316,"Hi Philippe,. I don't think we have a super strict timeline on this. We would prefer to use STL types in such branches as much as possible. In this case `std::array` would be preferred because `std::vector<std::array<T, N> >` is nicely contiguous in memory. Which we would really like to have for using accelerators efficiently with these new data types. (Since such an object would map super easily into an `std::mdspan`.). We'll think internally a bit whether we'd go for `std::vector<std::vector<T> >` or `std::vector<ATLASType>` for now... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12007
https://github.com/root-project/root/pull/12008:25,interoperability,conflict,conflict,25,(force-pushed to resolve conflict with master),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12008
https://github.com/root-project/root/pull/12009:108,deployability,configurat,configurations,108,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:157,deployability,configurat,configuration,157,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:108,integrability,configur,configurations,108,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:157,integrability,configur,configuration,157,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:108,modifiability,configur,configurations,108,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:157,modifiability,configur,configuration,157,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:108,security,configur,configurations,108,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:157,security,configur,configuration,157,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12009:208,usability,prefer,prefer,208,"> LGTM! It can be merged, if urgent. I think this would also come up on macOS with C++17, where we have two configurations in the nightlies, and I need this configuration to work to debug another issue, so I prefer to merge this now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12009
https://github.com/root-project/root/pull/12010:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12010
https://github.com/root-project/root/issues/12012:273,availability,state,stated,273,"We should not use the internal names here, but dedicated ROOT I/O attribute names. If that's not possible then we should at least allow for future cling attributes that are not I/O comments, i.e. some form of scoping of attribute names. (And yes I now see that you already stated that, sorry!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:273,integrability,state,stated,273,"We should not use the internal names here, but dedicated ROOT I/O attribute names. If that's not possible then we should at least allow for future cling attributes that are not I/O comments, i.e. some form of scoping of attribute names. (And yes I now see that you already stated that, sorry!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:62,performance,I/O,I/O,62,"We should not use the internal names here, but dedicated ROOT I/O attribute names. If that's not possible then we should at least allow for future cling attributes that are not I/O comments, i.e. some form of scoping of attribute names. (And yes I now see that you already stated that, sorry!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:177,performance,I/O,I/O,177,"We should not use the internal names here, but dedicated ROOT I/O attribute names. If that's not possible then we should at least allow for future cling attributes that are not I/O comments, i.e. some form of scoping of attribute names. (And yes I now see that you already stated that, sorry!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:107,interoperability,conflict,conflict,107,"If/when we officially support the annotation as input we need to resolve/decide/do-something the potential conflict between the input from comments, selection xml and the annotation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:159,interoperability,xml,xml,159,"If/when we officially support the annotation as input we need to resolve/decide/do-something the potential conflict between the input from comments, selection xml and the annotation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:48,safety,input,input,48,"If/when we officially support the annotation as input we need to resolve/decide/do-something the potential conflict between the input from comments, selection xml and the annotation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
https://github.com/root-project/root/issues/12012:128,safety,input,input,128,"If/when we officially support the annotation as input we need to resolve/decide/do-something the potential conflict between the input from comments, selection xml and the annotation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12012
