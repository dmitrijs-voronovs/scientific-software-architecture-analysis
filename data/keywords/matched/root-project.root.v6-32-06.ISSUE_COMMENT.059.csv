id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10092:252443,energy efficiency,alloc,allocator,252443,":RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:252525,energy efficiency,alloc,allocator,252525,"ar_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:252706,energy efficiency,alloc,allocator,252706,"ar_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:252799,energy efficiency,alloc,allocator,252799,"ar_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253051,energy efficiency,alloc,allocator,253051,"ic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253216,energy efficiency,alloc,allocator,253216,"::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253307,energy efficiency,alloc,allocator,253307,"::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253388,energy efficiency,alloc,allocator,253388,"hared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253470,energy efficiency,alloc,allocator,253470,"::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253651,energy efficiency,alloc,allocator,253651,"::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253744,energy efficiency,alloc,allocator,253744,"::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253999,energy efficiency,alloc,allocator,253999,"asic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254164,energy efficiency,alloc,allocator,254164,"asic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E3927",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254304,energy efficiency,alloc,allocator,254304,"locator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254401,energy efficiency,alloc,allocator,254401,"r<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254427,energy efficiency,alloc,allocator,254427,"ng<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254509,energy efficiency,alloc,allocator,254509,"T::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254654,energy efficiency,alloc,allocator,254654,"r<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:255448,energy efficiency,alloc,allocs,255448,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:255493,energy efficiency,alloc,allocated,255493,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:2517,integrability,depend,depends,2517,"ontext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101). ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607). ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:3871,integrability,depend,depends,3871,":CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330). ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==27070",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:5494,integrability,depend,depends,5494,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93DC: capacity (basic_string.h:977). ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:7110,integrability,depend,depends,7110,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplatePro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:8670,integrability,depend,depends,8670,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C8367: capacity (basic_string.h:977). ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:10407,integrability,depend,depends,10407,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:12194,integrability,depend,depends,12194,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:13981,integrability,depend,depends,13981,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:15768,integrability,depend,depends,15768,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:17495,integrability,depend,depends,17495,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:19176,integrability,depend,depends,19176,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239). ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:20915,integrability,depend,depends,20915,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_obje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:28560,integrability,depend,depends,28560,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:32731,integrability,depend,depends,32731,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:41281,integrability,depend,depends,41281,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:47706,integrability,depend,depends,47706,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:60764,integrability,depend,depends,60764,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C31A: _M_construct<char const*> (basic_string.tcc:217). ==270704== by 0x671C31A: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C31A: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C31A: basic_string (basic_string.h:521). ==270704== by 0x671C31A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704== by 0x271E7C48: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:63166,integrability,depend,depends,63166,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C320: _S_copy (basic_string.h:356). ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225). ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C320: basic_string (basic_string.h:521). ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:68178,integrability,depend,depends,68178,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271E7C65: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:137). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70022,integrability,depend,depends,70022,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:73926,integrability,depend,depends,73926,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:81768,integrability,depend,depends,81768,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:90809,integrability,depend,depends,90809,"nager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:738). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:92696,integrability,depend,depends,92696,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86E2: _S_copy (basic_string.h:356). ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:96617,integrability,depend,depends,96617,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:103899,integrability,depend,depends,103899,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:111181,integrability,depend,depends,111181,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:118463,integrability,depend,depends,118463,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:125745,integrability,depend,depends,125745,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:133027,integrability,depend,depends,133027,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3DBB3: unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (stl_algobase.h:235). ==270704== by 0x6B3E09E: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:313). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:140365,integrability,depend,depends,140365,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E442: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:503). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:147707,integrability,depend,depends,147707,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E459: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:505). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:155049,integrability,depend,depends,155049,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162331,integrability,depend,depends,162331,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167472,integrability,depend,depends,167472,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:177788,integrability,depend,depends,177788,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189237,integrability,depend,depends,189237,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193430,integrability,depend,depends,193430,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:201850,integrability,depend,depends,201850,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:211374,integrability,depend,depends,211374," > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:217520,integrability,depend,depends,217520," std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:224060,integrability,depend,depends,224060,"T::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E02D73: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:346). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:230613,integrability,depend,depends,230613,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F02A: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:237142,integrability,depend,depends,237142,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F033: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:243671,integrability,depend,depends,243671,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F047: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:48,interoperability,mismatch,mismatched,48,"Valgrind sees a bunch of issues, the ones about mismatched free/delete and similar might be relevant:. <details>. ```. ==270704== Mismatched free() / delete / delete []. ==270704== at 0x484827F: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5EF3FEB: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:694). ==270704== by 0x5E14CB3: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:215). ==270704== by 0x5E14FB0: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:331). ==270704== by 0x49EF895: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9596: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4921FC9: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4921C49: _PyRun_SimpleFileObject (in /usr/lib/libpython3.10.so.1.0). ==270704== Address 0xf90c440 is 0 bytes inside a block of size 1 alloc'd. ==270704== at 0x4846013: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x196AB019: ??? ==270704== by 0x5EF4B4C: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:871). ==270704== by 0x5E37E9D: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:130,interoperability,Mismatch,Mismatched,130,"Valgrind sees a bunch of issues, the ones about mismatched free/delete and similar might be relevant:. <details>. ```. ==270704== Mismatched free() / delete / delete []. ==270704== at 0x484827F: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5EF3FEB: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:694). ==270704== by 0x5E14CB3: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:215). ==270704== by 0x5E14FB0: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:331). ==270704== by 0x49EF895: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9596: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4921FC9: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4921C49: _PyRun_SimpleFileObject (in /usr/lib/libpython3.10.so.1.0). ==270704== Address 0xf90c440 is 0 bytes inside a block of size 1 alloc'd. ==270704== at 0x4846013: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x196AB019: ??? ==270704== by 0x5EF4B4C: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:871). ==270704== by 0x5E37E9D: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:2517,modifiability,depend,depends,2517,"ontext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101). ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607). ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:2663,modifiability,Paramet,Parameter,2663,"ext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101). ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607). ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:3871,modifiability,depend,depends,3871,":CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330). ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==27070",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:4416,modifiability,Paramet,Parameter,4416,"TpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330). ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:5494,modifiability,depend,depends,5494,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93DC: capacity (basic_string.h:977). ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:6032,modifiability,Paramet,Parameter,6032,"E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93DC: capacity (basic_string.h:977). ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:7110,modifiability,depend,depends,7110,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplatePro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:7592,modifiability,Paramet,Parameter,7592,"nsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:8670,modifiability,depend,depends,8670,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C8367: capacity (basic_string.h:977). ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:9406,modifiability,Paramet,Parameter,9406,"C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C8367: capacity (basic_string.h:977). ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:10407,modifiability,depend,depends,10407,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:11258,modifiability,Paramet,Parameter,11258,"sr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:12194,modifiability,depend,depends,12194,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:13045,modifiability,Paramet,Parameter,13045,"so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:13981,modifiability,depend,depends,13981,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:14832,modifiability,Paramet,Parameter,14832,"so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:15768,modifiability,depend,depends,15768,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:16559,modifiability,Paramet,Parameter,16559," 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:17495,modifiability,depend,depends,17495,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:18175,modifiability,Paramet,Parameter,18175,"E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:19176,modifiability,depend,depends,19176,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239). ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:19914,modifiability,Paramet,Parameter,19914,"_PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239). ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:20915,modifiability,depend,depends,20915,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_obje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:21934,modifiability,Paramet,Parameter,21934," value(s). ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Invalid free() / delete / delete[] / realloc(). ==270704== at 0x48488AF: operator delete(void*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:23877,modifiability,Paramet,Parameter,23877,"realloc(). ==270704== at 0x48488AF: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== Address 0x2ddb6db8 is 452,744 bytes inside a block of size 524,288 alloc'd. ==270704== at 0x4845899: malloc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:25984,modifiability,Modul,ModuleFile,25984,"mpl<llvm::MallocAllocator, 4096ul, 4096ul>::Allocate(unsigned long, unsigned long) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x816CC51: clang::Redeclarable<clang::FunctionDecl>::DeclLink::setLatest(clang::FunctionDecl*) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x815BC62: clang::ASTReader::finishPendingActions() [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x815D597: non-virtual thunk to clang::ASTReader::FinishedDeserializing() (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8141731: clang::ASTReader::readTypeRecord(unsigned int) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8149ACF: clang::ASTReader::GetType(unsigned int) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814E6CC: clang::ASTReader::GetTypeSourceInfo(clang::serialization::ModuleFile&, llvm::SmallVector<unsigned long, 64u> const&, unsigned int&) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814F9BA: clang::ASTReader::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x82592B4: clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1E74BC: clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1B107F: clang::CXXBasePaths::lookupInBases(clang::ASTContext&, clang::CXXRecordDecl const*, llvm::function_ref<bool (clang::CXXBaseSpecifier const*, clang::CXXBasePath&)>, bool) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x66C944E: assign (char_traits.h:329). ==270704== by 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:27482,modifiability,Paramet,Parameter,27482,"XXRecordDecl::DefinitionData::getBasesSlowCase() const (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1B107F: clang::CXXBasePaths::lookupInBases(clang::ASTContext&, clang::CXXRecordDecl const*, llvm::function_ref<bool (clang::CXXBaseSpecifier const*, clang::CXXBasePath&)>, bool) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x66C944E: assign (char_traits.h:329). ==270704== by 0x66C944E: _M_set_length (basic_string.h:225). ==270704== by 0x66C944E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:500). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:28560,modifiability,depend,depends,28560,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:32731,modifiability,depend,depends,32731,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:41281,modifiability,depend,depends,41281,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:47706,modifiability,depend,depends,47706,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:60764,modifiability,depend,depends,60764,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C31A: _M_construct<char const*> (basic_string.tcc:217). ==270704== by 0x671C31A: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C31A: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C31A: basic_string (basic_string.h:521). ==270704== by 0x671C31A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704== by 0x271E7C48: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:63166,modifiability,depend,depends,63166,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C320: _S_copy (basic_string.h:356). ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225). ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C320: basic_string (basic_string.h:521). ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:68178,modifiability,depend,depends,68178,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271E7C65: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:137). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70022,modifiability,depend,depends,70022,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:73926,modifiability,depend,depends,73926,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:81768,modifiability,depend,depends,81768,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:90809,modifiability,depend,depends,90809,"nager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:738). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:92696,modifiability,depend,depends,92696,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86E2: _S_copy (basic_string.h:356). ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:96617,modifiability,depend,depends,96617,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:103899,modifiability,depend,depends,103899,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:111181,modifiability,depend,depends,111181,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:118463,modifiability,depend,depends,118463,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:125745,modifiability,depend,depends,125745,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:133027,modifiability,depend,depends,133027,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3DBB3: unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (stl_algobase.h:235). ==270704== by 0x6B3E09E: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:313). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:140365,modifiability,depend,depends,140365,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E442: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:503). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:147707,modifiability,depend,depends,147707,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E459: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:505). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:155049,modifiability,depend,depends,155049,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162331,modifiability,depend,depends,162331,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167472,modifiability,depend,depends,167472,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:177788,modifiability,depend,depends,177788,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189237,modifiability,depend,depends,189237,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193430,modifiability,depend,depends,193430,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:201850,modifiability,depend,depends,201850,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:211374,modifiability,depend,depends,211374," > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:217520,modifiability,depend,depends,217520," std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:224060,modifiability,depend,depends,224060,"T::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E02D73: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:346). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:230613,modifiability,depend,depends,230613,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F02A: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:237142,modifiability,depend,depends,237142,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F033: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:243671,modifiability,depend,depends,243671,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F047: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:26320,performance,Multiplex,MultiplexExternalSemaSource,26320," by 0x815BC62: clang::ASTReader::finishPendingActions() [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x815D597: non-virtual thunk to clang::ASTReader::FinishedDeserializing() (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8141731: clang::ASTReader::readTypeRecord(unsigned int) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8149ACF: clang::ASTReader::GetType(unsigned int) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814E6CC: clang::ASTReader::GetTypeSourceInfo(clang::serialization::ModuleFile&, llvm::SmallVector<unsigned long, 64u> const&, unsigned int&) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814F9BA: clang::ASTReader::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x82592B4: clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1E74BC: clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1B107F: clang::CXXBasePaths::lookupInBases(clang::ASTContext&, clang::CXXRecordDecl const*, llvm::function_ref<bool (clang::CXXBaseSpecifier const*, clang::CXXBasePath&)>, bool) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x66C944E: assign (char_traits.h:329). ==270704== by 0x66C944E: _M_set_length (basic_string.h:225). ==270704== by 0x66C944E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:500). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256042,performance,memor,memory,256042,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256191,performance,error,errors,256191,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256226,performance,ERROR,ERROR,256226,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256246,performance,error,errors,256246,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:2517,safety,depend,depends,2517,"ontext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101). ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607). ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:3871,safety,depend,depends,3871,":CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330). ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==27070",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:5494,safety,depend,depends,5494,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93DC: capacity (basic_string.h:977). ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:7110,safety,depend,depends,7110,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplatePro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:8670,safety,depend,depends,8670,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C8367: capacity (basic_string.h:977). ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:10407,safety,depend,depends,10407,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:12194,safety,depend,depends,12194,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:13981,safety,depend,depends,13981,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:15768,safety,depend,depends,15768,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:17495,safety,depend,depends,17495,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:19176,safety,depend,depends,19176,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239). ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:20915,safety,depend,depends,20915,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_obje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:25984,safety,Modul,ModuleFile,25984,"mpl<llvm::MallocAllocator, 4096ul, 4096ul>::Allocate(unsigned long, unsigned long) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x816CC51: clang::Redeclarable<clang::FunctionDecl>::DeclLink::setLatest(clang::FunctionDecl*) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x815BC62: clang::ASTReader::finishPendingActions() [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x815D597: non-virtual thunk to clang::ASTReader::FinishedDeserializing() (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8141731: clang::ASTReader::readTypeRecord(unsigned int) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x8149ACF: clang::ASTReader::GetType(unsigned int) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814E6CC: clang::ASTReader::GetTypeSourceInfo(clang::serialization::ModuleFile&, llvm::SmallVector<unsigned long, 64u> const&, unsigned int&) [clone .constprop.0] (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x814F9BA: clang::ASTReader::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0x82592B4: clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers(unsigned long) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1E74BC: clang::CXXRecordDecl::DefinitionData::getBasesSlowCase() const (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== by 0xA1B107F: clang::CXXBasePaths::lookupInBases(clang::ASTContext&, clang::CXXRecordDecl const*, llvm::function_ref<bool (clang::CXXBaseSpecifier const*, clang::CXXBasePath&)>, bool) (in /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x66C944E: assign (char_traits.h:329). ==270704== by 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:28560,safety,depend,depends,28560,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:32731,safety,depend,depends,32731,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:41281,safety,depend,depends,41281,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:47706,safety,depend,depends,47706,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:60764,safety,depend,depends,60764,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C31A: _M_construct<char const*> (basic_string.tcc:217). ==270704== by 0x671C31A: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C31A: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C31A: basic_string (basic_string.h:521). ==270704== by 0x671C31A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704== by 0x271E7C48: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:63166,safety,depend,depends,63166,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C320: _S_copy (basic_string.h:356). ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225). ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C320: basic_string (basic_string.h:521). ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:68178,safety,depend,depends,68178,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271E7C65: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:137). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70022,safety,depend,depends,70022,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:73926,safety,depend,depends,73926,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:81768,safety,depend,depends,81768,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:90809,safety,depend,depends,90809,"nager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:738). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:92696,safety,depend,depends,92696,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86E2: _S_copy (basic_string.h:356). ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:96617,safety,depend,depends,96617,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:103899,safety,depend,depends,103899,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:111181,safety,depend,depends,111181,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:118463,safety,depend,depends,118463,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:125745,safety,depend,depends,125745,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:133027,safety,depend,depends,133027,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3DBB3: unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (stl_algobase.h:235). ==270704== by 0x6B3E09E: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:313). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:140365,safety,depend,depends,140365,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E442: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:503). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:147707,safety,depend,depends,147707,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E459: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:505). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:155049,safety,depend,depends,155049,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162331,safety,depend,depends,162331,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167472,safety,depend,depends,167472,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:177788,safety,depend,depends,177788,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189237,safety,depend,depends,189237,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193430,safety,depend,depends,193430,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:201850,safety,depend,depends,201850,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:211374,safety,depend,depends,211374," > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:217520,safety,depend,depends,217520," std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:224060,safety,depend,depends,224060,"T::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E02D73: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:346). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:230613,safety,depend,depends,230613,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F02A: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:237142,safety,depend,depends,237142,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F033: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:243671,safety,depend,depends,243671,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F047: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256167,safety,detect,detected,256167,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256191,safety,error,errors,256191,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256226,safety,ERROR,ERROR,256226,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256246,safety,error,errors,256246,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70205,security,hash,hash,70205,"== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Ha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70308,security,hash,hash,70308,"4). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70873,security,hash,hash,70873,"pyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:71802,security,hash,hash,71802,"its<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:72154,security,hash,hashtable,72154,"olicy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:72385,security,hash,hash,72385,"onst, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:74109,security,hash,hash,74109,"RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Ha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:74212,security,hash,hash,74212,"basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:74777,security,hash,hash,74777,"s namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:75706,security,hash,hash,75706,"its<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:76058,security,hash,hashtable,76058,"olicy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:76289,security,hash,hash,76289,"onst, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:78047,security,hash,hash,78047,":Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Ha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:78150,security,hash,hash,78150,"s<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:78715,security,hash,hash,78715,"ecute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:79644,security,hash,hash,79644,"its<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:79996,security,hash,hashtable,79996,"olicy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:80227,security,hash,hash,80227,"onst, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:82007,security,hash,hash,82007,"ager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Ha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:82110,security,hash,hash,82110,"r<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:82675,security,hash,hash,82675,"Cppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:83604,security,hash,hash,83604,"its<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:83956,security,hash,hashtable,83956,"olicy.h:1217). ==270704== by 0x753BA23: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:84187,security,hash,hash,84187,"onst, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:86369,security,hash,hash,86369,"nsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x753CDF4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x753C38B: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_tra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:86766,security,hash,hashtable,86766,"_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x753C38B: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:87413,security,hash,hash,87413,"r_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x753C38B: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x753BA56: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:87803,security,hash,hashtable,87803,": std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x753BA56: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:88449,security,hash,hash,88449,"std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x753BA56: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:88801,security,hash,hashtable,88801,"htable.h:793). ==270704== by 0x753BA56: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:89032,security,hash,hash,89032,"onst, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E89AE: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7CF8: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162514,security,hash,hash,162514,"RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162617,security,hash,hash,162617,"basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:163156,security,hash,hash,163156,"3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:164032,security,hash,hash,164032,"r>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:164385,security,hash,hashtable,164385,">, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:164979,security,hash,hash,164979,":char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:165339,security,hash,hashtable,165339,">, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:165548,security,hash,hash,165548,":basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167655,security,hash,hash,167655,"std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167758,security,hash,hash,167758,"er const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:168297,security,hash,hash,168297,"821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:169173,security,hash,hash,169173,"r>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:169526,security,hash,hashtable,169526,">, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:170120,security,hash,hash,170120,":char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:170480,security,hash,hashtable,170480,">, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:170689,security,hash,hash,170689,":basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:172830,security,hash,hash,172830,"char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:172933,security,hash,hash,172933,"1::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:173472,security,hash,hash,173472,"4: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:174348,security,hash,hash,174348,"r>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:174701,security,hash,hashtable,174701,">, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:175295,security,hash,hash,175295,":char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:175655,security,hash,hashtable,175655,">, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:175864,security,hash,hash,175864,":basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:178027,security,hash,hash,178027,"nsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:178130,security,hash,hash,178130,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:178669,security,hash,hash,178669,"void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:179545,security,hash,hash,179545,"r>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:179898,security,hash,hashtable,179898,">, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:180492,security,hash,hash,180492,":char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:180852,security,hash,hashtable,180852,">, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:181061,security,hash,hash,181061,":basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:183573,security,hash,hash,183573,", std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x271EBE8A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271EAD53: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:183971,security,hash,hashtable,183971,"ised value of size 8. ==270704== at 0x271EBE8A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271EAD53: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:184565,security,hash,hash,184565," std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271EAD53: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271E9DE4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:184956,security,hash,hashtable,184956,"g) const (hashtable.h:1812). ==270704== by 0x271EAD53: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271E9DE4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E8F95: std::_Hashtabl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:185549,security,hash,hash,185549,"ar> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271E9DE4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:185902,security,hash,hashtable,185902,":allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271E9DE4: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:186496,security,hash,hash,186496,":char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:186856,security,hash,hashtable,186856,">, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E8F95: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:187065,security,hash,hash,187065,":basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1724). ==270704== by 0x271E846A: std::unordered_multimap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Internal::RDF::RVariationBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1891). ==270704== by 0x271E708D: ROOT::Internal::RDF::RColumnRegister::GetVariationsFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (RDFColumnRegister.cxx:60). ==270704== by 0x271E7397: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189420,security,hash,hash,189420,"<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189523,security,hash,hash,189523,"g<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:190057,security,hash,hash,190057," 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:190923,security,hash,hash,190923,"char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:191275,security,hash,hashtable,191275,"traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:191474,security,hash,hash,191474,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193613,security,hash,hash,193613,"<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193716,security,hash,hash,193716,"g<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:194250,security,hash,hash,194250," 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:195116,security,hash,hash,195116,"char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:195468,security,hash,hashtable,195468,"traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:195667,security,hash,hash,195667,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:197840,security,hash,hash,197840,"::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:197943,security,hash,hash,197943,"d::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:198477,security,hash,hash,198477,"amespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55). ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:199343,security,hash,hash,199343,"char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:199695,security,hash,hashtable,199695,"traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:199894,security,hash,hash,199894,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:202089,security,hash,hash,202089,"> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:202192,security,hash,hash,202192,"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:202726,security,hash,hash,202726,"cutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:203592,security,hash,hash,203592,"char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:203944,security,hash,hashtable,203944,"traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217). ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:204143,security,hash,hash,204143,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1587). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:206677,security,hash,hash,206677,"21393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:207074,security,hash,hashtable,207074,"f uninitialised value of size 8. ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:207658,security,hash,hash,207658,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:208048,security,hash,hashtable,208048,"nsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:208631,security,hash,hash,208631,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:208983,security,hash,hashtable,208983,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:209182,security,hash,hash,209182,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:211824,security,hash,hash,211824,"pper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:212944,security,hash,hash,212944," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:213341,security,hash,hashtable,213341,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:213925,security,hash,hash,213925,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:214315,security,hash,hashtable,214315,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:214898,security,hash,hash,214898,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:215250,security,hash,hashtable,215250,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:215449,security,hash,hash,215449,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:218621,security,hash,hash,218621,"::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:219741,security,hash,hash,219741," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:220138,security,hash,hashtable,220138,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:220722,security,hash,hash,220722,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:221112,security,hash,hashtable,221112,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:221695,security,hash,hash,221695,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:222047,security,hash,hashtable,222047,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:222246,security,hash,hash,222246,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:225280,security,hash,hash,225280,"::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:226400,security,hash,hash,226400," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:226797,security,hash,hashtable,226797,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:227381,security,hash,hash,227381,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:227771,security,hash,hashtable,227771,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:228354,security,hash,hash,228354,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:228706,security,hash,hashtable,228706,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:228905,security,hash,hash,228905,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:231921,security,hash,hash,231921,"::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:233041,security,hash,hash,233041," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:233438,security,hash,hashtable,233438,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:234022,security,hash,hash,234022,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:234412,security,hash,hashtable,234412,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:234995,security,hash,hash,234995,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:235347,security,hash,hashtable,235347,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:235546,security,hash,hash,235546,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:238450,security,hash,hash,238450,"::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:239570,security,hash,hash,239570," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:239967,security,hash,hashtable,239967,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:240551,security,hash,hash,240551,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:240941,security,hash,hashtable,240941,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:241524,security,hash,hash,241524,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:241876,security,hash,hashtable,241876,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:242075,security,hash,hash,242075,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:244979,security,hash,hash,244979,"::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:246099,security,hash,hash,246099," std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:246496,security,hash,hashtable,246496,"const (hashtable_policy.h:1614). ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:247080,security,hash,hash,247080,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:247470,security,hash,hashtable,247470,"nsigned long) const (hashtable.h:1819). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:248053,security,hash,hash,248053,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:248405,security,hash,hashtable,248405,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:248604,security,hash,hash,248604,"> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271E860E: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:880). ==270704== by 0x271E7458: ROOT::Internal::RDF::RColumnRegister::GetVariationDeps(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:250778,security,hash,hash,250778,":allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Use of uninitialised value of size 8. ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:251175,security,hash,hashtable,251175,"f uninitialised value of size 8. ==270704== at 0x271AAA2C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:251759,security,hash,hash,251759,"<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:252149,security,hash,hashtable,252149,"nsigned long) const (hashtable.h:1812). ==270704== by 0x271AA89F: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:252732,security,hash,hash,252732,"llocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253084,security,hash,hashtable,253084,"char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:793). ==270704== by 0x271AA66C: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:253677,security,hash,hash,253677,"d::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable.h:1589). ==270704== by 0x271AA393: std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:254237,security,hash,hash,254237,":pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772). ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256167,security,detect,detected,256167,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:2517,testability,depend,depends,2517,"ontext*) (Executors.cxx:99). ==270704== by 0x5E3ACA6: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101). ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607). ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:3871,testability,depend,depends,3871,":CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330). ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==27070",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:5494,testability,depend,depends,5494,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93DC: capacity (basic_string.h:977). ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:7110,testability,depend,depends,7110,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C93E9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplatePro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:8670,testability,depend,depends,8670,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C8367: capacity (basic_string.h:977). ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:10407,testability,depend,depends,10407,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:12194,testability,depend,depends,12194,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:13981,testability,depend,depends,13981,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:15768,testability,depend,depends,15768,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:17495,testability,depend,depends,17495,"pace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:19176,testability,depend,depends,19176,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C83FA: _M_dispose (basic_string.h:239). ==270704== by 0x66C83FA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:20915,testability,depend,depends,20915,"eter&, CPyCppyy::CallContext*) (Converters.cxx:2634). ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x4848865: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x66C8401: deallocate (new_allocator.h:145). ==270704== by 0x66C8401: deallocate (alloc_traits.h:492). ==270704== by 0x66C8401: _M_destroy (basic_string.h:245). ==270704== by 0x66C8401: _M_dispose (basic_string.h:240). ==270704== by 0x66C8401: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:317). ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498). ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680). ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_obje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:28560,testability,depend,depends,28560,": CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706). ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632). ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0). ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:32731,testability,depend,depends,32731,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:41281,testability,depend,depends,41281,"0x19013B07: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629). ==270704== by 0x19820055: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:47706,testability,depend,depends,47706,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66CAF87: _S_copy (basic_string.h:356). ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401). ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225). ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109). ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:60764,testability,depend,depends,60764,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582). ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C31A: _M_construct<char const*> (basic_string.tcc:217). ==270704== by 0x671C31A: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C31A: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C31A: basic_string (basic_string.h:521). ==270704== by 0x671C31A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704== by 0x271E7C48: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:63166,testability,depend,depends,63166,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x671C320: _S_copy (basic_string.h:356). ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225). ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255). ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274). ==270704== by 0x671C320: basic_string (basic_string.h:521). ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154). ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664). ==270704==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:68178,testability,depend,depends,68178,"ister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271E7C65: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:137). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:70022,testability,depend,depends,70022,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:73926,testability,depend,depends,73926,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:81768,testability,depend,depends,81768,"l::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140). ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:90809,testability,depend,depends,90809,"nager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:738). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:92696,testability,depend,depends,92696,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66C86E2: _S_copy (basic_string.h:356). ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739). ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:96617,testability,depend,depends,96617,"gned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728). ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783). ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566). ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:103899,testability,depend,depends,103899,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:111181,testability,depend,depends,111181,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:118463,testability,depend,depends,118463,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:125745,testability,depend,depends,125745,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D981A: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:133027,testability,depend,depends,133027,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3DBB3: unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (stl_algobase.h:235). ==270704== by 0x6B3E09E: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:313). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:140365,testability,depend,depends,140365,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E442: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:503). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:147707,testability,depend,depends,147707,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x6B3E459: std::basic_string_view<char, std::char_traits<char> >::_S_compare(unsigned long, unsigned long) (string_view:505). ==270704== by 0x6B3E0DF: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:316). ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:155049,testability,depend,depends,155049,"r> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565). ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:162331,testability,depend,depends,162331,">, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594). ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898). ==270704== by 0x197967D1: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:167472,testability,depend,depends,167472,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:177788,testability,depend,depends,177788,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:79). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:189237,testability,depend,depends,189237,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:193430,testability,depend,depends,193430,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:201850,testability,depend,depends,201850,", ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56). ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153). ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198). ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875). ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:211374,testability,depend,depends,211374," > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:217520,testability,depend,depends,217520," std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594). ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:224060,testability,depend,depends,224060,"T::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x5E02D73: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:346). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:230613,testability,depend,depends,230613,"<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887). ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F02A: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:237142,testability,depend,depends,237142,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F033: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:243671,testability,depend,depends,243671,"std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const (RDFColumnRegister.cxx:84). ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22). ==270704== by 0x19821393: ??? ==270704== . ==270704== Conditional jump or move depends on uninitialised value(s). ==270704== at 0x484F047: bcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so). ==270704== by 0x5E02E16: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:361). ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236). ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356). ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256261,testability,context,contexts,256261,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256042,usability,memor,memory,256042,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256191,usability,error,errors,256191,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256226,usability,ERROR,ERROR,256226,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:256246,usability,error,errors,256246,"<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001). ==270704== by 0x1979847F: ??? ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418). ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761). ==270704== by 0x2F3C1107: ??? ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846). ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78). ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367). ==270704== . ==270704== . ==270704== HEAP SUMMARY:. ==270704== in use at exit: 164,725,300 bytes in 125,412 blocks. ==270704== total heap usage: 5,802,833 allocs, 5,677,422 frees, 2,881,639,983 bytes allocated. ==270704== . ==270704== LEAK SUMMARY:. ==270704== definitely lost: 18 bytes in 3 blocks. ==270704== indirectly lost: 0 bytes in 0 blocks. ==270704== possibly lost: 38,887,858 bytes in 15,700 blocks. ==270704== still reachable: 10,654,285 bytes in 57,037 blocks. ==270704== of which reachable via heuristic:. ==270704== newarray : 8,616 bytes in 18 blocks. ==270704== multipleinheritance: 14,904 bytes in 3 blocks. ==270704== suppressed: 115,183,139 bytes in 52,672 blocks. ==270704== Rerun with --leak-check=full to see details of leaked memory. ==270704== . ==270704== Use --track-origins=yes to see where uninitialised values come from. ==270704== For lists of detected and suppressed errors, rerun with: -s. ==270704== ERROR SUMMARY: 1305 errors from 60 contexts (suppressed: 1110 from 25). ```. </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:34,integrability,Filter,Filter,34,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". void foo (const std::initializer_list< std::string > &columns) {}. """"""). ROOT.foo([""x""]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:116,integrability,Filter,Filter,116,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". void foo (const std::initializer_list< std::string > &columns) {}. """"""). ROOT.foo([""x""]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:509,integrability,Filter,Filter,509,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". void foo (const std::initializer_list< std::string > &columns) {}. """"""). ROOT.foo([""x""]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:555,testability,simpl,simpler,555,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". void foo (const std::initializer_list< std::string > &columns) {}. """"""). ROOT.foo([""x""]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:555,usability,simpl,simpler,555,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):. https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". void foo (const std::initializer_list< std::string > &columns) {}. """"""). ROOT.foo([""x""]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:20,reliability,doe,does,20,"Ok, what can we do? does this need a Pythonization? EDIT: or is this a bug to fix in cppyy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:45,integrability,Filter,Filter,45,"Yes it's a bug in cppyy, a pythonization of `Filter` to convert the list into a vector would make this work but it would hide the real issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:89,usability,close,closed,89,"~~This still seems to be an issue even after #11393 , investigating.~~. All fine, can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/issues/10092:59,interoperability,convers,conversion,59,Another issue (#11411) has been opened to follow up on the conversion issue in cppyy reported above.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10092
https://github.com/root-project/root/pull/10094:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10094
https://github.com/root-project/root/issues/10096:289,energy efficiency,core,core,289,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:70,performance,memor,memory,70,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:490,safety,Test,TestBody,490,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:535,safety,test,test,535,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:80,security,access,accessed,80,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:490,testability,Test,TestBody,490,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:535,testability,test,test,535,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:70,usability,memor,memory,70,Still there; with debug information I get some more details where the memory is accessed:. ```. #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55. #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20. #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15. #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1. ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/issues/10096:0,availability,ping,ping,0,ping @Axel-Naumann this is still there,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10096
https://github.com/root-project/root/pull/10097:0,availability,ping,ping,0,"ping @hageboeck, does this make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10097
https://github.com/root-project/root/pull/10097:17,reliability,doe,does,17,"ping @hageboeck, does this make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10097
https://github.com/root-project/root/pull/10097:2,availability,ping,ping,2,"> ping @hageboeck, does this make sense? Yes, if they call executables, you don't need preloading. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10097
https://github.com/root-project/root/pull/10097:19,reliability,doe,does,19,"> ping @hageboeck, does this make sense? Yes, if they call executables, you don't need preloading. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10097
https://github.com/root-project/root/pull/10098:135,deployability,log,logic,135,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:33,safety,test,tests,33,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:110,safety,test,tests,110,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:135,safety,log,logic,135,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:135,security,log,logic,135,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:28,testability,unit,unit,28,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:33,testability,test,tests,33,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:110,testability,test,tests,110,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:135,testability,log,logic,135,"I think we should have some unit tests for `get_clustered_range_from_percs` and `get_percentage_ranges`. E.g. tests that exercise that logic in case of many partitions per file, very few partitions per file and less partitions than the number of files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:35,safety,test,tests,35,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:85,safety,review,review,85,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:122,safety,test,tests,122,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:158,safety,review,review,158,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:30,testability,unit,unit,30,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:35,testability,test,tests,35,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:85,testability,review,review,85,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:122,testability,test,tests,122,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:158,testability,review,review,158,"> I think we should have some unit tests. Indeed, we also discussed those during the review. I'll squash the commits, add tests and open the PR for the final review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:196,deployability,log,logic,196,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:263,integrability,messag,message,263,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:263,interoperability,messag,message,263,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:9,reliability,alert,alert,9,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:9,safety,aler,alert,9,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:133,safety,review,review,133,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:196,safety,log,logic,196,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:196,security,log,logic,196,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:133,testability,review,review,133,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:196,testability,log,logic,196,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:172,usability,help,help,172,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10098:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10098
https://github.com/root-project/root/pull/10099:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10099
https://github.com/root-project/root/pull/10099:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10099
https://github.com/root-project/root/pull/10099:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10099
https://github.com/root-project/root/pull/10099:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10099
https://github.com/root-project/root/pull/10099:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10099
https://github.com/root-project/root/pull/10101:5,deployability,updat,updated,5,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3100,integrability,encapsulat,encapsulated,3100,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3160,integrability,encapsulat,encapsulates,3160,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3100,modifiability,encapsul,encapsulated,3100,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3160,modifiability,encapsul,encapsulates,3160,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3191,modifiability,exten,extending,3191,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:5,safety,updat,updated,5,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:116,safety,test,test,116,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:5,security,updat,updated,5,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:116,testability,test,test,116,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:470,testability,assert,assert,470,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:556,testability,assert,assert,556,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:590,testability,assert,assert,590,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:788,testability,assert,assert,788,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:874,testability,assert,assert,874,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:907,testability,assert,assert,907,"I've updated `CleanRangeSet()` to handle cases where the new range partially overlaps with an existing one. You can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. asse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1106,testability,assert,assert,1106,"ou can test with the following:. ```. ROOT::Fit::DataRange range;. std::cout << ""Start with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1192,testability,assert,assert,1192," with [0,5]"" << std::endl;. range.AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" <<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1225,testability,assert,assert,1225,".AddRange(0,5);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. . std::cout << ""Add [2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1422,testability,assert,assert,1422,"2,3]"" << std::endl;. range.AddRange(2,3);. . assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << rang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1508,testability,assert,assert,1508,"""Size = 1 = "" << range.Size() << std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1541,testability,assert,assert,1541,"std::endl;. assert((range(0,0).first == 0));. assert(range(0,0).second == 5);. std::cout << ""range [0,5] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-1,6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1742,testability,assert,assert,1742,",6]"" << std::endl;. range.AddRange(-1,6);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1828,testability,assert,assert,1828,"ize = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1861,testability,assert,assert,1861,"d::endl;. assert(range(0,0).first == -1);. assert(range(0,0).second == 6);. std::cout << ""range [-1,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:1996,testability,assert,assert,1996,"<< range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "",",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2029,testability,assert,assert,2029,"d::endl;. std::cout << ""Add [-2,4]"" << std::endl;. range.AddRange(-2,4);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2232,testability,assert,assert,2232,"ge(0,0).second == 6);. std::cout << ""range [-2,6] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an ove",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2318,testability,assert,assert,2318,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2351,testability,assert,assert,2351,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2554,testability,assert,assert,2554,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2587,testability,assert,assert,2587,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2788,testability,assert,assert,2788,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2874,testability,assert,assert,2874,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:2907,testability,assert,assert,2907,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:3068,usability,behavi,behaviors,3068,"< "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [5,7]"" << std::endl;. range.AddRange(5,7);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. std::cout << ""Add [20,25]"" << std::endl;. range.AddRange(20,25);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 7);. std::cout << ""range [-2,7] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 25);. std::cout << ""range [20,25] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [24,26]"" << std::endl;. range.AddRange(24,26);. assert(range.Size() == 2);. std::cout << ""Size = 2 = "" << range.Size() << std::endl;. assert(range(0,1).first == 20);. assert(range(0,1).second == 26);. std::cout << ""range [20,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [19,20]"" << std::endl;. range.AddRange(19,20);. assert(range(0,1).first == 19);. assert(range(0,1).second == 26);. std::cout << ""range [16,26] = ["" << range(0,1).first << "","" << range(0,1).second << ""]"" << std::endl;. std::cout << ""Add [6,20]"" << std::endl;. range.AddRange(6,20);. assert(range.Size() == 1);. std::cout << ""Size = 1 = "" << range.Size() << std::endl;. assert(range(0,0).first == -2);. assert(range(0,0).second == 26);. std::cout << ""range [-2,26] = ["" << range(0,0).first << "","" << range(0,0).second << ""]"" << std::endl;. ```. This shows several behaviors: adding a range fully encapsulated by an existing one, adding a range which fully encapsulates and existing one, extending an existing range by adding an overlapping one, merging two existing ranges by adding one in the middle. . Tim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:102,safety,test,test,102,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:141,safety,test,test,141,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:181,safety,test,test,181,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:271,safety,test,test,271,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:338,safety,test,test,338,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:102,testability,test,test,102,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:127,testability,simpl,simple,127,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:141,testability,test,test,141,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:181,testability,test,test,181,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:215,testability,assert,assert,215,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:240,testability,simpl,simple,240,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:271,testability,test,test,271,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:338,testability,test,test,338,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:24,usability,support,support,24,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:127,usability,simpl,simple,127,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/pull/10101:240,usability,simpl,simple,240,It is great you add the support for overlapping range in DataRange. . Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? . You can just replace the assert with EXPECT_EQ. A simple example to look is this test: . https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10101
https://github.com/root-project/root/issues/10102:165,availability,Error,Error,165,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:195,availability,error,error,195,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:284,availability,Error,Error,284,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:336,deployability,fail,failed,336,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:165,performance,Error,Error,165,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:195,performance,error,error,195,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:284,performance,Error,Error,284,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:336,reliability,fail,failed,336,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:165,safety,Error,Error,165,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:195,safety,error,error,195,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:284,safety,Error,Error,284,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:165,usability,Error,Error,165,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:195,usability,error,error,195,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:284,usability,Error,Error,284,"Before the crash, two output files are produced. `Run2012B_SingleMu10x.root` seems well-formed, while trying to open `Run2012B_SingleMu10x_1.root` results in . ```. Error in <TFile::ReadBuffer>: error reading all requested bytes from file Run2012B_SingleMu10x_1.root, got 272 of 300. Error in <TFile::Init>: Run2012B_SingleMu10x_1.root failed to read the file type data. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10102:23,usability,help,help,23,"not sure if this might help, there was a memleak in this function:. https://github.com/root-project/root/pull/15059. Related: https://root-forum.cern.ch/t/fatal-in-tfilemerger-recursiveremove-output-file-hadd-100gb-ttree/31846 https://root-forum.cern.ch/t/root-6-04-14-hadd-100gb-and-rootlogon/24581 https://root-forum.cern.ch/t/hadd-100-gb-ttree/38737",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10102
https://github.com/root-project/root/issues/10103:56,deployability,build,build,56,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:140,deployability,depend,depends,140,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:140,integrability,depend,depends,140,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:82,interoperability,XML,XML,82,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:151,interoperability,XML,XML,151,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:140,modifiability,depend,depends,140,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:140,safety,depend,depends,140,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/issues/10103:140,testability,depend,depends,140,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10103
https://github.com/root-project/root/pull/10104:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:80,performance,perform,performance-,80,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:80,usability,perform,performance-,80,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:80,performance,perform,performance-,80,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:80,usability,perform,performance-,80,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:118,deployability,build,build,118,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:78,interoperability,xml,xml,78,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:137,interoperability,xml,xml,137,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:238,interoperability,xml,xml,238,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:229,safety,test,tests,229,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:378,safety,test,tests,378,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:224,testability,unit,unit,224,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:229,testability,test,tests,229,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:378,testability,test,tests,378,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10104:141,usability,support,support,141,"I didn't figure out a non-verbose way to disable the roostats tutorials when `xml` is off. Given that not many people build ROOT without xml support, I don't think it's worth it to make sure to disable the relevant tutorial unit tests if xml is OFF. After all, this was not the case since the beginning of HistFactory and it was not a problem. Also, the issue with the RooStats tests is unrelated to this PR which I want to merge ASAP because it fixes an issue that was now often reported on the forum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10104
https://github.com/root-project/root/pull/10105:125,safety,risk,risking,125,"Hi @lmoneta, I agree with you that these number literal names are confusing, but I'm afraid we can't get rid of this without risking to break user code. It was always the case that the `RooConstVar` created with `RooFit::RooConst` have their value directly as a name. If we would change that now, it could have unexpected consequences for user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10105
https://github.com/root-project/root/pull/10105:125,security,risk,risking,125,"Hi @lmoneta, I agree with you that these number literal names are confusing, but I'm afraid we can't get rid of this without risking to break user code. It was always the case that the `RooConstVar` created with `RooFit::RooConst` have their value directly as a name. If we would change that now, it could have unexpected consequences for user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10105
https://github.com/root-project/root/pull/10105:142,usability,user,user,142,"Hi @lmoneta, I agree with you that these number literal names are confusing, but I'm afraid we can't get rid of this without risking to break user code. It was always the case that the `RooConstVar` created with `RooFit::RooConst` have their value directly as a name. If we would change that now, it could have unexpected consequences for user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10105
https://github.com/root-project/root/pull/10105:339,usability,user,user,339,"Hi @lmoneta, I agree with you that these number literal names are confusing, but I'm afraid we can't get rid of this without risking to break user code. It was always the case that the `RooConstVar` created with `RooFit::RooConst` have their value directly as a name. If we would change that now, it could have unexpected consequences for user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10105
https://github.com/root-project/root/pull/10106:215,integrability,Batch,BatchMode,215,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10106
https://github.com/root-project/root/pull/10106:215,performance,Batch,BatchMode,215,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10106
https://github.com/root-project/root/pull/10106:45,usability,user,user,45,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10106
https://github.com/root-project/root/pull/10106:147,usability,clear,clear,147,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10106
https://github.com/root-project/root/pull/10108:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10108:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/pull/10108:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10108
https://github.com/root-project/root/issues/10112:4,deployability,patch,patch,4,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:10,deployability,releas,release,10,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:4,safety,patch,patch,4,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:4,security,patch,patch,4,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/issues/10112:52,usability,close,closed,52,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10112
https://github.com/root-project/root/pull/10116:130,availability,servic,services,130,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:211,availability,Error,Errors,211,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:706,availability,error,error,706,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1004,availability,Error,Error,1004,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1253,availability,error,error,1253,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1339,availability,error,error,1339,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1380,availability,failur,failure,1380,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:2,deployability,Build,Build,2,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:8,deployability,fail,failed,8,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:54,deployability,build,build,54,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:88,deployability,build,build,88,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:130,deployability,servic,services,130,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:182,deployability,build,build,182,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:308,deployability,build,builddir,308,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:317,deployability,build,build,317,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:323,deployability,BUILD,BUILD,323,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:387,deployability,build,builddir,387,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:396,deployability,build,build,396,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:402,deployability,BUILD,BUILD,402,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:454,deployability,build,builddir,454,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:463,deployability,build,build,463,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:469,deployability,BUILD,BUILD,469,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:628,deployability,build,builddir,628,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:637,deployability,build,build,637,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:643,deployability,BUILD,BUILD,643,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:931,deployability,build,build,931,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1191,deployability,updat,updated,1191,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1236,deployability,build,build,1236,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1307,deployability,log,log,1307,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1380,deployability,fail,failure,1380,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1407,deployability,log,log,1407,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:130,integrability,servic,services,130,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1292,integrability,messag,message,1292,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1345,integrability,messag,message,1345,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1367,integrability,messag,message,1367,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1292,interoperability,messag,message,1292,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1345,interoperability,messag,message,1345,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1367,interoperability,messag,message,1367,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:130,modifiability,servic,services,130,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:211,performance,Error,Errors,211,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:706,performance,error,error,706,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1004,performance,Error,Error,1004,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1253,performance,error,error,1253,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1339,performance,error,error,1339,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1380,performance,failur,failure,1380,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:8,reliability,fail,failed,8,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1380,reliability,fail,failure,1380,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:211,safety,Error,Errors,211,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:706,safety,error,error,706,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1004,safety,Error,Error,1004,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1159,safety,test,tested,1159,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1191,safety,updat,updated,1191,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1253,safety,error,error,1253,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1307,safety,log,log,1307,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1320,safety,detect,detects,1320,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1339,safety,error,error,1339,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1407,safety,log,log,1407,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1191,security,updat,updated,1191,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1307,security,log,log,1307,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1320,security,detect,detects,1320,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1407,security,log,log,1407,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1159,testability,test,tested,1159,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1307,testability,log,log,1307,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1407,testability,log,log,1407,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:211,usability,Error,Errors,211,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:706,usability,error,error,706,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1004,usability,Error,Error,1004,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1253,usability,error,error,1253,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10116:1339,usability,error,error,1339,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console). > ### Errors:. > . > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10116
https://github.com/root-project/root/pull/10120:107,availability,servic,services,107,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:333,availability,servic,services,333,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:561,availability,servic,services,561,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:804,availability,servic,services,804,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1048,availability,servic,services,1048,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1278,availability,servic,services,1278,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1426,availability,failur,failures,1426,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:6,deployability,Fail,Failing,6,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:107,deployability,servic,services,107,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:159,deployability,build,build,159,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:333,deployability,servic,services,333,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:385,deployability,build,build,385,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:561,deployability,servic,services,561,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:613,deployability,build,build,613,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:804,deployability,servic,services,804,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:856,deployability,build,build,856,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1048,deployability,servic,services,1048,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1100,deployability,build,build,1100,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1278,deployability,servic,services,1278,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1330,deployability,build,build,1330,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1426,deployability,fail,failures,1426,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:107,integrability,servic,services,107,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:333,integrability,servic,services,333,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:561,integrability,servic,services,561,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:804,integrability,servic,services,804,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1048,integrability,servic,services,1048,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1278,integrability,servic,services,1278,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:107,modifiability,servic,services,107,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:333,modifiability,servic,services,333,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:561,modifiability,servic,services,561,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:804,modifiability,servic,services,804,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1048,modifiability,servic,services,1048,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1278,modifiability,servic,services,1278,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1426,performance,failur,failures,1426,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:6,reliability,Fail,Failing,6,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1426,reliability,fail,failures,1426,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:14,safety,test,tests,14,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:172,safety,test,testReport,172,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:398,safety,test,testReport,398,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:626,safety,test,testReport,626,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:869,safety,test,testReport,869,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1113,safety,test,testReport,1113,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1343,safety,test,testReport,1343,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:14,testability,test,tests,14,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:172,testability,test,testReport,172,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:398,testability,test,testReport,398,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:626,testability,test,testReport,626,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:739,testability,regress,regression,739,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:869,testability,test,testReport,869,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:908,testability,regress,regression,908,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1113,testability,test,testReport,1113,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:1343,testability,test,testReport,1343,> ### Failing tests:. > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139475/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10120:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10120
https://github.com/root-project/root/pull/10121:82,testability,understand,understand,82,"Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:176,usability,command,commands,176,"Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:471,energy efficiency,core,core,471,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:639,energy efficiency,core,core,639,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:411,interoperability,specif,specific,411,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:84,testability,understand,understand,84,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:312,testability,understand,understand,312,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:178,usability,command,commands,178,"> Looking on the web it seems `0x7F ` is really ""Del"", not only on Mac. So I do not understand what we have ""Del"" and `0x7F`. And, any way, an ascii code in the list of possible commands is not really useful if people do not know how to produce/generate it. I think the doc should only ""keys you can type on"". I understand, by then there is something 'weird' in the source code because it says this 0x7F is Mac-specific:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L85. whereas in Linux it would supposedly handle it in a different place:. https://github.com/root-project/root/blob/master/core/textinput/src/textinput/KeyBinding.cpp#L141. (Thus, I thought that 0x7F was a different key that was not present on other keyboards). Maybe something to do with: https://www.computerhope.com/issues/ch001389.htm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:46,usability,command,commands,46,"Also, please let me know if there are further commands on the list that are 'clashing' with the default macOS shortcuts, so that I add a * (footnote) to them. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:110,usability,shortcut,shortcuts,110,"Also, please let me know if there are further commands on the list that are 'clashing' with the default macOS shortcuts, so that I add a * (footnote) to them. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:152,availability,state,statement,152,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2130,availability,state,state,2130,"iven, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2194,availability,state,state,2194,"ut class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI dem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2270,availability,state,state,2270," prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5265,availability,down,downwards,5265,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:747,deployability,Unload,Unloads,747,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:799,deployability,Unload,Unloads,799,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1816,deployability,Toggl,Toggle,1816,"le. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ==========================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1914,deployability,Toggl,Toggles,1914,"include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2078,deployability,Toggl,Toggles,2078,"a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2525,deployability,stack,stack,2525,"sed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4926,deployability,toggl,toggle,4926,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:0,energy efficiency,Current,Current,0,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:364,energy efficiency,Load,Load,364,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:957,energy efficiency,optim,optimization,957,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1021,energy efficiency,current,current,1021," root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (le",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2880,energy efficiency,load,load,2880,"put. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keybo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3407,energy efficiency,current,current,3407,"ts. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3439,energy efficiency,current,current,3439,"ract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5604,energy efficiency,current,current,5604,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:152,integrability,state,statement,152,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1823,integrability,wrap,wrapping,1823,"include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ==================================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2130,integrability,state,state,2130,"iven, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2194,integrability,state,state,2194,"ut class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI dem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2270,integrability,state,state,2270," prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2387,integrability,abstract,abstract,2387,"edef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2430,integrability,filter,filter,2430,"no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2439,integrability,abstract,abstract,2439," given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show curr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1971,interoperability,bind,binding,1971," (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3274,interoperability,Specif,Specifying,3274,"h the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Es",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3767,interoperability,specif,specific,3767,"ands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1687,modifiability,variab,variable,1687,"derr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help		",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1971,modifiability,bind,binding,1971," (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2387,modifiability,abstract,abstract,2387,"edef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2439,modifiability,abstract,abstract,2439," given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show curr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:364,performance,Load,Load,364,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:957,performance,optimiz,optimization,957,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2880,performance,load,load,2880,"put. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keybo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3395,performance,content,contents,3395,"tax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : dele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4854,performance,content,content,4854,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4894,performance,content,content,4894,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:125,safety,except,except,125,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:768,safety,input,inputs,768,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1790,safety,input,input,1790,"e>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1880,safety,input,input,1880," given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: loa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2102,safety,input,input,2102,"level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:464,security,sign,signature,464,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3114,security,sign,signature,3114,"ding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5194,security,sign,signal,5194,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5235,security,sign,signal,5235,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2582,testability,trace,trace,2582," statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch proc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2608,testability,trace,trace,2608,"as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:69,usability,command,commands,69,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:89,usability,command,commands,89,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:272,usability,Command,Command,272,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:526,usability,command,command,526,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:734,usability,undo,undo,734,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:768,usability,input,inputs,768,"Current screenshot:. ```. root [0] .? Cling (C/C++ interpreter) meta commands usage. All commands must be preceded by a '.', except. for the evaluation statement { }. ==============================================================================================. Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with. 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file. '>' or '1>'		- Redirects the stdout stream only. '2>'			- Redirects the stderr stream only. '&>' (or '2>&1')		- Redirects both stdout and stderr. '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1756,usability,Cancel,Cancels,1756,"ast 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1790,usability,input,input,1790,"e>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:1880,usability,input,input,1880," given,. 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3). 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: loa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2102,usability,input,input,2102,"level). 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels). 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style. 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2509,usability,undo,undo,2509,"all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2520,usability,undo,undo,2520,"d (parsed) files. .fileEx			- Prints out included (parsed) file statistics. 				 as well as a list of their names. .g <var>				- Prints out information about global variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2685,usability,help,help,2685,"variable. 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:2767,usability,command,commands,2767,"ores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the. 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes. 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding. 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-spec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3201,usability,help,help,3201,"a given file. .compareState <filename>	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3237,usability,guid,guide,3237,">	- Compare the interpreter's state with the one. 				 saved in a given file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3310,usability,help,help,3310,"file. .stats [name]		- Show stats for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3340,usability,shortcut,shortcuts,3340," for internal data structures. 				 'ast' abstract syntax tree stats. 				 'asttree [filter]' abstract syntax tree layout. 				 'decl' dump ast declarations. 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3526,usability,user,user,3526,"ck. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3547,usability,user,user,3547,"mment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation. 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands. ===============================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all charact",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3782,usability,command,command,3782,"======================================================================. .L <filename>[flags]: load the given file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : wo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:3886,usability,shortcut,shortcuts,3886,"ven file with optional flags like. + to compile or ++ to force recompile. Type .? TSystem::CompileMacro for a list of all flags. .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4016,usability,cursor,cursor,4016," .(x|X) <filename>[flags](args) :. same as .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or prin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4057,usability,cursor,cursor,4057,"s .L <filename>[flags] and runs then a function. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4101,usability,cursor,cursor,4101,"ion. with signature: ret_type filename(args). .credits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4150,usability,cursor,cursor,4150,"edits : show credits. .demo : launch GUI demo. .help Class::Member : open reference guide for that class member (or .?). Specifying '::Member' is optional. .help edit : show line editing shortcuts (or .?). .license : show license. .ls : list contents of current TDirectory. .pwd : show current TDirectory, pad and style. .quit (or .exit) : quit ROOT (long form of .q). .R [user@]host[:dir] [-l user] [-d dbg] [script] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4561,usability,cursor,cursor,4561,"cript] :. launch process in a remote host. .qqq : quit ROOT - mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4623,usability,cursor,cursor,4623,"mandatory. .qqqqq : exit process immediately. .qqqqqqq : abort process. .which [file] : show path of macro file. .![OS_command] : execute OS-specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:4958,usability,undo,undo,4958,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5004,usability,command,command,5004,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5069,usability,command,command,5069,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5105,usability,clear,clear,5105,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5225,usability,paus,pause,5225,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5256,usability,navigat,navigate,5256,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5278,usability,command,command,5278,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5315,usability,navigat,navigate,5315,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5335,usability,command,command,5335,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5386,usability,command,command,5386,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5515,usability,navigat,navigate,5515,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:5724,usability,cancel,cancel,5724,"specific shell command. .!root -? : print ROOT usage (CLI options). ```. ```. root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style). ==============================================================================. Arrow_Left : move cursor left [Ctrl+B]. Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]. Home : move cursor to beginning of line [Ctrl+A]. End : move cursor to end of line [Ctrl+E]. Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]. Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]. Backspace : delete previous character [Ctrl+H]. Del : delete next character [Ctrl+D]. Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]. Ctrl+Del : delete next word [Esc,D] [Alt,D]. Ctrl+U : cut all characters between cursor and start of line. Ctrl+K : cut all characters between cursor and end of line. Ctrl+T : transpose characters. Esc,C : character to upper and jump to next word. Esc,L : word to lower case and jump to its end. Esc,U : word to upper case and jump to its end. Ctrl+Shift+C : copy clipboard content. Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]. Ins : toggle overwrite mode. Ctrl+_ : undo last keypress action. Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]. Enter : execute command [Ctrl+J] [Ctrl+M]. Ctrl+L : clear prompt screen. Ctrl+D : quit ROOT (if empty line). Ctrl+C : send kSigInt interrupt signal. Ctrl+Z : send kSigStop pause job signal. Arrow_Down : navigate downwards in command history [Ctrl+N]. Arrow_Up : navigate upwards in command history [Ctrl+P]. Ctrl+R ; Ctrl+S : search command in your history by typing a string. Use Backspace if you mistyped (but not arrows). Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order. Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search. [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc]. Use Ctrl+F or Ctrl+G to cancel search and revert original line. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:227,safety,review,review,227,"> LGTM (just consider the small comment)! > . > Before merging, we would need to squash those 64 commits (I'd probably leave around 4). Rebased and squashed. (Feel free to squash into a single one upon merging). Thanks for the review!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:227,testability,review,review,227,"> LGTM (just consider the small comment)! > . > Before merging, we would need to squash those 64 commits (I'd probably leave around 4). Rebased and squashed. (Feel free to squash into a single one upon merging). Thanks for the review!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:84,usability,help,help,84,"Before merging this, I'd like to have @vgvassilev approval for the changes to the `.help` output for standalone cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:84,energy efficiency,current,currently,84,Thanks Javier for the commit-rehaul :). Side note concerning cling's help: there is currently a crash when using `.Class` https://github.com/root-project/root/issues/10140. but I still thought it's useful to specify it in the docu.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:208,interoperability,specif,specify,208,Thanks Javier for the commit-rehaul :). Side note concerning cling's help: there is currently a crash when using `.Class` https://github.com/root-project/root/issues/10140. but I still thought it's useful to specify it in the docu.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:50,modifiability,concern,concerning,50,Thanks Javier for the commit-rehaul :). Side note concerning cling's help: there is currently a crash when using `.Class` https://github.com/root-project/root/issues/10140. but I still thought it's useful to specify it in the docu.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:50,testability,concern,concerning,50,Thanks Javier for the commit-rehaul :). Side note concerning cling's help: there is currently a crash when using `.Class` https://github.com/root-project/root/issues/10140. but I still thought it's useful to specify it in the docu.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10121:69,usability,help,help,69,Thanks Javier for the commit-rehaul :). Side note concerning cling's help: there is currently a crash when using `.Class` https://github.com/root-project/root/issues/10140. but I still thought it's useful to specify it in the docu.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10121
https://github.com/root-project/root/pull/10122:35,safety,compl,complains,35,Lgtm. Just a small note that clang complains for too many characters per line!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10122
https://github.com/root-project/root/pull/10122:35,security,compl,complains,35,Lgtm. Just a small note that clang complains for too many characters per line!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10122
https://github.com/root-project/root/pull/10123:160,availability,servic,services,160,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:345,availability,servic,services,345,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:575,availability,servic,services,575,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:804,availability,servic,services,804,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1032,availability,servic,services,1032,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1258,availability,servic,services,1258,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1499,availability,servic,services,1499,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1661,availability,failur,failures,1661,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:2,deployability,Build,Build,2,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:8,deployability,fail,failed,8,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:84,deployability,build,build,84,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:118,deployability,build,build,118,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:160,deployability,servic,services,160,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:212,deployability,build,build,212,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:241,deployability,Fail,Failing,241,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:345,deployability,servic,services,345,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:397,deployability,build,build,397,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:575,deployability,servic,services,575,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:627,deployability,build,build,627,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:804,deployability,servic,services,804,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:856,deployability,build,build,856,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1032,deployability,servic,services,1032,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1084,deployability,build,build,1084,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1258,deployability,servic,services,1258,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1310,deployability,build,build,1310,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1499,deployability,servic,services,1499,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1551,deployability,build,build,1551,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1661,deployability,fail,failures,1661,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:160,integrability,servic,services,160,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:345,integrability,servic,services,345,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:575,integrability,servic,services,575,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:804,integrability,servic,services,804,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1032,integrability,servic,services,1032,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1258,integrability,servic,services,1258,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1499,integrability,servic,services,1499,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:160,modifiability,servic,services,160,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:345,modifiability,servic,services,345,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:575,modifiability,servic,services,575,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:804,modifiability,servic,services,804,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1032,modifiability,servic,services,1032,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1258,modifiability,servic,services,1258,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1499,modifiability,servic,services,1499,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1661,performance,failur,failures,1661,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:8,reliability,fail,failed,8,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:241,reliability,Fail,Failing,241,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1661,reliability,fail,failures,1661,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:249,safety,test,tests,249,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:410,safety,test,testReport,410,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:640,safety,test,testReport,640,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:869,safety,test,testReport,869,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1097,safety,test,testReport,1097,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1323,safety,test,testReport,1323,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1564,safety,test,testReport,1564,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:249,testability,test,tests,249,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:410,testability,test,testReport,410,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:640,testability,test,testReport,640,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:869,testability,test,testReport,869,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1097,testability,test,testReport,1097,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1323,testability,test,testReport,1323,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1434,testability,regress,regression,1434,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1564,testability,test,testReport,1564,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:1603,testability,regress,regression,1603,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:69,usability,User,Users,69,> Build failed on mac11/cxx17. Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/console). > ### Failing tests:. > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification/). > . > * [projectroot.runtutorials.tutorial_tmva_TMVA_RNN_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_RNN_Classification/). > . > * [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). > . > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > . > * [projectroot.roottest.python.regression.roottest_python_regression_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139454/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/). These failures seem totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:5,reliability,doe,does,5,This does smell like a feature backport (something we generally avoid) - but I understand it's needed to unblock another PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:64,safety,avoid,avoid,64,This does smell like a feature backport (something we generally avoid) - but I understand it's needed to unblock another PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10123:79,testability,understand,understand,79,This does smell like a feature backport (something we generally avoid) - but I understand it's needed to unblock another PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10123
https://github.com/root-project/root/pull/10125:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10125
https://github.com/root-project/root/pull/10126:7,deployability,fail,fails,7,action fails because it expects at least one file changed that is not `LinkDef.h`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10126
https://github.com/root-project/root/pull/10126:7,reliability,fail,fails,7,action fails because it expects at least one file changed that is not `LinkDef.h`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10126
https://github.com/root-project/root/pull/10127:0,availability,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:0,performance,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:0,safety,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10127:0,usability,Error,Errors,0,Errors are unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10127
https://github.com/root-project/root/pull/10129:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/pull/10129:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10129
https://github.com/root-project/root/issues/10131:93,availability,consist,consistent,93,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:441,deployability,infrastructur,infrastructure,441,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:565,deployability,infrastructur,infrastructure,565,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:656,deployability,version,version,656,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:671,deployability,version,versioned,671,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:4,energy efficiency,core,core,4,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:625,integrability,schema,schema,625,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:656,integrability,version,version,656,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:671,integrability,version,versioned,671,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:656,modifiability,version,version,656,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:671,modifiability,version,versioned,671,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:353,security,sign,signed,353,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/issues/10131:93,usability,consist,consistent,93,"The core issue is that `TDataMember::Init` and `TStreamerInfo::GenerateInfoForPair` were not consistent. `TDataMember::Init `was ignoring the underlying type of an enum while the newer `TStreamerInfo::GenerateInfoForPair` was taking it in consideration. In the reported case, it meant that some of the pair's `TStreamerInfo` recorded the type as being 'signed int` while other was recording the type as `unsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the `TStreamerInfo` for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10131
https://github.com/root-project/root/pull/10132:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/pull/10132:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10132
https://github.com/root-project/root/issues/10139:51,usability,feedback,feedback,51,Thank you @petruccs for opening this issue and the feedback. You are right that one needs to use`GetPaintedGraph` for this. I will improve the documentation and add a tutorial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10139:143,usability,document,documentation,143,Thank you @petruccs for opening this issue and the feedback. You are right that one needs to use`GetPaintedGraph` for this. I will improve the documentation and add a tutorial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10139
https://github.com/root-project/root/issues/10140:37,integrability,transform,transformed,37,`.class` is fine. Should `.Class` be transformed in `.class` ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:37,interoperability,transform,transformed,37,`.class` is fine. Should `.Class` be transformed in `.class` ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:39,integrability,transform,transformed,39,"> `.class` is fine. Should `.Class` be transformed in `.class` ? .Class is the 'extra verbose' option of .class, thus it is printing more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:39,interoperability,transform,transformed,39,"> `.class` is fine. Should `.Class` be transformed in `.class` ? .Class is the 'extra verbose' option of .class, thus it is printing more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3370,availability,error,error,3370,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3777,availability,error,error,3777,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3233,energy efficiency,core,core,3233,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3409,energy efficiency,core,core,3409,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3601,energy efficiency,core,core,3601,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3817,energy efficiency,core,core,3817,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3938,energy efficiency,core,core,3938,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3370,performance,error,error,3370,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3777,performance,error,error,3777,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3370,safety,error,error,3370,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3777,safety,error,error,3777,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3370,usability,error,error,3370,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:3777,usability,error,error,3777,"bCling.so. #65385 0x00007ffff0ae2372 in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65386 0x00007ffff0ae225b in cling::(anonymous namespace)::ClassPrinter::ProcessDecl(clang::DeclContext::decl_iterator) const (). from lib/libCling.so. #65387 0x00007ffff0ae287b in cling::DisplayClasses(llvm::raw_ostream&, cling::Interpreter const*, bool) () from lib/libCling.so. #65388 0x00007ffff0ad4d6e in cling::MetaSema::actOnClassCommand(llvm::StringRef) const () from lib/libCling.so. #65389 0x00007ffff0ae7340 in cling::MetaParser::isClassCommand() () from lib/libCling.so. #65390 0x00007ffff0ae77db in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from lib/libCling.so. #65391 0x00007ffff0ad07d0 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (). from lib/libCling.so. #65392 0x00007ffff081294d in HandleInterpreterException (metaProcessor=0x555556096de0, input_line=0x7fffffffb239 "".Class"", compRes=@0x7fffffffb1bc: cling::Interpreter::kSuccess, . result=0x7fffffffb200) at /opt/root_src/core/metacling/src/TCling.cxx:2448. #65393 0x00007ffff08135a3 in TCling::ProcessLine (this=0x5555557ec5c0, line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0) at /opt/root_src/core/metacling/src/TCling.cxx:2608. #65394 0x00007ffff74fb696 in TApplication::ProcessLine (this=0x5555557d5950, line=0x7fffffffb810 "".Class"", sync=false, err=0x7fffffffb7b0) at /opt/root_src/core/base/src/TApplication.cxx:1539. #65395 0x00007ffff7bb7515 in TRint::ProcessLineNr (this=0x5555557d5950, filestem=0x7ffff7bc7eba ""ROOT_cli_"", line=0x7fffffffb810 "".Class"", error=0x7fffffffb7b0). at /opt/root_src/core/rint/src/TRint.cxx:818. #65396 0x00007ffff7bb5cc0 in TRint::Run (this=0x5555557d5950, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #65397 0x000055555555512c in main (argc=1, argv=0x7fffffffd988) at /opt/root_src/main/src/rmain.cxx:84. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:978,deployability,stack,stack,978,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1535,deployability,Stack,StackTrace,1535,"-------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/root/lib/libCling.so. #12 0x00007f37ac264259 in clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5108,deployability,stack,stack,5108,"/tmp/root/lib/libCling.so. #23 0x00007f37a93dbd6a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /tmp/root/lib/libCling.so. #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5437,deployability,stack,stack,5437,"/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/root/lib/libCling.so. #12 0x00007f37ac264259 in clang::ASTContext:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1297,energy efficiency,optim,optimized,1297," Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::Field",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1447,energy efficiency,optim,optimized,1447,"?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5371,integrability,sub,submit,5371,"9. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:779,modifiability,variab,variables,779,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5211,modifiability,variab,variable,5211,"orCode*) () from /tmp/root/lib/libCling.so. #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1297,performance,optimiz,optimized,1297," Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::Field",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1447,performance,optimiz,optimized,1447,"?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:22,reliability,doe,does,22,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:230,security,Team,Team,230,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:1694,security,sign,signal,1694,"d::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/root/lib/libCling.so. #12 0x00007f37ac264259 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /tmp/root/lib/libCling.so. #13 0x00007f37a95a49ca in cling::(anonymous namespace)::Cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:984,testability,trace,trace,984,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5114,testability,trace,trace,5114,"oot/lib/libCling.so. #23 0x00007f37a93dbd6a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /tmp/root/lib/libCling.so. #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5443,testability,trace,trace,5443,"lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/root/lib/libCling.so. #12 0x00007f37ac264259 in clang::ASTContext::getAS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:444,usability,help,help,444,"Hi @Axel-Naumann this does not seem fixed yet on Ubuntu 22 at least, I tried with:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.29/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 24 2022, 01:58:00 |. | From remotes/origin/master@v6-29-01-47-g37ac665419 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. typed `.Class`. and I got:. ```. ===========================================================================. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffd3cfe1cd8, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29. #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29. #5 <signal handler called>. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5034,usability,hint,hint,5034,"har const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /tmp/root/lib/libCling.so. #23 0x00007f37a93dbd6a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /tmp/root/lib/libCling.so. #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5248,usability,help,help,5248,"ling.so. #24 0x00007f37af2f92e0 in TRint::ProcessLineNr(char const*, char const*, int*) () from /tmp/root/lib/libRint.so.6.29. #25 0x00007f37af2f97dc in TRint::HandleTermInput() () from /tmp/root/lib/libRint.so.6.29. #26 0x00007f37af030abc in TUnixSystem::CheckDescriptors() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:5519,usability,help,help,5519,"s() () from /tmp/root/lib/libCore.so.6.29. #27 0x00007f37af032888 in TUnixSystem::DispatchOneEvent(bool) () from /tmp/root/lib/libCore.so.6.29. #28 0x00007f37aef3aaa7 in TSystem::Run() () from /tmp/root/lib/libCore.so.6.29. #29 0x00007f37aeed0ec7 in TApplication::Run(bool) () from /tmp/root/lib/libCore.so.6.29. #30 0x00007f37af2fb39b in TRint::Run(bool) () from /tmp/root/lib/libRint.so.6.29. #31 0x000055669a43b2f3 in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so. #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so. #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so. #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so. #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so. #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutFields(clang::RecordDecl const*) () from /tmp/root/lib/libCling.so. #12 0x00007f37ac264259 in clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const () from /tmp/root/lib/libClin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:144,usability,command,command,144,"@hahnjo Could you check if by chance, with llvm16 (https://github.com/root-project/root/pull/13273), this crash disappears? . If yes, maybe the command `.Class` could become part of `roottest`. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:81,deployability,upgrad,upgrade,81,`.Class` without arguments still crashes with current `master` after merging the upgrade to LLVM 16. `.Class TTree` worked for me both before and after.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:46,energy efficiency,current,current,46,`.Class` without arguments still crashes with current `master` after merging the upgrade to LLVM 16. `.Class TTree` worked for me both before and after.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:81,modifiability,upgrad,upgrade,81,`.Class` without arguments still crashes with current `master` after merging the upgrade to LLVM 16. `.Class TTree` worked for me both before and after.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:156,deployability,fail,failed,156,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:206,deployability,depend,dependent,206,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:375,energy efficiency,power,power,375,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:206,integrability,depend,dependent,206,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:206,modifiability,depend,dependent,206,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:323,performance,memor,memorialised,323,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:156,reliability,fail,failed,156,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:206,safety,depend,dependent,206,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:346,safety,test,test,346,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:146,testability,Assert,Assertion,146,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:206,testability,depend,dependent,206,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:346,testability,test,test,346,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:323,usability,memor,memorialised,323,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:. `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:32,deployability,fail,fail,32,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:259,deployability,releas,release,259,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:518,deployability,build,build,518,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:524,deployability,build,build-root-Desktop-Debug,524,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:757,deployability,depend,dependent,757,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:780,deployability,fail,failed,780,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:102,integrability,messag,message,102,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:757,integrability,depend,dependent,757,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:102,interoperability,messag,message,102,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:435,modifiability,variab,variables,435,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:757,modifiability,depend,dependent,757,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:24,reliability,doe,doesn,24,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:32,reliability,fail,fail,32,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:60,reliability,Doe,Doesn,60,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:780,reliability,fail,failed,780,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:757,safety,depend,dependent,757,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:705,testability,Assert,Assertion,705,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:757,testability,depend,dependent,757,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:72,usability,command,command,72,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:513,usability,user,user,513,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:579,usability,tool,tools,579,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message? On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:. ```. struct std::_Head_base<_Idx, _Head, true>. SIZE: (NA) FILE: tuple LINE: -1. List of member variables: -------------------------------------------------. root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:297,interoperability,specif,specified,297,"@hahnjo maybe this could be related to this comment:. https://github.com/llvm/llvm-project/blob/main/clang/lib/AST/ASTContext.cpp#L1877. https://github.com/root-project/root/blob/master/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp#L1950. ```. /// getTypeInfoImpl - Return the size of the specified type, in bits. This. /// method does not work on incomplete types. ```. `.Class std::_Head_base<1, int, true>` does not crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:339,reliability,doe,does,339,"@hahnjo maybe this could be related to this comment:. https://github.com/llvm/llvm-project/blob/main/clang/lib/AST/ASTContext.cpp#L1877. https://github.com/root-project/root/blob/master/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp#L1950. ```. /// getTypeInfoImpl - Return the size of the specified type, in bits. This. /// method does not work on incomplete types. ```. `.Class std::_Head_base<1, int, true>` does not crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/issues/10140:418,reliability,doe,does,418,"@hahnjo maybe this could be related to this comment:. https://github.com/llvm/llvm-project/blob/main/clang/lib/AST/ASTContext.cpp#L1877. https://github.com/root-project/root/blob/master/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp#L1950. ```. /// getTypeInfoImpl - Return the size of the specified type, in bits. This. /// method does not work on incomplete types. ```. `.Class std::_Head_base<1, int, true>` does not crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10140
https://github.com/root-project/root/pull/10141:160,availability,error,errors,160,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:215,deployability,version,versions,215,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:282,energy efficiency,current,currently,282,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:339,energy efficiency,green,green,339,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:34,integrability,messag,message,34,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:215,integrability,version,versions,215,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:34,interoperability,messag,message,34,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:215,modifiability,version,versions,215,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:160,performance,error,errors,160,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:160,safety,error,errors,160,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:4,security,trust,trust,4,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:98,usability,help,help,98,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10141:160,usability,error,errors,160,"> I trust you 😄. > . > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10141
https://github.com/root-project/root/pull/10145:23,deployability,updat,updates,23,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:39,deployability,manag,managed,39,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:39,energy efficiency,manag,managed,39,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:61,interoperability,format,format,61,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:23,safety,updat,updates,23,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:39,safety,manag,managed,39,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/pull/10145:23,security,updat,updates,23,Sorry for the multiple updates - I now managed to make clang-format happy...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10145
https://github.com/root-project/root/issues/10146:386,performance,I/O,I/O,386,"Thank you @ellert for reporting this issue. . Is the test TestCustomModelsFromONNX having the same issue ? . You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:53,safety,test,test,53,"Thank you @ellert for reporting this issue. . Is the test TestCustomModelsFromONNX having the same issue ? . You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:58,safety,Test,TestCustomModelsFromONNX,58,"Thank you @ellert for reporting this issue. . Is the test TestCustomModelsFromONNX having the same issue ? . You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:53,testability,test,test,53,"Thank you @ellert for reporting this issue. . Is the test TestCustomModelsFromONNX having the same issue ? . You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:58,testability,Test,TestCustomModelsFromONNX,58,"Thank you @ellert for reporting this issue. . Is the test TestCustomModelsFromONNX having the same issue ? . You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:55,deployability,build,build,55,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:681,deployability,build,build,681,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:746,deployability,build,build,746,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:164,reliability,doe,does,164,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:30,safety,compl,complete,30,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:50,safety,test,test,50,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:30,security,compl,complete,30,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:50,testability,test,test,50,"Hi. Here is a tar file of the complete tmva/sofie/test build directory, which includes the generated .dat, .root and .hxx files. Most of them look OK, so the issue does not affect all of them. However, all files beginning with Linear are bad, and that applies to both .dat and .hxx files. (I didn't investigate whether the .root files are also bad, but they are included in the tar file too.). * Linear_16_FromONNX.dat. * Linear_16_FromROOT.hxx. * Linear_32_FromONNX.dat. * Linear_32_FromROOT.hxx. * Linear_64_FromONNX.dat. * Linear_64_FromROOT.hxx. * LinearWithSelu_FromONNX.dat. * LinearWithSelu_FromROOT.hxx. * LinearWithSigmoid_FromONNX.dat. * LinearWithSigmoid_FromROOT.hxx. [build.tar.gz](https://github.com/root-project/root/files/8322284/build.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10146:13,deployability,contain,containing,13,"Although not containing any nan's, some of the others not starting with Linear are also not OK when comparing with the same files created on x86_64. E.g.:. On x86_64:. $ cat ConvWithStridesPadding_FromONNX.dat . tensor_W 9. 1 1 1 1 1 1 1 1 1. On s390x:. $ cat ConvWithStridesPadding_FromONNX.dat. tensor_W 9. 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41 4.60060299e-41. And it is really byteswapped:. ```{cpp}. #include <cstring>. #include <iostream>. #include <iomanip>. int main() {. float f;. int i;. f = 1.;. std::cout << f << std::endl;. std::memcpy(&i, &f, 4);. std::cout << std::hex << i << std::endl;. i = ((i & 0xff000000) >> 24) +. ((i & 0x00ff0000) >> 8) +. ((i & 0x0000ff00) << 8) +. ((i & 0x000000ff) << 24);. std::cout << std::hex << i << std::endl;. std::memcpy(&f, &i, 4);. std::cout << f << std::endl;. }. ```. Gives:. 1. 3f800000. 803f. 4.6006e-41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10146
https://github.com/root-project/root/issues/10147:145,integrability,sub,sub-directories,145,"> gSystem->SetBuildDir(""/tmp/"");. > in my rootlogon.C. > But this does not solve the overwrite problem. Doesn't this case store the libraries in sub-directories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:66,reliability,doe,does,66,"> gSystem->SetBuildDir(""/tmp/"");. > in my rootlogon.C. > But this does not solve the overwrite problem. Doesn't this case store the libraries in sub-directories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:104,reliability,Doe,Doesn,104,"> gSystem->SetBuildDir(""/tmp/"");. > in my rootlogon.C. > But this does not solve the overwrite problem. Doesn't this case store the libraries in sub-directories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:18,interoperability,specif,specify,18,Is there a way to specify this in the .rootrc or only in the rootlogon ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:35,deployability,Build,BuildDir,35,"Yes,. ```. config/rootrc.in:#ACLiC.BuildDir: /where/I/would/like/my/compiled/scripts. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:63,deployability,version,version,63,"@couet as the PR is now merged, can you add here in which ROOT version ? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:63,integrability,version,version,63,"@couet as the PR is now merged, can you add here in which ROOT version ? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10147:63,modifiability,version,version,63,"@couet as the PR is now merged, can you add here in which ROOT version ? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10147
https://github.com/root-project/root/issues/10148:62,energy efficiency,profil,profiles,62,"Independently but somewhat related, we may want to store past profiles for branch accesses etc; that's best done inside a dedicated config folder as you suggest here. I.e.: 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:62,performance,profil,profiles,62,"Independently but somewhat related, we may want to store past profiles for branch accesses etc; that's best done inside a dedicated config folder as you suggest here. I.e.: 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10148:82,security,access,accesses,82,"Independently but somewhat related, we may want to store past profiles for branch accesses etc; that's best done inside a dedicated config folder as you suggest here. I.e.: 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10148
https://github.com/root-project/root/issues/10155:21,deployability,version,version,21,"I have compiled Root version 6.26.06 without problems on the same system, so this bug appears to be solved. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:21,integrability,version,version,21,"I have compiled Root version 6.26.06 without problems on the same system, so this bug appears to be solved. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10155:21,modifiability,version,version,21,"I have compiled Root version 6.26.06 without problems on the same system, so this bug appears to be solved. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10155
https://github.com/root-project/root/issues/10157:56,usability,support,support,56,"Yes, indeed the pythonization of those methods needs to support `[]`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10157
https://github.com/root-project/root/issues/10162:130,interoperability,share,shared,130,"As far as I can see, just from looking at the code, this is the fallback code path to return the binary's location if there is no shared library with that `triggerFunc`:. https://github.com/root-project/root/blob/a94fcb370110eb848010ce5853906d0baf28ac52/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L1353-L1379. Do you have a standalone example where this happens that does not involve the entire Celeritas code base?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:390,reliability,doe,does,390,"As far as I can see, just from looking at the code, this is the fallback code path to return the binary's location if there is no shared library with that `triggerFunc`:. https://github.com/root-project/root/blob/a94fcb370110eb848010ce5853906d0baf28ac52/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L1353-L1379. Do you have a standalone example where this happens that does not involve the entire Celeritas code base?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:352,availability,Error,Error,352,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:235,deployability,build,build,235,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:207,energy efficiency,load,load,207,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:227,energy efficiency,Power,PowerPC,227,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:337,energy efficiency,Power,PowerPC,337,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:207,performance,load,load,207,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:352,performance,Error,Error,352,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:26,reliability,doe,doesn,26,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:352,safety,Error,Error,352,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:352,usability,Error,Error,352,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7. 2. Both of them load just fine in a PowerPC build of ROOT. 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC). ```. Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60). ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:23,reliability,doe,doesn,23,"> libceleritas_root.so doesn't exist anymore, I. yes, indeed, to explore this issue, one needs to use the previous commit. (the new code is to work-around/avoid this blocking issue)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:155,safety,avoid,avoid,155,"> libceleritas_root.so doesn't exist anymore, I. yes, indeed, to explore this issue, one needs to use the previous commit. (the new code is to work-around/avoid this blocking issue)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:224,deployability,build,build,224,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:367,deployability,build,build,367,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:196,energy efficiency,load,load,196,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:216,energy efficiency,Power,PowerPC,216,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:339,energy efficiency,load,load,339,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:359,energy efficiency,Power,PowerPC,359,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:456,energy efficiency,Power,PowerPC,456,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:196,performance,load,load,196,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:339,performance,load,load,339,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:59,reliability,doe,does,59,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base? No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else? > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:176,availability,error,error,176,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:526,availability,error,errors,526,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:249,deployability,build,build,249,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:583,deployability,build,build,583,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:851,deployability,build,building,851,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:221,energy efficiency,load,load,221,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:241,energy efficiency,Power,PowerPC,241,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:369,energy efficiency,current,current,369,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:555,energy efficiency,load,load,555,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:575,energy efficiency,Power,PowerPC,575,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:678,energy efficiency,Power,PowerPC,678,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:412,modifiability,refact,refactoring,412,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:176,performance,error,error,176,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:221,performance,load,load,221,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:412,performance,refactor,refactoring,412,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:526,performance,error,errors,526,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:555,performance,load,load,555,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:176,safety,error,error,176,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:357,safety,test,tested,357,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:526,safety,error,errors,526,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:357,testability,test,tested,357,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:176,usability,error,error,176,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:526,usability,error,errors,526,"> > As far as I can see, just from looking at the code,. > . > I assume it should be in the generated dictionary and not in the code, isn't it? My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT. > . > Do you mean both the `older` libceleritas_root.so and the new one or something else? I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > . > > Both of them load just fine in a PowerPC build of ROOT. > . > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:33,deployability,build,build,33,Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? @sethrj Same questions :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:52,energy efficiency,Power,PowerPC,52,Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? @sethrj Same questions :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:67,energy efficiency,Power,PowerPC,67,Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? @sethrj Same questions :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:35,deployability,build,build,35,> Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? `cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON` on (the Docker image of) AlmaLinux 8. The host is a PowerPC 8+ (Minsky) running CentOS 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:145,deployability,Releas,Release,145,> Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? `cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON` on (the Docker image of) AlmaLinux 8. The host is a PowerPC 8+ (Minsky) running CentOS 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:54,energy efficiency,Power,PowerPC,54,> Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? `cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON` on (the Docker image of) AlmaLinux 8. The host is a PowerPC 8+ (Minsky) running CentOS 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:69,energy efficiency,Power,PowerPC,69,> Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? `cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON` on (the Docker image of) AlmaLinux 8. The host is a PowerPC 8+ (Minsky) running CentOS 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:233,energy efficiency,Power,PowerPC,233,> Which cmake flags did you use to build ROOT on that PowerPC. Which PowerPC generation is it? `cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON` on (the Docker image of) AlmaLinux 8. The host is a PowerPC 8+ (Minsky) running CentOS 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:94,deployability,configurat,configuration,94,@hahnjo Thanks for looking into this. @pcanal Summit is a Power9: `linux-rhel8-power9le`. The configuration args are:. ```. '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2773,deployability,build,build,2773,n_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-Dminuit2:BOOL=ON' '-Dmlp:BOOL=OFF' '-Dmonalisa:BOOL=OFF' '-Dmysql:BOOL=OFF' '-Dodbc:BOOL=OFF' '-Dopengl:BOOL=OFF' '-Doracle:BOOL=OFF' '-Dpgsql:BOOL=OFF' '-Dpythia6:BOOL=OFF' '-Dpythia8:BOOL=OFF' '-Dqt:BOOL=OFF' '-Dqtgsi:BOOL=OFF' '-Dr:BOOL=OFF' '-Drfio:BOOL=OFF' '-Droofit:BOOL=ON' '-Droot7:BOOL=OFF' '-Druby:BOOL=OFF' '-Dsapdb:BOOL=OFF' '-Dshadowpw:BOOL=OFF' '-Dspectrum:BOOL=OFF' '-Dsqlite:BOOL=OFF' '-Dsrp:BOOL=OFF' '-Dssl:BOOL=OFF' '-Dtable:BOOL=OFF' '-Dtbb:BOOL=OFF' '-Dtcmalloc:BOOL=OFF' '-Dtmva:BOOL=OFF' '-Dunuran:BOOL=ON' '-Dvc:BOOL=OFF' '-Dvdt:BOOL=ON' '-Dveccore:BOOL=OFF' '-Dvmc:BOOL=OFF' '-Dwebui:BOOL=OFF' '-Dx11:BOOL=OFF' '-Dxft:BOOL=OFF' '-Dxml:BOOL=ON' '-Dxrootd:BOOL=OFF' '-Dpyroot:BOOL=ON' '-DCMAKE_CXX_STANDARD:STRING=14' . ```. I'm going to try another build with GCC 11 and C++17.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:94,integrability,configur,configuration,94,@hahnjo Thanks for looking into this. @pcanal Summit is a Power9: `linux-rhel8-power9le`. The configuration args are:. ```. '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:94,modifiability,configur,configuration,94,@hahnjo Thanks for looking into this. @pcanal Summit is a Power9: `linux-rhel8-power9le`. The configuration args are:. ```. '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:94,security,configur,configuration,94,@hahnjo Thanks for looking into this. @pcanal Summit is a Power9: `linux-rhel8-power9le`. The configuration args are:. ```. '-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo' '-DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=OFF' '-DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=OFF' '-Dcxxmodules:BOOL=OFF' '-Dexceptions:BOOL=ON' '-Dexplicitlink:BOOL=ON' '-Dfail-on-missing:BOOL=ON' '-Dfortran:BOOL=OFF' '-Dgminimal:BOOL=ON' '-Dgnuinstall:BOOL=OFF' '-Dlibcxx:BOOL=OFF' '-Dpch:BOOL=ON' '-Droottest:BOOL=OFF' '-Drpath:BOOL=ON' '-Druntime_cxxmodules:BOOL=OFF' '-Dshared:BOOL=ON' '-Dsoversion:BOOL=ON' '-Dtesting:BOOL=OFF' '-Dthread:BOOL=ON' '-DCLING_CXX_PATH:STRING=g++' '-Dbuiltin_afterimage:BOOL=OFF' '-Dbuiltin_cfitsio:BOOL=OFF' '-Dbuiltin_davix:BOOL=OFF' '-Dbuiltin_fftw3:BOOL=OFF' '-Dbuiltin_freetype:BOOL=OFF' '-Dbuiltin_ftgl:BOOL=OFF' '-Dbuiltin_gl2ps:BOOL=OFF' '-Dbuiltin_glew:BOOL=OFF' '-Dbuiltin_gsl:BOOL=OFF' '-Dbuiltin_llvm:BOOL=ON' '-Dbuiltin_lz4:BOOL=OFF' '-Dbuiltin_lzma:BOOL=OFF' '-Dbuiltin_nlohmannjson:BOOL=OFF' '-Dbuiltin_openssl:BOOL=OFF' '-Dbuiltin_pcre:BOOL=OFF' '-Dbuiltin_tbb:BOOL=OFF' '-Dbuiltin_unuran:BOOL=OFF' '-Dbuiltin_vc:BOOL=OFF' '-Dbuiltin_vdt:BOOL=OFF' '-Dbuiltin_veccore:BOOL=OFF' '-Dbuiltin_xrootd:BOOL=OFF' '-Dbuiltin_xxhash:BOOL=OFF' '-Dbuiltin_zlib:BOOL=OFF' '-Dafdsmrgd:BOOL=OFF' '-Dafs:BOOL=OFF' '-Dalien:BOOL=OFF' '-Darrow:BOOL=OFF' '-Dasimage:BOOL=ON' '-Dastiff:BOOL=ON' '-Dbonjour:BOOL=OFF' '-Dcastor:BOOL=OFF' '-Dccache:BOOL=OFF' '-Dchirp:BOOL=OFF' '-Dcling:BOOL=ON' '-Dcocoa:BOOL=OFF' '-Ddataframe:BOOL=ON' '-Ddavix:BOOL=OFF' '-Ddcache:BOOL=OFF' '-Dfftw3:BOOL=OFF' '-Dfitsio:BOOL=OFF' '-Dftgl:BOOL=OFF' '-Dgdml:BOOL=ON' '-Dgenvector:BOOL=OFF' '-Dgeocad:BOOL=OFF' '-Dgfal:BOOL=OFF' '-Dgl2ps:BOOL=OFF' '-Dglite:BOOL=OFF' '-Dglobus:BOOL=OFF' '-Dgsl_shared:BOOL=OFF' '-Dgviz:BOOL=OFF' '-Dhdfs:BOOL=OFF' '-Dhttp:BOOL=OFF' '-Dimt:BOOL=OFF' '-Djemalloc:BOOL=OFF' '-Dkrb5:BOOL=OFF' '-Dldap:BOOL=OFF' '-Dmathmore:BOOL=OFF' '-Dmemstat:BOOL=OFF' '-Dminimal:BOOL=OFF' '-Dminuit:BOOL=ON' '-D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:31,deployability,modul,modules,31,What does that feature do? C++ modules are a new feature in C++20... or is this something different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:31,modifiability,modul,modules,31,What does that feature do? C++ modules are a new feature in C++20... or is this something different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:5,reliability,doe,does,5,What does that feature do? C++ modules are a new feature in C++20... or is this something different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:31,safety,modul,modules,31,What does that feature do? C++ modules are a new feature in C++20... or is this something different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3,availability,Error,Error,3,"> `Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60)`. FWIW this is happening since commit b124f17f7a8da81415acd4bdb47a0fd6d4eef795 @pcanal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3,performance,Error,Error,3,"> `Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60)`. FWIW this is happening since commit b124f17f7a8da81415acd4bdb47a0fd6d4eef795 @pcanal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3,safety,Error,Error,3,"> `Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60)`. FWIW this is happening since commit b124f17f7a8da81415acd4bdb47a0fd6d4eef795 @pcanal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3,usability,Error,Error,3,"> `Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60)`. FWIW this is happening since commit b124f17f7a8da81415acd4bdb47a0fd6d4eef795 @pcanal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:16,availability,sli,slightly,16,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:221,deployability,modul,module,221,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,deployability,modul,module,281,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:244,integrability,event,eventually,244,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:221,modifiability,modul,module,221,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,modifiability,modul,module,281,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:190,performance,time,time,190,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:16,reliability,sli,slightly,16,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:221,safety,modul,module,221,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:281,safety,modul,module,281,"It is something slightly different. For the purpose of the C++ runtime introspection implemented by Cling, `runtime_cxxmodules=ON` switches from reading and parsing the header files are run-time to using the pre-compiled module (the technology eventually used to implement the C++ module of C++20) to provide a pre-parsed binary-form of those headers. `runtime_cxxmodules=OFF` is essentially deprecated/on-it-way-out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:166,usability,progress,progress,166,> FWIW this is happening since commit https://github.com/root-project/root/commit/b124f17f7a8da81415acd4bdb47a0fd6d4eef795 @pcanal. Grr :) ... This is indeed work in progress :( .... I'll have to re-try this as soon as I fix the other issues ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:87,energy efficiency,Power,PowerPC,87,"I cannot reproduce the problem with `runtime_cxxmodules=OFF` either (tested on x86 and PowerPC), so it has to be something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:69,safety,test,tested,69,"I cannot reproduce the problem with `runtime_cxxmodules=OFF` either (tested on x86 and PowerPC), so it has to be something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:69,testability,test,tested,69,"I cannot reproduce the problem with `runtime_cxxmodules=OFF` either (tested on x86 and PowerPC), so it has to be something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:72,deployability,stack,stack,72,"I noticed `PATH_MAX` in the fallback code, and while reading the linked stack overflow post:. > Do not use PATH_MAX. This stopped working 30 years ago, always use malloc. That could be a red herring since the celeritas exe's path is not longer then the cling exe's path...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:122,usability,stop,stopped,122,"I noticed `PATH_MAX` in the fallback code, and while reading the linked stack overflow post:. > Do not use PATH_MAX. This stopped working 30 years ago, always use malloc. That could be a red herring since the celeritas exe's path is not longer then the cling exe's path...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:5,deployability,Stack,StackOverflow,5,"Said StackOverflow post gives no reasoning why `PATH_MAX` shouldn't be used anymore. From my experience it works in practice, even if you can potentially craft examples where it breaks in edge cases (but then others like `bash` will equally break). In any case, I don't think that's related to the actual problem - if things work the fallback path is never to be used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:116,reliability,pra,practice,116,"Said StackOverflow post gives no reasoning why `PATH_MAX` shouldn't be used anymore. From my experience it works in practice, even if you can potentially craft examples where it breaks in edge cases (but then others like `bash` will equally break). In any case, I don't think that's related to the actual problem - if things work the fallback path is never to be used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:93,usability,experien,experience,93,"Said StackOverflow post gives no reasoning why `PATH_MAX` shouldn't be used anymore. From my experience it works in practice, even if you can potentially craft examples where it breaks in edge cases (but then others like `bash` will equally break). In any case, I don't think that's related to the actual problem - if things work the fallback path is never to be used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:282,availability,error,error,282,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:145,energy efficiency,load,loaded,145,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:145,performance,load,loaded,145,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:282,performance,error,error,282,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:155,safety,test,tested,155,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:282,safety,error,error,282,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:155,testability,test,tested,155,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:282,usability,error,error,282,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:65,deployability,configurat,configuration,65,@seth Could you retry with the following two changes to the ROOT configuration:. ```. 12c12. < '-Dpch:BOOL=ON'. ---. > '-Dpch:BOOL=OFF'. 15c15. < '-Druntime_cxxmodules:BOOL=OFF'. ---. > '-Druntime_cxxmodules:BOOL=ON'. ```. because the new option are the new defaults and may affect the code path we saw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:65,integrability,configur,configuration,65,@seth Could you retry with the following two changes to the ROOT configuration:. ```. 12c12. < '-Dpch:BOOL=ON'. ---. > '-Dpch:BOOL=OFF'. 15c15. < '-Druntime_cxxmodules:BOOL=OFF'. ---. > '-Druntime_cxxmodules:BOOL=ON'. ```. because the new option are the new defaults and may affect the code path we saw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:65,modifiability,configur,configuration,65,@seth Could you retry with the following two changes to the ROOT configuration:. ```. 12c12. < '-Dpch:BOOL=ON'. ---. > '-Dpch:BOOL=OFF'. 15c15. < '-Druntime_cxxmodules:BOOL=OFF'. ---. > '-Druntime_cxxmodules:BOOL=ON'. ```. because the new option are the new defaults and may affect the code path we saw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:65,security,configur,configuration,65,@seth Could you retry with the following two changes to the ROOT configuration:. ```. 12c12. < '-Dpch:BOOL=ON'. ---. > '-Dpch:BOOL=OFF'. 15c15. < '-Druntime_cxxmodules:BOOL=OFF'. ---. > '-Druntime_cxxmodules:BOOL=ON'. ```. because the new option are the new defaults and may affect the code path we saw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:44,deployability,modul,modules,44,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:254,deployability,fail,fail-on-missing,254,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:118,energy efficiency,current,current,118,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:552,interoperability,share,shared,552,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:44,modifiability,modul,modules,44,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:254,reliability,fail,fail-on-missing,254,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:44,safety,modul,modules,44,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:194,safety,except,exceptions,194,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:605,safety,test,testing,605,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:605,testability,test,testing,605,"OK, I'll give that a shot—perhaps adding a ""modules"" variant for root 6.26+ that turns cxxmodules on and pch off? The current additional options are:. ```. define('cxxmodules', False),. define('exceptions', True),. define('explicitlink', True),. define('fail-on-missing', True),. define_from_variant('fortran'), # false. define_from_variant('gminimal'), # true. define('gnuinstall', False),. define('libcxx', False),. define('pch', True),. define('roottest', False),. define_from_variant('rpath'), # true. define('runtime_cxxmodules', False),. define('shared', True),. define('soversion', True),. define('testing', self.run_tests), # false. define_from_variant('thread', 'threads'),. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:301,deployability,modul,modules,301,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:421,deployability,modul,modules,421,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,deployability,version,version,457,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,integrability,version,version,457,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:301,modifiability,modul,modules,301,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:421,modifiability,modul,modules,421,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:457,modifiability,version,version,457,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:342,performance,perform,performance,342,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:301,safety,modul,modules,301,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:421,safety,modul,modules,421,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:289,usability,support,support,289,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:342,usability,perform,performance,342,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:482,usability,custom,customized,482,"note there is both `cxxmodules` and `runtime_cxxmodules`, you should try:. ```. define('cxxmodules', False), . define('pch', False),. define('runtime_cxxmodules', True),. ``` . cxxmodule: affects the way ROOT sources are compiled, should be a NFC assuming the compiler being used properly support C++ modules. runtime_cxxmodules: improve the performance and functionality of ROOT dictionary by *internally* using the C++ modules as implemented by the clang version internal to (and customized for) ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:214,availability,error,error,214,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:396,deployability,depend,dependent,396,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:81,energy efficiency,load,loaded,81,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:370,energy efficiency,load,loading,370,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:396,integrability,depend,dependent,396,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:396,modifiability,depend,dependent,396,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:81,performance,load,loaded,81,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:214,performance,error,error,214,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:370,performance,load,loading,370,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:430,reliability,doe,does,430,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:91,safety,test,tested,91,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:214,safety,error,error,214,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:358,safety,test,tested,358,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:396,safety,depend,dependent,396,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:91,testability,test,tested,91,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:358,testability,test,tested,358,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:396,testability,depend,dependent,396,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:214,usability,error,error,214,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear? Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2915,availability,Error,Error,2915,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3001,availability,Error,Error,3001,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3091,availability,Error,Error,3091,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3179,availability,Error,Error,3179,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3264,availability,Error,Error,3264,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3349,availability,Error,Error,3349,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3435,availability,Error,Error,3435,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3529,availability,Error,Error,3529,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3625,availability,avail,available,3625,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:52,deployability,updat,update,52,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2388,deployability,build,build,2388,"Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Diction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2467,deployability,build,build,2467,"BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3547,energy efficiency,Load,LoadClassInfo,3547,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:101,integrability,configur,configure,101,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3678,integrability,rout,routine,3678,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3708,integrability,messag,messages,3708,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2412,interoperability,share,shared,2412,"ocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3708,interoperability,messag,messages,3708,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:101,modifiability,configur,configure,101,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:32,performance,time,time,32,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2473,performance,time,time,2473,"OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dicti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2915,performance,Error,Error,2915,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3001,performance,Error,Error,3001,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3091,performance,Error,Error,3091,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3179,performance,Error,Error,3179,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3264,performance,Error,Error,3264,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3349,performance,Error,Error,3349,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3435,performance,Error,Error,3435,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3529,performance,Error,Error,3529,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3547,performance,Load,LoadClassInfo,3547,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3625,reliability,availab,available,3625,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:52,safety,updat,update,52,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2441,safety,except,except,2441," -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2811,safety,test,test,2811,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2915,safety,Error,Error,2915,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3001,safety,Error,Error,3001,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3091,safety,Error,Error,3091,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3179,safety,Error,Error,3179,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3264,safety,Error,Error,3264,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3349,safety,Error,Error,3349,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3435,safety,Error,Error,3435,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3529,safety,Error,Error,3529,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3625,safety,avail,available,3625,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:52,security,updat,update,52,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:101,security,configur,configure,101,@pcanal Sorry I didn't make the time until today to update the spack script and reinstall ROOT. With configure arguments:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3625,security,availab,available,3625,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2811,testability,test,test,2811,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2626,usability,support,support,2626,"OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is avail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2691,usability,support,support,2691,"inuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2891,usability,support,support,2891,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2915,usability,Error,Error,2915,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3001,usability,Error,Error,3001,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3091,usability,Error,Error,3091,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3179,usability,Error,Error,3179,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3264,usability,Error,Error,3264,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3349,usability,Error,Error,3349,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3435,usability,Error,Error,3435,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3529,usability,Error,Error,3529,"F -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:. ```. [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. {and a thousand more messages like the last one}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2894,availability,Error,Error,2894,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2980,availability,Error,Error,2980,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3070,availability,Error,Error,3070,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3158,availability,Error,Error,3158,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3243,availability,Error,Error,3243,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3328,availability,Error,Error,3328,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3414,availability,Error,Error,3414,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3508,availability,Error,Error,3508,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3604,availability,avail,available,3604,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:75,deployability,Build,Building,75,"Sorry @pcanal , I didn't get around to trying your suggestion until today. Building with configuration args:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:89,deployability,configurat,configuration,89,"Sorry @pcanal , I didn't get around to trying your suggestion until today. Building with configuration args:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2401,deployability,build,building,2401,"d:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3526,energy efficiency,Load,LoadClassInfo,3526,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:89,integrability,configur,configuration,89,"Sorry @pcanal , I didn't get around to trying your suggestion until today. Building with configuration args:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3657,integrability,rout,routine,3657,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:89,modifiability,configur,configuration,89,"Sorry @pcanal , I didn't get around to trying your suggestion until today. Building with configuration args:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2894,performance,Error,Error,2894,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2980,performance,Error,Error,2980,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3070,performance,Error,Error,3070,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3158,performance,Error,Error,3158,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3243,performance,Error,Error,3243,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3328,performance,Error,Error,3328,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3414,performance,Error,Error,3414,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3508,performance,Error,Error,3508,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3526,performance,Load,LoadClassInfo,3526,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3604,reliability,availab,available,3604,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2790,safety,test,test,2790,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2894,safety,Error,Error,2894,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2980,safety,Error,Error,2980,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3070,safety,Error,Error,3070,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3158,safety,Error,Error,3158,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3243,safety,Error,Error,3243,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3328,safety,Error,Error,3328,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3414,safety,Error,Error,3414,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3508,safety,Error,Error,3508,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3604,safety,avail,available,3604,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:89,security,configur,configuration,89,"Sorry @pcanal , I didn't get around to trying your suggestion until today. Building with configuration args:. ```. -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=OFF -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=ON -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=g++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3604,security,availab,available,3604,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2790,testability,test,test,2790,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2605,usability,support,support,2605,"ap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is avail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2670,usability,support,support,2670,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2870,usability,support,support,2870,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2894,usability,Error,Error,2894,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:2980,usability,Error,Error,2980,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3070,usability,Error,Error,3070,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3158,usability,Error,Error,3158,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3243,usability,Error,Error,3243,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3328,usability,Error,Error,3328,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3414,usability,Error,Error,3414,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:3508,usability,Error,Error,3508,":BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17. ```. I got the following warning when building Celeritas' root dictionary (possibly unimportant):. ```. [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap. Disabling gnu++: clang has no __float128 support on this target! Disabling gnu++: clang has no __float128 support on this target! ```. and at runtime:. ```. info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root. Disabling gnu++: clang has no __float128 support on this target! Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found. Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found. Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:17,availability,replic,replicate,17,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:164,availability,replic,replicate,164,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:178,availability,error,error,178,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:63,deployability,toolchain,toolchain,63,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:119,deployability,version,version,119,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:119,integrability,version,version,119,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:119,modifiability,version,version,119,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:178,performance,error,error,178,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:178,safety,error,error,178,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:63,usability,tool,toolchain,63,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:178,usability,error,error,178,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/issues/10162:210,usability,close,closed,210,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10162
https://github.com/root-project/root/pull/10167:314,availability,state,statement,314,"Note that I expect the most commonly form to be:. ```. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). # potentially other TFile manipulation (or not). with TDirectory.TContext(file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the with statement the current directory would be file2, and afterwards it would be set back to whatever it was right before the with statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:439,availability,state,statement,439,"Note that I expect the most commonly form to be:. ```. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). # potentially other TFile manipulation (or not). with TDirectory.TContext(file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the with statement the current directory would be file2, and afterwards it would be set back to whatever it was right before the with statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:328,energy efficiency,current,current,328,"Note that I expect the most commonly form to be:. ```. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). # potentially other TFile manipulation (or not). with TDirectory.TContext(file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the with statement the current directory would be file2, and afterwards it would be set back to whatever it was right before the with statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:314,integrability,state,statement,314,"Note that I expect the most commonly form to be:. ```. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). # potentially other TFile manipulation (or not). with TDirectory.TContext(file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the with statement the current directory would be file2, and afterwards it would be set back to whatever it was right before the with statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10167:439,integrability,state,statement,439,"Note that I expect the most commonly form to be:. ```. import ROOT. from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""). file2 = ROOT.TFile(""file2.root""). # potentially other TFile manipulation (or not). with TDirectory.TContext(file2):. histo = ROOT.TH1F(...). histo.Write(). ```. where inside the with statement the current directory would be file2, and afterwards it would be set back to whatever it was right before the with statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10167
https://github.com/root-project/root/pull/10171:42,integrability,sub,submitting,42,"> . > Hi @subham73, thank you so much for submitting another one of these PRs! > . > I have made a few comments about `dynamic_cast`. > . > Indeed, in the last PR you made there were cases where we could replace some `dynamic_cast` with `static_cast` because the result was never checked for nullptr, but here you often did this replacement even though there was a nullptr check! You need to revert these changes :) I recommend to read a little bit about `dynamic_cast` vs. `static_cast`. Thank you for your review, I will revert the changes as suggested for these and the rest of the files, and will also read about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:508,safety,review,review,508,"> . > Hi @subham73, thank you so much for submitting another one of these PRs! > . > I have made a few comments about `dynamic_cast`. > . > Indeed, in the last PR you made there were cases where we could replace some `dynamic_cast` with `static_cast` because the result was never checked for nullptr, but here you often did this replacement even though there was a nullptr check! You need to revert these changes :) I recommend to read a little bit about `dynamic_cast` vs. `static_cast`. Thank you for your review, I will revert the changes as suggested for these and the rest of the files, and will also read about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:508,testability,review,review,508,"> . > Hi @subham73, thank you so much for submitting another one of these PRs! > . > I have made a few comments about `dynamic_cast`. > . > Indeed, in the last PR you made there were cases where we could replace some `dynamic_cast` with `static_cast` because the result was never checked for nullptr, but here you often did this replacement even though there was a nullptr check! You need to revert these changes :) I recommend to read a little bit about `dynamic_cast` vs. `static_cast`. Thank you for your review, I will revert the changes as suggested for these and the rest of the files, and will also read about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:24,availability,failur,failure,24,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:73,availability,error,error,73,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:24,deployability,fail,failure,24,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:39,deployability,build,build,39,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:24,performance,failur,failure,24,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:73,performance,error,error,73,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:24,reliability,fail,failure,24,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:73,safety,error,error,73,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:73,usability,error,error,73,"@guitargeek sir, is the failure of the build has to do something with an error in my code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:356,deployability,updat,update,356,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:459,deployability,updat,updated,459,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:243,performance,time,times,243,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:422,performance,time,time,422,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:437,performance,time,time,437,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:356,safety,updat,update,356,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:459,safety,updat,updated,459,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:356,security,updat,update,356,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:459,security,updat,updated,459,"Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:364,deployability,updat,update,364,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:473,deployability,updat,updated,473,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:245,performance,time,times,245,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:436,performance,time,time,436,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:451,performance,time,time,451,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:364,safety,updat,update,364,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:473,safety,updat,updated,473,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:364,security,updat,update,364,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:473,security,updat,updated,473,"> Hi! It was not a problem with your code, but with your git branch. For ROOT PRs, it is not allowed to have non-fast forward branches. That means you can't merge `master` into your development branch at any point, which is what you did several times in this commit history. > . > Instead of merging master, you should `git rebase` on top of master if you need to update your development branch. > . > Please keep this in mind for next time. For this time, I have manually updated your branch to be a fast-forward branch and did a force-push, so we can proceed quickly here. Sir, sorry for the inconvenience, will definitely keep that in mind.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:169,performance,time,time,169,"Hi @subham73, there was no need to close the PR here. I have fixed the commit history now and we can merge once the tests pass. Just try to get a clean git history next time :) (i.e. only commits added on top of master instead of merging master into your development branch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:116,safety,test,tests,116,"Hi @subham73, there was no need to close the PR here. I have fixed the commit history now and we can merge once the tests pass. Just try to get a clean git history next time :) (i.e. only commits added on top of master instead of merging master into your development branch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:116,testability,test,tests,116,"Hi @subham73, there was no need to close the PR here. I have fixed the commit history now and we can merge once the tests pass. Just try to get a clean git history next time :) (i.e. only commits added on top of master instead of merging master into your development branch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10171:35,usability,close,close,35,"Hi @subham73, there was no need to close the PR here. I have fixed the commit history now and we can merge once the tests pass. Just try to get a clean git history next time :) (i.e. only commits added on top of master instead of merging master into your development branch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10171
https://github.com/root-project/root/pull/10176:134,deployability,releas,release,134,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:509,deployability,releas,release,509,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:369,interoperability,distribut,distributed,369,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:360,modifiability,pac,packages,360,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:381,security,secur,security,381,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:418,usability,support,support,418,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104). ```. $which root. /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root. $python distrdf004_dask_lxbatch.py . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release. warnings.warn(. Waiting for 2 workers to start. All workers are ready, took 369.31 seconds. Starting the computations at 2023-09-20 22:27:35.737711. Dataset has 10000 entries. Column x stats:. 	mean: 50.19706628187094. 	max: 99.99726188834757. 	min: 0.0008953968062996864. Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:139,deployability,version,versions,139,"Just tested again on lxplus, works still with the same code unchanged. Periodically we'll need to check that it still works, e.g. at newer versions of `dask_lxplus`. But the tutorial is mostly informative about the fact that one can use the HTCondor pools on lxplus via dask. Given that this tutorial is never run in our CI, I will merge the PR as it is already approved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:139,integrability,version,versions,139,"Just tested again on lxplus, works still with the same code unchanged. Periodically we'll need to check that it still works, e.g. at newer versions of `dask_lxplus`. But the tutorial is mostly informative about the fact that one can use the HTCondor pools on lxplus via dask. Given that this tutorial is never run in our CI, I will merge the PR as it is already approved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:139,modifiability,version,versions,139,"Just tested again on lxplus, works still with the same code unchanged. Periodically we'll need to check that it still works, e.g. at newer versions of `dask_lxplus`. But the tutorial is mostly informative about the fact that one can use the HTCondor pools on lxplus via dask. Given that this tutorial is never run in our CI, I will merge the PR as it is already approved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:5,safety,test,tested,5,"Just tested again on lxplus, works still with the same code unchanged. Periodically we'll need to check that it still works, e.g. at newer versions of `dask_lxplus`. But the tutorial is mostly informative about the fact that one can use the HTCondor pools on lxplus via dask. Given that this tutorial is never run in our CI, I will merge the PR as it is already approved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/pull/10176:5,testability,test,tested,5,"Just tested again on lxplus, works still with the same code unchanged. Periodically we'll need to check that it still works, e.g. at newer versions of `dask_lxplus`. But the tutorial is mostly informative about the fact that one can use the HTCondor pools on lxplus via dask. Given that this tutorial is never run in our CI, I will merge the PR as it is already approved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10176
https://github.com/root-project/root/issues/10178:193,availability,error,error,193,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:242,availability,Error,Error,242,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:281,availability,Error,Error,281,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:381,availability,error,error,381,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:430,availability,Error,Error,430,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:469,availability,Error,Error,469,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:765,availability,error,error,765,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:814,availability,Error,Error,814,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:853,availability,Error,Error,853,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:193,performance,error,error,193,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:242,performance,Error,Error,242,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:281,performance,Error,Error,281,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:381,performance,error,error,381,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:430,performance,Error,Error,430,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:469,performance,Error,Error,469,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:765,performance,error,error,765,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:814,performance,Error,Error,814,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:853,performance,Error,Error,853,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:193,safety,error,error,193,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:242,safety,Error,Error,242,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:281,safety,Error,Error,281,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:381,safety,error,error,381,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:430,safety,Error,Error,430,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:469,safety,Error,Error,469,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:765,safety,error,error,765,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:814,safety,Error,Error,814,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:853,safety,Error,Error,853,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:218,security,ident,identifier,218,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:406,security,ident,identifier,406,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:790,security,ident,identifier,790,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:103,usability,undo,undo,103,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:140,usability,undo,undo,140,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:156,usability,undo,undo,156,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:193,usability,error,error,193,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:242,usability,Error,Error,242,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:281,usability,Error,Error,281,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:381,usability,error,error,381,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:430,usability,Error,Error,430,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:469,usability,Error,Error,469,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:686,usability,undo,undo,686,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:725,usability,undo,undo,725,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:765,usability,error,error,765,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:814,usability,Error,Error,814,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/issues/10178:853,usability,Error,Error,853,"This works now fine on 6.28/04, it no longer crashes. ```. root -l. root [0] int x. (int) 0. root [1] .undo. root [2] x. (int) 0. root [3] .undo. root [4] .undo. root [5] x. input_line_12:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [6] x. input_line_14:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [7] int x. (int) 0. root [8] int x. (int) 0. root [9] x. (int) 0. root [10] x. (int) 0. root [11] x. (int) 0. root [12] x. (int) 0. root [13] .undo. root [14] x. (int) 0. root [15] .undo 5. root [16] x. input_line_23:2:3: error: use of undeclared identifier 'x'. (x). ^. Error in <HandleInterpreterException>: Error evaluating expression (x). Execution of your code was aborted. root [17] .q. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10178
https://github.com/root-project/root/pull/10181:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10181
https://github.com/root-project/root/issues/10182:151,reliability,doe,does,151,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:102,safety,input,input,102,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:35,usability,behavi,behavior,35,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:57,usability,clear,clear,57,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:67,usability,undo,undo,67,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10182:102,usability,input,input,102,"Actually, I think that the correct behavior should be to clear the undo history after accepting a new input line (which also follows what GNU-readline does).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10182
https://github.com/root-project/root/issues/10184:703,integrability,wrap,wrapPoint,703,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:193,interoperability,Format,Format,193,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:583,interoperability,Format,Format,583,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:882,interoperability,Format,Format,882,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:1069,interoperability,Format,Format,1069,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:1153,interoperability,Format,Format,1153,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:1404,modifiability,exten,extending,1404,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:540,safety,input,input,540,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:839,safety,input,input,839,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:540,usability,input,input,540,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:839,usability,input,input,839,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:1112,usability,prototyp,prototype,1112,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/issues/10184:1342,usability,behavi,behavior,1342,"```. frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17. frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15. frame #5: 0x00007ffff790f09b. frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34. frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40. frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25. ```. It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10184
https://github.com/root-project/root/pull/10186:42,usability,behavi,behavior,42,"@pcanal done, although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory `""root""` (the default `gDirectory`): in that case the `TEntryList` takes `root/treename` as the treename and leaves the filename empty. I would have expected treename `treename` and filename `root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:164,safety,test,tested,164,"> although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory ""root"" . (Unfortunately) this is not surprising, I bet we never tested that case (but rather mostly tested the TChain case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:200,safety,test,tested,200,"> although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory ""root"" . (Unfortunately) this is not surprising, I bet we never tested that case (but rather mostly tested the TChain case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:164,testability,test,tested,164,"> although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory ""root"" . (Unfortunately) this is not surprising, I bet we never tested that case (but rather mostly tested the TChain case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:200,testability,test,tested,200,"> although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory ""root"" . (Unfortunately) this is not surprising, I bet we never tested that case (but rather mostly tested the TChain case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10186:30,usability,behavi,behavior,30,"> although the (pre-existing) behavior seems to be broken/unexpected in case of a tree in directory ""root"" . (Unfortunately) this is not surprising, I bet we never tested that case (but rather mostly tested the TChain case)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10186
https://github.com/root-project/root/pull/10188:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:20,safety,safe,safely,20,@pcanal can this be safely closed perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:27,usability,close,closed,27,@pcanal can this be safely closed perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:15,deployability,releas,release,15,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:96,deployability,releas,release,96,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:79,modifiability,maintain,maintaining,79,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:79,safety,maintain,maintaining,79,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:74,usability,stop,stop,74,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:186,deployability,releas,releases,186,"Because the CI and/or testing has been unstable and we can use this (type of) PR to check whether a problem is pre-existing or brougth forth by another PR you are looking at. (For older releases, there is often no 'recent' PR to compare to and for master things move fast enough that it has also often been unclear).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:22,safety,test,testing,22,"Because the CI and/or testing has been unstable and we can use this (type of) PR to check whether a problem is pre-existing or brougth forth by another PR you are looking at. (For older releases, there is often no 'recent' PR to compare to and for master things move fast enough that it has also often been unclear).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10188:22,testability,test,testing,22,"Because the CI and/or testing has been unstable and we can use this (type of) PR to check whether a problem is pre-existing or brougth forth by another PR you are looking at. (For older releases, there is often no 'recent' PR to compare to and for master things move fast enough that it has also often been unclear).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10188
https://github.com/root-project/root/pull/10189:20,safety,safe,safely,20,@pcanal can this be safely closed perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10189
https://github.com/root-project/root/pull/10189:27,usability,close,closed,27,@pcanal can this be safely closed perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10189
https://github.com/root-project/root/issues/10191:120,interoperability,specif,specific,120,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:296,modifiability,variab,variables,296,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:363,modifiability,variab,variables,363,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:312,reliability,doe,does,312,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:38,usability,help,help,38,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:100,usability,document,documentation,100,"> - [ ] ""./keyword"" search keyword in help information. IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? > - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). Not sure whether this is useful, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:774,availability,state,statements,774,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:803,availability,state,statements,803,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,availability,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,availability,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2899,availability,operat,operations,2899,"med //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:446,deployability,Version,Version,446,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:705,deployability,version,version,705,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1263,deployability,contain,containing,1263," for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,deployability,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,deployability,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2534,deployability,Manag,Manager,2534,"t (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4322,deployability,toggl,toggling,4322,bject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4629,deployability,manag,manager,4629,ect //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4860,deployability,manag,management,4860,formation for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4956,deployability,Contain,Container,4956,e element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,deployability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,deployability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,deployability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,energy efficiency,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,energy efficiency,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2534,energy efficiency,Manag,Manager,2534,"t (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3089,energy efficiency,CPU,CPU,3089,"TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3133,energy efficiency,CPU,CPU,3133,"C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3137,energy efficiency,load,load,3137,"compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4629,energy efficiency,manag,manager,4629,ect //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4860,energy efficiency,manag,management,4860,formation for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6591,energy efficiency,alloc,allocator,6591,". (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6706,energy efficiency,alloc,allocator,6706,"bMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7489,energy efficiency,alloc,allocator,7489,"r<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7682,energy efficiency,alloc,allocator,7682,"mTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7783,energy efficiency,alloc,allocator,7783,"id *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* form",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7979,energy efficiency,alloc,allocator,7979,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8080,energy efficiency,alloc,allocator,8080,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8253,energy efficiency,alloc,allocator,8253,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:446,integrability,Version,Version,446,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:705,integrability,version,version,705,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:774,integrability,state,statements,774,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:803,integrability,state,statements,803,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1231,integrability,pub,public,1231,"her as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1322,integrability,pub,public,1322,"type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1339,integrability,Buffer,Buffer,1339,":. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1494,integrability,pub,public,1494,"lcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1594,integrability,pub,public,1594,"****. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1679,integrability,pub,public,1679,"ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1771,integrability,pub,public,1771,"statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1894,integrability,pub,public,1894,"at,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1996,integrability,pub,public,1996,"glist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2084,integrability,pub,public,2084,"ar *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2169,integrability,pub,public,2169,"ng,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2250,integrability,pub,public,2250,"ictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2428,integrability,pub,public,2428,"for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //W",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2517,integrability,pub,public,2517," for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken publi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2599,integrability,pub,public,2599,"Object //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2673,integrability,pub,public,2673,"st public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2742,integrability,pub,public,2742,"compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) struct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2755,integrability,pub,public,2755,"ss TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2773,integrability,encapsulat,encapsulates,2773,"Named //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2868,integrability,pub,public,2868,"irtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer informat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2965,integrability,pub,public,2965,"ss TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one eleme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2980,integrability,pub,public,2980,"toringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3022,integrability,event,events,3022,"ng Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3254,integrability,pub,public,3254,"TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method arg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3269,integrability,pub,public,3269,"tionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3285,integrability,pub,public,3285,"ass member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3301,integrability,pub,public,3301,"ion (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3316,integrability,pub,public,3316,"C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3334,integrability,Abstract,Abstract,3334," TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3430,integrability,Wrap,Wrapper,3430,":TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3515,integrability,pub,public,3515,"ublic:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3622,integrability,pub,public,3622,"or plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for Ope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3639,integrability,interfac,interface,3639,". (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3699,integrability,pub,public,3699,"r tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3808,integrability,pub,public,3808,"redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI compon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3824,integrability,Abstract,Abstract,3824,"ion. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3833,integrability,Interfac,Interface,3833,"compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3928,integrability,pub,public,3928,"++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4034,integrability,pub,public,4034,"mpiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4051,integrability,abstract,abstract,4051,"Info_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4060,integrability,interfac,interface,4060,"ystem information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4133,integrability,Abstract,Abstract,4133,load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4142,integrability,interfac,interface,4142,mation. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType pub,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4209,integrability,pub,public,4209,rmation. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4293,integrability,pub,public,4293,Fill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4401,integrability,interfac,interface,4401,xp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4461,integrability,Interfac,Interface,4461,sion matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4530,integrability,Interfac,Interface,4530,ing tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4592,integrability,pub,public,4592,led) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibilit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4608,integrability,Interfac,Interface,4608,enerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4764,integrability,pub,public,4764,C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4780,integrability,Abstract,Abstract,4780,ss TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Mat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4805,integrability,compon,components,4805,blic:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4939,integrability,pub,public,4939,//Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5047,integrability,pub,public,5047,/abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5144,integrability,pub,public,5144,face for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransfor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5248,integrability,pub,public,5248,od argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5357,integrability,pub,public,5357,iled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5479,integrability,pub,public,5479,painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5521,integrability,inject,injected,5521,ip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5768,integrability,pub,public,5768,"TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5971,integrability,pub,public,5971,"/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5987,integrability,Abstract,Abstract,5987,"Dictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5996,integrability,interfac,interface,5996," attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,integrability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,integrability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,integrability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8724,integrability,pub,public,8724,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:66,interoperability,specif,specific,66,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:893,interoperability,format,format,893,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:951,interoperability,format,format,951,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:990,interoperability,format,format,990,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1043,interoperability,format,format,1043,"documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Informa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1091,interoperability,format,format,1091,"s in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TOb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1129,interoperability,format,format,1129,"er window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1181,interoperability,format,format,1181,"cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2546,interoperability,plug,plugin,2546,"tle). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2628,interoperability,plug,plugin,2628,"ROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3430,interoperability,Wrapper,Wrapper,3430,":TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3639,interoperability,interfac,interface,3639,". (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3833,interoperability,Interfac,Interface,3833,"compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4060,interoperability,interfac,interface,4060,"ystem information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4142,interoperability,interfac,interface,4142,mation. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType pub,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4401,interoperability,interfac,interface,4401,xp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4461,interoperability,Interfac,Interface,4461,sion matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4530,interoperability,Interfac,Interface,4530,ing tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4608,interoperability,Interfac,Interface,4608,enerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4805,interoperability,compon,components,4805,blic:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5583,interoperability,compatib,compatibility,5583,r public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5996,interoperability,interfac,interface,5996," attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,interoperability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,interoperability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,interoperability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8784,interoperability,format,format,8784,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:446,modifiability,Version,Version,446,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:705,modifiability,version,version,705,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2773,modifiability,encapsul,encapsulates,2773,"Named //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3334,modifiability,Abstract,Abstract,3334," TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3639,modifiability,interfac,interface,3639,". (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3824,modifiability,Abstract,Abstract,3824,"ion. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3833,modifiability,Interfac,Interface,3833,"compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4051,modifiability,abstract,abstract,4051,"Info_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4060,modifiability,interfac,interface,4060,"ystem information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4133,modifiability,Abstract,Abstract,4133,load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4142,modifiability,interfac,interface,4142,mation. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType pub,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4401,modifiability,interfac,interface,4401,xp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4461,modifiability,Interfac,Interface,4461,sion matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4530,modifiability,Interfac,Interface,4530,ing tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4608,modifiability,Interfac,Interface,4608,enerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4780,modifiability,Abstract,Abstract,4780,ss TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Mat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4805,modifiability,compon,components,4805,blic:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5987,modifiability,Abstract,Abstract,5987,"Dictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5996,modifiability,interfac,interface,5996," attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6025,modifiability,Variab,VariableDecorrTransform,6025,"ataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6057,modifiability,Variab,VariableGaussTransform,6057,"Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6088,modifiability,Variab,VariableIdentityTransform,6088,"r. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6122,modifiability,Variab,VariableNormalizeTransform,6122,"asicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6157,modifiability,Variab,VariablePCATransform,6157," //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6186,modifiability,Variab,VariableRearrangeTransform,6186,"type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6221,modifiability,Variab,VariableTransformBase,6221,"merBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,modifiability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,modifiability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,modifiability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3089,performance,CPU,CPU,3089,"TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3133,performance,CPU,CPU,3133,"C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3137,performance,load,load,3137,"compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3189,performance,Memor,Memory,3189,"ject reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5629,performance,Perform,Perform,5629,"ger. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,reliability,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,reliability,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,reliability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,reliability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,reliability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,safety,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,safety,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2534,safety,Manag,Manager,2534,"t (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4629,safety,manag,manager,4629,ect //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4860,safety,manag,management,4860,formation for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 clas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5650,safety,compl,completion,5650,"ass TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1718,security,hash,hashtable,1718,"uly 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3539,security,token,tokenizer,3539,"r plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3577,security,token,tokens,3577,"ass TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5521,security,inject,injected,5521,ip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariable,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5650,security,compl,completion,5650,"ass TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,security,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,security,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,security,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:1926,testability,Monitor,Monitoring,1926,"intf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2028,testability,Monitor,Monitoring,2028,"ing,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2101,testability,Spy,Spy,2101,"st,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2186,testability,Spy,Spy,2186,"arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8411,testability,Integr,IntegrationOneDim,8411,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8447,testability,Integr,IntegratorOneDim,8447,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8622,testability,Integr,IntegratorOneDim,8622,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:46,usability,document,documentation,46,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:747,usability,help,help,747,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:753,usability,Command,Commands,753,"> IIUC, the intended use of this is to lookup documentation for a specific language keyword, as in, e.g. `./for` should open a browser window pointing to https://en.cppreference.com/w/cpp/language/for? Nope, in CINT, it was acting rather as a 'search' keyword to match for predefined functions. If I open ROOT 5.34/34, and I type ./for, I get:. ```. root -b. *******************************************. * *. * W E L C O M E to R O O T *. * *. * Version 5.34/34 2 October 2015 *. * *. * You are welcome to visit our Web site *. * http://root.cern.ch *. * *. *******************************************. ROOT 5.34/34 (v5-34-34@v5-34-34, Oct 02 2015, 16:30:37 on linuxx8664gcc). CINT/ROOT C/C++ Interpreter version 5.18.00, July 2, 2010. Type ? for help. Commands must be C++ statements. Enclose multiple statements between { }. root [0] ./for. size_t strftime(char *string,size_t maximum,char *format,struct tm*brokentime);. int fprintf(FILE *fp,char *format,arglist,...);. int printf(char *format,arglist,...);. int sprintf(char *string,char *format,arglist,...);. int fscanf(FILE *fp,char *format,arglist,...);. int scanf(char *format,arglist,...);. int sscanf(char *string,char *format,arglist,...);. (C++ compiled) class TClass public:TDictionary //Dictionary containing class information. (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects. (C++ compiled) class TMemberInspector //ABC for inspecting class data members. (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title). (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics. (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup. (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader publ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2806,usability,undo,undo,2806,"e info including meta data information. (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:2914,usability,undo,undo,2914,"r Sending Monitoring Information. (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information. (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion. (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:3189,usability,Memor,Memory,3189,"ject reference for deletion. (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method). (C++ compiled) class TQObject //Base class for object communication mechanism. (C++ compiled) class TFunction public:TDictionary //Dictionary for global function. (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers. (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries. (C++ compiled) class TTask public:TNamed //Base class for tasks. (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action. (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo. (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events. (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM. (C++ compiled) struct CpuInfo_t //CPU load information. (C++ compiled) struct MemInfo_t //Memory utilization information. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching. (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens. (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators. (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4694,usability,widget,widgets,4694, public:TDirectory //Top level (or root) structure for all classes. (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:4849,usability,Help,Helper,4849,g Streamer information for one class. (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed. (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations. (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor. (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument. (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off. (C++ compiled) class TVirtualPadPainter //Painter interface for pad. (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter. (C++ compiled) class TVirtualGLManip //Interface for GL manipulator. (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5629,usability,Perform,Perform,5629,"ger. (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5637,usability,command,command,5637,"+ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering. (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5745,usability,Minim,MinimTransformFunction,5745,"Factory public:TNamed //Abstract factory for GUI components. (C++ compiled) class TAttBBox //Helper for management of bounding-box information. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:5879,usability,Minim,MinimTransformVariable,5879,"ormation. (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes. (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member. (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type. (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type. (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects. (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6508,usability,Minim,MinimizerVariableTransformation,6508,"ected by a TSchemaRule. Transient only to preverse forward compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransfor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6568,usability,Minim,MinimTransformVariable,6568,"ard compatibility. (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6613,usability,Minim,MinimTransformVariable,6613,"om //Perform command line completion when hitting <TAB>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6683,usability,Minim,MinimTransformVariable,6683,"t_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:6728,usability,Minim,MinimTransformVariable,6728,"Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable . /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting. TMVA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7005,usability,Minim,MinimizerVariableTransformation,7005,"VA::VariableDecorrTransform . TMVA::VariableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7050,usability,Minim,MinimTransformVariable,7050,"ableGaussTransform . TMVA::VariableIdentityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::Mini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7083,usability,Minim,MinimizerVariableTransformation,7083,"ntityTransform . TMVA::VariableNormalizeTransform . TMVA::VariablePCATransform . TMVA::VariableRearrangeTransform . TMVA::VariableTransformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7221,usability,Minim,MinimTransformFunction,7221,"nsformBase . TSpectrum2Transform . TSpectrumTransform . ROOT::Math::Transform3D . TGeoUniformMagField . class ROOT::Math::SinVariableTransformation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::Mi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7359,usability,Minim,MinimTransformFunction,7359,"formation . class ROOT::Math::SqrtLowVariableTransformation . class ROOT::Math::SqrtUpVariableTransformation . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7466,usability,Minim,MinimTransformVariable,7466,"n . class auto_ptr<ROOT::Math::MinimizerVariableTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7511,usability,Minim,MinimTransformVariable,7511,"bleTransformation> . class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7544,usability,Minim,MinimTransformVariable,7544,"<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > . class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7659,usability,Minim,MinimTransformVariable,7659,"<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7704,usability,Minim,MinimTransformVariable,7704,"<ROOT::Math::MinimTransformVariable> >::iterator> . (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7760,usability,Minim,MinimTransformVariable,7760,"piled) typedef void *ClassStreamerFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7805,usability,Minim,MinimTransformVariable,7805,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:7956,usability,Minim,MinimTransformVariable,7956,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8001,usability,Minim,MinimTransformVariable,8001,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8057,usability,Minim,MinimTransformVariable,8057,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8102,usability,Minim,MinimTransformVariable,8102,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8230,usability,Minim,MinimTransformVariable,8230,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8275,usability,Minim,MinimTransformVariable,8275,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:8320,usability,Minim,MinimTransformVariable,8320,"merFunc_t //Streamer function for a class. (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>. /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types . /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types . (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:70,integrability,pub,public,70,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:85,integrability,pub,public,85,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:101,integrability,pub,public,101,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:117,integrability,pub,public,117,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:132,integrability,pub,public,132,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:150,integrability,Abstract,Abstract,150,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:221,integrability,pub,public,221,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:235,integrability,pub,public,235,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:251,integrability,pub,public,251,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:267,integrability,pub,public,267,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:285,integrability,pub,public,285,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:430,integrability,pub,public,430,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:444,integrability,pub,public,444,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:460,integrability,pub,public,460,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:476,integrability,pub,public,476,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:494,integrability,pub,public,494,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:512,integrability,Abstract,Abstract,512,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:521,integrability,interfac,interface,521,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:586,integrability,pub,public,586,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:600,integrability,pub,public,600,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:616,integrability,pub,public,616,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:632,integrability,pub,public,632,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:648,integrability,pub,public,648,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:691,integrability,interfac,interface,691,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:521,interoperability,interfac,interface,521,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:691,interoperability,interfac,interface,691,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:150,modifiability,Abstract,Abstract,150,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:512,modifiability,Abstract,Abstract,512,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:521,modifiability,interfac,interface,521,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:691,modifiability,interfac,interface,691,A more useful example:. ```. ./Fill. (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases. (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes. (C++ compiled) class TAttFill //Fill area attributes. (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver. (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system. TAttFillEditor . (compiled) 0xa623d0 const EGuiConstants kFillSolid=0. (compiled) 0xa62570 const EGuiConstants kFillTiled=1. (compiled) 0xa62710 const EGuiConstants kFillStippled=2. (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3. (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256. (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:10,modifiability,variab,variables,10,for local variables: https://root-forum.cern.ch/t/mapping-local-variables-into-cint/1141,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/issues/10191:64,modifiability,variab,variables-into-cint,64,for local variables: https://root-forum.cern.ch/t/mapping-local-variables-into-cint/1141,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10191
https://github.com/root-project/root/pull/10193:33,safety,test,tests,33,"@vgvassilev , I have started the tests here https://github.com/cms-sw/root/pull/165",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:33,testability,test,tests,33,"@vgvassilev , I have started the tests here https://github.com/cms-sw/root/pull/165",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:32,availability,error,error,32,"@smuzaffar, is this compilation error that the bot reported relevant or it is some glitch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:32,performance,error,error,32,"@smuzaffar, is this compilation error that the bot reported relevant or it is some glitch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:32,safety,error,error,32,"@smuzaffar, is this compilation error that the bot reported relevant or it is some glitch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:32,usability,error,error,32,"@smuzaffar, is this compilation error that the bot reported relevant or it is some glitch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:40,safety,test,tests,40,"@vgvassilev , this looks good. CMSSW PR tests worked fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10193:40,testability,test,tests,40,"@vgvassilev , this looks good. CMSSW PR tests worked fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10193
https://github.com/root-project/root/pull/10195:397,availability,error,error,397,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:474,availability,down,downside,474,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:296,deployability,updat,updating,296,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:397,performance,error,error,397,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:14,safety,review,review,14,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:296,safety,updat,updating,296,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:397,safety,error,error,397,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:296,security,updat,updating,296,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:14,testability,review,review,14,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:397,usability,error,error,397,"> In [#10004 (review)](https://github.com/root-project/root/pull/10004#pullrequestreview-916874733) I mean the other .C macros in the doxygen/folder, this used to make the doc. Not all the tutorials. Oh, I see. But those macros in the doxygen folder call themselves another macros, so I was just updating the ones that are being called (not all tutorials explicitly) because otherwise it gives an error when trying to compile them. Should I revert those changes? Is there a downside of adding the headers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:508,availability,sli,slightly,508,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:532,deployability,build,building,532,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:680,deployability,version,version,680,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:654,energy efficiency,optim,optimizer,654,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:680,integrability,version,version,680,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:680,modifiability,version,version,680,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:654,performance,optimiz,optimizer,654,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:508,reliability,sli,slightly,508,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:232,safety,except,exceptions,232,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:198,testability,simpl,simplifies,198,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:739,testability,understand,understand,739,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:140,usability,interact,interactive,140,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:198,usability,simpl,simplifies,198,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:518,usability,document,documentation,518,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:161,availability,slo,slow,161,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:226,availability,slo,slows,226,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:232,availability,down,down,232,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:107,deployability,build,build,107,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:47,energy efficiency,current,currently,47,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:184,integrability,filter,filter,184,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:20,modifiability,concern,concerning,20,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:161,reliability,slo,slow,161,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:203,reliability,doe,does,203,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:226,reliability,slo,slows,226,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:20,testability,concern,concerning,20,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:62,usability,document,documentation,62,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:46,deployability,version,version,46,"On the other hand, I have prepared a rehauled-version that is thread-safe so that doxygen can run in parallel: https://github.com/root-project/root/pull/9966#issuecomment-1055977012. (Here I did check that things were faster.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:46,integrability,version,version,46,"On the other hand, I have prepared a rehauled-version that is thread-safe so that doxygen can run in parallel: https://github.com/root-project/root/pull/9966#issuecomment-1055977012. (Here I did check that things were faster.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:46,modifiability,version,version,46,"On the other hand, I have prepared a rehauled-version that is thread-safe so that doxygen can run in parallel: https://github.com/root-project/root/pull/9966#issuecomment-1055977012. (Here I did check that things were faster.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:101,performance,parallel,parallel,101,"On the other hand, I have prepared a rehauled-version that is thread-safe so that doxygen can run in parallel: https://github.com/root-project/root/pull/9966#issuecomment-1055977012. (Here I did check that things were faster.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10195:69,safety,safe,safe,69,"On the other hand, I have prepared a rehauled-version that is thread-safe so that doxygen can run in parallel: https://github.com/root-project/root/pull/9966#issuecomment-1055977012. (Here I did check that things were faster.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10195
https://github.com/root-project/root/pull/10200:10,availability,sli,slipped,10,"sorry, it slipped :S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10200
https://github.com/root-project/root/pull/10200:10,reliability,sli,slipped,10,"sorry, it slipped :S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10200
https://github.com/root-project/root/pull/10205:27,deployability,updat,update,27,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:45,integrability,messag,message,45,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:45,interoperability,messag,message,45,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:27,safety,updat,update,27,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:27,security,updat,update,27,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:82,integrability,sub,substitutions,82,"Hi Lorenzo, yes indeed I checked that the unit tests we have are covering all the substitutions I changed in this PR, and they pass!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:47,safety,test,tests,47,"Hi Lorenzo, yes indeed I checked that the unit tests we have are covering all the substitutions I changed in this PR, and they pass!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:42,testability,unit,unit,42,"Hi Lorenzo, yes indeed I checked that the unit tests we have are covering all the substitutions I changed in this PR, and they pass!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10205:47,testability,test,tests,47,"Hi Lorenzo, yes indeed I checked that the unit tests we have are covering all the substitutions I changed in this PR, and they pass!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10205
https://github.com/root-project/root/pull/10206:4,availability,failur,failure,4,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:4,deployability,fail,failure,4,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:4,performance,failur,failure,4,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:4,reliability,fail,failure,4,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:27,safety,test,testProxies,27,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:27,testability,test,testProxies,27,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:19,availability,failur,failures,19,"Yes, the other two failures need backporting of:. https://github.com/root-project/root/pull/9824. which I will do next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:19,deployability,fail,failures,19,"Yes, the other two failures need backporting of:. https://github.com/root-project/root/pull/9824. which I will do next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:19,performance,failur,failures,19,"Yes, the other two failures need backporting of:. https://github.com/root-project/root/pull/9824. which I will do next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10206:19,reliability,fail,failures,19,"Yes, the other two failures need backporting of:. https://github.com/root-project/root/pull/9824. which I will do next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10206
https://github.com/root-project/root/pull/10207:11,deployability,build,build,11,@phsft-bot build with -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10207
https://github.com/root-project/root/pull/10208:3,deployability,build,builds,3,"It builds, but it's still not working, somehow it gets stuck when going forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:706,deployability,Updat,UpdateHistSearch,706,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:538,energy efficiency,alloc,allocator,538,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:769,energy efficiency,core,core,769,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:960,energy efficiency,core,core,960,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:1113,energy efficiency,core,core,1113,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:1340,energy efficiency,core,core,1340,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:1550,energy efficiency,core,core,1550,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:1678,energy efficiency,core,core,1678,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:219,performance,perform,perform,219,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:53,safety,test,test,53,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:706,safety,Updat,UpdateHistSearch,706,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:706,security,Updat,UpdateHistSearch,706,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:53,testability,test,test,53,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:219,usability,perform,perform,219,"> Almost there! slightly_smiling_face. > . > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S. - write 'int'. - press CTRL+S again. ```. ===========================================================. #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65. #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124. #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285. #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67. #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174. #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126. #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256. ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:88,energy efficiency,load,loads,88,"Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:146,energy efficiency,load,load,146,"Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:88,performance,load,loads,88,"Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:146,performance,load,load,146,"Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:46,performance,perform,perform,46,"> It's working well, but we have a crash if I perform the following (stupid) sequence:. > . > * press CTRL+S. > . > * write 'int'. > . > * press CTRL+S again. This is now solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:46,usability,perform,perform,46,"> It's working well, but we have a crash if I perform the following (stupid) sequence:. > . > * press CTRL+S. > . > * write 'int'. > . > * press CTRL+S again. This is now solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:90,energy efficiency,load,loads,90,"> Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything. This is solved, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:148,energy efficiency,load,load,148,"> Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything. This is solved, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:90,performance,load,loads,90,"> Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything. This is solved, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:148,performance,load,load,148,"> Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything. This is solved, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:77,deployability,updat,updates,77,"Remaining issues:. - if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. - if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:124,performance,time,time,124,"Remaining issues:. - if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. - if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:77,safety,updat,updates,77,"Remaining issues:. - if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. - if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:77,security,updat,updates,77,"Remaining issues:. - if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. - if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:132,usability,cancel,cancel,132,"Remaining issues:. - if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. - if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:85,deployability,updat,updates,85,"> Remaining issues:. > . > * if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. > . > * if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it. both fixed now, too. From my side, it's ready. (The only still annoying things are the arrow stuff https://github.com/root-project/root/issues/10209 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:132,performance,time,time,132,"> Remaining issues:. > . > * if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. > . > * if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it. both fixed now, too. From my side, it's ready. (The only still annoying things are the arrow stuff https://github.com/root-project/root/issues/10209 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:85,safety,updat,updates,85,"> Remaining issues:. > . > * if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. > . > * if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it. both fixed now, too. From my side, it's ready. (The only still annoying things are the arrow stuff https://github.com/root-project/root/issues/10209 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:85,security,updat,updates,85,"> Remaining issues:. > . > * if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. > . > * if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it. both fixed now, too. From my side, it's ready. (The only still annoying things are the arrow stuff https://github.com/root-project/root/issues/10209 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:140,usability,cancel,cancel,140,"> Remaining issues:. > . > * if when searching in reverse, I press ""Esc"", the prompt updates to 'fwd'. I have to press Esc a second time to cancel. > . > * if when searching, I press ""Enter"", instead of selecting the line, as it was the case before, it directly executes it. both fixed now, too. From my side, it's ready. (The only still annoying things are the arrow stuff https://github.com/root-project/root/issues/10209 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:15,safety,review,review,15,Thanks for the review! I rebased and squashed some of the commits. I guess you can squash the remaining ones while merging ? Or should I do it on my side ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10208:15,testability,review,review,15,Thanks for the review! I rebased and squashed some of the commits. I guess you can squash the remaining ones while merging ? Or should I do it on my side ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10208
https://github.com/root-project/root/pull/10213:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10213:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10213
https://github.com/root-project/root/pull/10217:258,deployability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,integrability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,interoperability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,modifiability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,reliability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,security,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:258,testability,integr,integrating,258,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:27,usability,behavi,behavior,27,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/pull/10217:290,usability,workflow,workflow,290,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10217
https://github.com/root-project/root/issues/10221:34,deployability,build,builds,34,"Tried on one of our C++17 nightly builds (gcc9.4, python3.8, ubuntu2004) and I can't reproduce. Can you check if `std::optional` can be used at the ROOT prompt from C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:69,deployability,build,building,69,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:600,deployability,build,building,600,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:694,deployability,build,builds,694,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:161,modifiability,pac,package,161,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:210,modifiability,pac,packaging,210,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:220,modifiability,pac,packages,220,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:828,usability,close,close,828,"Hi @kgizdov, thanks for reporting this! I can reproduce the problem, building ROOT master on ArchLinux with C++17, with the same settings as used for the actual package:. https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/blob/main/settings.cmake?ref_type=heads. However, the problem can easily be worked around by including `<optional>` after importing ROOT:. ```c++. import ROOT. ROOT.gInterpreter.ProcessLine(""#include <optional>""). ROOT.std.optional. ```. The same is necessary in the C++ prompt, so this is actually not a PyROOT problem but starts with the interpreter. Also, when building with C++20, the problem is gone! So given that there is an easy workaround for C++17 builds and the problem will be gone once everyone will be using C++20, I don't think we need to prioritize this issue, and maybe just close it at some point. @kgizdov, any thoughts on that? I'll also re-assign the issue from Enric to Axel, since it's related to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10221:77,usability,close,close,77,"If I can compile everything and switch to C++20, I'll report back and we can close it. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10221
https://github.com/root-project/root/issues/10222:456,deployability,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:328,energy efficiency,Current,Currently,328,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,integrability,integration test,integration test,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:91,interoperability,distribut,distribution,91,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:277,interoperability,incompatib,incompatible,277,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,interoperability,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:194,modifiability,variab,variables,194,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:263,modifiability,variab,variables,263,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,modifiability,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,reliability,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:447,safety,test,test,447,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:468,safety,test,test,468,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,security,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:162,testability,simpl,simply,162,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:397,testability,understand,understand,397,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:442,testability,unit,unit,442,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:447,testability,test,test,447,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:456,testability,integr,integration,456,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:468,testability,test,test,468,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:162,usability,simpl,simply,162,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:108,availability,Markov,Markov-Chain,108,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:145,deployability,observ,observe,145,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:194,integrability,event,events,194,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:473,integrability,event,events,473,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:73,interoperability,distribut,distribution,73,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:252,interoperability,distribut,distribution,252,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:108,reliability,Markov,Markov-Chain,108,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:145,testability,observ,observe,145,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:158,usability,behavi,behaviour,158,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/issues/10222:551,usability,document,documentation,551,"The problem is that the default method Unuran uses for multi-dimensional distribution (`hitro`) is based on Markov-Chain MC so it is expected to observe this behaviour if you look at the single events, instead, you should use at the generated obtained distribution. See for example https://search.r-project.org/CRAN/refmans/Runuran/html/hitro.new.html. If you switch unuran (in the `TUnuran::Init`) to use the method `vnrou` then it will be fine when looking at the single events generated. . Before closing this issue, I think we need to improve the documentation in `TUnuran` for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10222
https://github.com/root-project/root/pull/10223:564,availability,error,error,564,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:16,deployability,version,version,16,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:174,deployability,version,version,174,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:328,deployability,version,versions,328,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:470,deployability,version,version,470,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:536,deployability,version,versions,536,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:16,integrability,version,version,16,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:174,integrability,version,version,174,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:206,integrability,interfac,interface,206,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:328,integrability,version,versions,328,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:470,integrability,version,version,470,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:536,integrability,version,versions,536,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:206,interoperability,interfac,interface,206,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:16,modifiability,version,version,16,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:174,modifiability,version,version,174,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:206,modifiability,interfac,interface,206,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:328,modifiability,version,versions,328,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:470,modifiability,version,version,470,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:536,modifiability,version,versions,536,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:564,performance,error,error,564,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:564,safety,error,error,564,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:646,safety,review,reviewing,646,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:646,testability,review,reviewing,646,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:356,usability,user,user-images,356,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/pull/10223:564,usability,error,error,564,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ? ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png). Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10223
https://github.com/root-project/root/issues/10225:18,usability,confirm,confirm,18,"@guar1337 can you confirm that this reproduces the issue when run as `root -l -b -q repro.C`? ```cpp. void repro() {. {. ROOT::RDataFrame d(1);. auto outDF = d.Define(""x"", [] { return ROOT::RVecD{1., 2.}; });. outDF.Snapshot<ROOT::RVecD>(""myDF"", ""mydf.root"", {""x""});. }. {. ROOT::RDataFrame dEDF(""myDF"", ""mydf.root"");. dEDF.Snapshot<ROOT::RVecD>(""analyzed"", ""newdf.root"", {""x""});. }. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:165,deployability,upgrad,upgrading,165,"Yes, still the same problem. newdf.root is being created, but it's empty. I am 99% sure, that I didn't have this issue with root 6.24.02. The behavior changed after upgrading, hopefully, I didn't mess anything up during installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:220,deployability,instal,installation,220,"Yes, still the same problem. newdf.root is being created, but it's empty. I am 99% sure, that I didn't have this issue with root 6.24.02. The behavior changed after upgrading, hopefully, I didn't mess anything up during installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:165,modifiability,upgrad,upgrading,165,"Yes, still the same problem. newdf.root is being created, but it's empty. I am 99% sure, that I didn't have this issue with root 6.24.02. The behavior changed after upgrading, hopefully, I didn't mess anything up during installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:142,usability,behavi,behavior,142,"Yes, still the same problem. newdf.root is being created, but it's empty. I am 99% sure, that I didn't have this issue with root 6.24.02. The behavior changed after upgrading, hopefully, I didn't mess anything up during installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:26,availability,sli,slipped,26,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:179,performance,memor,memory,179,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:26,reliability,sli,slipped,26,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:38,safety,test,tests,38,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:123,safety,test,test,123,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:38,testability,test,tests,38,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:123,testability,test,test,123,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:179,usability,memor,memory,179,"No no, this is a bug that slipped our tests: it requires reading RVecs from file and writing them out again, while we only test either reading them from file or writing them from memory. I'll fix this for 6.26.02, which is coming out this or next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:132,deployability,patch,patch,132,"Thank you again for reporting the problem @guar1337 , this is fixed in master and the fix will be included in the upcoming v6.26.02 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:138,deployability,releas,release,138,"Thank you again for reporting the problem @guar1337 , this is fixed in master and the fix will be included in the upcoming v6.26.02 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:132,safety,patch,patch,132,"Thank you again for reporting the problem @guar1337 , this is fixed in master and the fix will be included in the upcoming v6.26.02 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/issues/10225:132,security,patch,patch,132,"Thank you again for reporting the problem @guar1337 , this is fixed in master and the fix will be included in the upcoming v6.26.02 patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10225
https://github.com/root-project/root/pull/10226:103,deployability,manag,manage,103,"Hi, this is great, please let me take a longer look at the RDF-related commit before merging. I didn't manage today, will do begining of next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10226
https://github.com/root-project/root/pull/10226:103,energy efficiency,manag,manage,103,"Hi, this is great, please let me take a longer look at the RDF-related commit before merging. I didn't manage today, will do begining of next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10226
https://github.com/root-project/root/pull/10226:103,safety,manag,manage,103,"Hi, this is great, please let me take a longer look at the RDF-related commit before merging. I didn't manage today, will do begining of next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10226
https://github.com/root-project/root/pull/10226:72,safety,review,reviewing,72,@eguiraud : no hurry! I wanted to add also a Python example. Thanks for reviewing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10226
https://github.com/root-project/root/pull/10226:72,testability,review,reviewing,72,@eguiraud : no hurry! I wanted to add also a Python example. Thanks for reviewing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10226
https://github.com/root-project/root/pull/10230:585,deployability,Updat,UpdateClassInfoWithDecl,585,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:653,deployability,updat,update,653,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1180,deployability,version,version,1180,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:84,energy efficiency,load,load-file-first,84,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:106,energy efficiency,Load,Loading,106,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:270,energy efficiency,load,loaded,270,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:983,energy efficiency,current,currently,983,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1180,integrability,version,version,1180,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1032,interoperability,prox,proxy,1032,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1109,interoperability,prox,proxy,1109,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1124,interoperability,prox,proxy,1124,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1180,modifiability,version,version,1180,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:84,performance,load,load-file-first,84,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:106,performance,Load,Loading,106,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:270,performance,load,loaded,270,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1130,reliability,doe,does,1130,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:585,safety,Updat,UpdateClassInfoWithDecl,585,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:653,safety,updat,update,653,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1298,safety,compl,complex,1298,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:173,security,access,accessing,173,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:585,security,Updat,UpdateClassInfoWithDecl,585,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:653,security,updat,update,653,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1298,security,compl,complex,1298,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:1089,testability,emul,emulated,1089,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:796,usability,hint,hints,796,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:996,usability,support,support,996,"For the record the following issue is still left:. ```. Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing. the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit. uses of the map (or pair), there is no decl for the instantiation of thus. the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),. the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`. and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair. but it would also need to also refresh the map's CollectionProxy (size,. hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the. map ... But wait ... there is currently no support for generating a collection proxy for. an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the. map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10230:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10230
https://github.com/root-project/root/pull/10231:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:100,availability,error,errors,100,"Thanks! I think if not including `RConfig.h` would cause a problem, I think we'd have some compiler errors here. If some problems unexpectedly pop up later, we can probably find them easily and fix them in a followup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:100,performance,error,errors,100,"Thanks! I think if not including `RConfig.h` would cause a problem, I think we'd have some compiler errors here. If some problems unexpectedly pop up later, we can probably find them easily and fix them in a followup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:100,safety,error,errors,100,"Thanks! I think if not including `RConfig.h` would cause a problem, I think we'd have some compiler errors here. If some problems unexpectedly pop up later, we can probably find them easily and fix them in a followup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/pull/10231:100,usability,error,errors,100,"Thanks! I think if not including `RConfig.h` would cause a problem, I think we'd have some compiler errors here. If some problems unexpectedly pop up later, we can probably find them easily and fix them in a followup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10231
https://github.com/root-project/root/issues/10232:28,usability,behavi,behavior,28,"Hi! Your code is wrong, the behavior of your code is undefined already 6.24/06. [RooWorkspace::set()](https://root.cern.ch/doc/master/classRooWorkspace.html#af505b7efdb0c2aae4a2e4234734ba51d) returns a null pointer if no set with the name exists, and then [ConditionalObservables](https://root.cern/doc/v624/group__Fitting.html#gacfb237547174cfe35e7d8f7570442f73) expects a RooArgSet by reference. So Python will dereference a null pointer in your example, which is undefined. It's surprising you didn't get a crash in 6.24, but that was just chance. In ROOT 6.26, the `ConditionalObservables` function is implemented differently, and in this new implementation you indeed get a crash. This was good actually, because like this you got aware of the problem and can now fix the problem with the nullptr dereferencing in your code :). Is this okay for you? I will close the issue soon, if you have no further inquiries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:862,usability,close,close,862,"Hi! Your code is wrong, the behavior of your code is undefined already 6.24/06. [RooWorkspace::set()](https://root.cern.ch/doc/master/classRooWorkspace.html#af505b7efdb0c2aae4a2e4234734ba51d) returns a null pointer if no set with the name exists, and then [ConditionalObservables](https://root.cern/doc/v624/group__Fitting.html#gacfb237547174cfe35e7d8f7570442f73) expects a RooArgSet by reference. So Python will dereference a null pointer in your example, which is undefined. It's surprising you didn't get a crash in 6.24, but that was just chance. In ROOT 6.26, the `ConditionalObservables` function is implemented differently, and in this new implementation you indeed get a crash. This was good actually, because like this you got aware of the problem and can now fix the problem with the nullptr dereferencing in your code :). Is this okay for you? I will close the issue soon, if you have no further inquiries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:5,usability,close,close,5,"I'll close this issue, as the crash is caused by undefined behavior in the user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:59,usability,behavi,behavior,59,"I'll close this issue, as the crash is caused by undefined behavior in the user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10232:75,usability,user,user,75,"I'll close this issue, as the crash is caused by undefined behavior in the user code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10232
https://github.com/root-project/root/issues/10233:101,interoperability,specif,specify,101,"Hi @AlkaidCheng ,. thank you for the report, a fix is coming. In the meanwhile, the workaround is to specify the column names explicitly to Snapshot as you found out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:159,deployability,log,logic,159,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:35,reliability,doe,does,35,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:159,safety,log,logic,159,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:234,safety,input,input,234,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:159,security,log,logic,159,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:159,testability,log,logic,159,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:234,usability,input,input,234,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out. 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:188,availability,avail,available,188,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:121,deployability,build,builds,121,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:147,deployability,instal,install,147,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:223,deployability,patch,patch,223,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:229,deployability,releas,release,229,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:188,reliability,availab,available,188,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:95,safety,test,test,95,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:188,safety,avail,available,188,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:223,safety,patch,patch,223,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:188,security,availab,available,188,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:223,security,patch,patch,223,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10233:95,testability,test,test,95,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10233
https://github.com/root-project/root/issues/10238:32,usability,feedback,feedback,32,"Hi @klenze ,. thank you for the feedback, I tend to agree, my only doubt is that these days we don't expect the vast majority of users to have to compile ROOT from source, that's something for developers and contributors, who might want to checkout the full repo anyway. Why do grad students working on their laptops have to compile ROOT from source? (with that said, I think we would accept a PR that changes the commands as you suggest. Or maybe we can just mention it in a comment. There is a button the bottom-right of each page on our website which opens a new tab where you can suggest changes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:129,usability,user,users,129,"Hi @klenze ,. thank you for the feedback, I tend to agree, my only doubt is that these days we don't expect the vast majority of users to have to compile ROOT from source, that's something for developers and contributors, who might want to checkout the full repo anyway. Why do grad students working on their laptops have to compile ROOT from source? (with that said, I think we would accept a PR that changes the commands as you suggest. Or maybe we can just mention it in a comment. There is a button the bottom-right of each page on our website which opens a new tab where you can suggest changes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:414,usability,command,commands,414,"Hi @klenze ,. thank you for the feedback, I tend to agree, my only doubt is that these days we don't expect the vast majority of users to have to compile ROOT from source, that's something for developers and contributors, who might want to checkout the full repo anyway. Why do grad students working on their laptops have to compile ROOT from source? (with that said, I think we would accept a PR that changes the commands as you suggest. Or maybe we can just mention it in a comment. There is a button the bottom-right of each page on our website which opens a new tab where you can suggest changes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:81,deployability,build,building,81,"Thanks for commenting @eguiraud! @klenze, actually, if one is interested only in building from sources _once_, I would actually suggest `--depth=1`, which will create a shallow clone having only the latest commit in `latest-stable`. However, keep in mind that a `$ git pull` on that branch after a new release will, by default, unshallow the repository (as each commit in `latest-stable` has a second parent pointing to the commit-ish that references the latest tree, which will pull that object chain).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:302,deployability,releas,release,302,"Thanks for commenting @eguiraud! @klenze, actually, if one is interested only in building from sources _once_, I would actually suggest `--depth=1`, which will create a shallow clone having only the latest commit in `latest-stable`. However, keep in mind that a `$ git pull` on that branch after a new release will, by default, unshallow the repository (as each commit in `latest-stable` has a second parent pointing to the commit-ish that references the latest tree, which will pull that object chain).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:342,integrability,repositor,repository,342,"Thanks for commenting @eguiraud! @klenze, actually, if one is interested only in building from sources _once_, I would actually suggest `--depth=1`, which will create a shallow clone having only the latest commit in `latest-stable`. However, keep in mind that a `$ git pull` on that branch after a new release will, by default, unshallow the repository (as each commit in `latest-stable` has a second parent pointing to the commit-ish that references the latest tree, which will pull that object chain).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:342,interoperability,repositor,repository,342,"Thanks for commenting @eguiraud! @klenze, actually, if one is interested only in building from sources _once_, I would actually suggest `--depth=1`, which will create a shallow clone having only the latest commit in `latest-stable`. However, keep in mind that a `$ git pull` on that branch after a new release will, by default, unshallow the repository (as each commit in `latest-stable` has a second parent pointing to the commit-ish that references the latest tree, which will pull that object chain).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:23,deployability,updat,updated,23,Documentation has been updated accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:23,safety,updat,updated,23,Documentation has been updated accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:23,security,updat,updated,23,Documentation has been updated accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10238:0,usability,Document,Documentation,0,Documentation has been updated accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10238
https://github.com/root-project/root/issues/10239:265,reliability,doe,does,265,"I added @jolly-chen in the loop. The internal method [ROOT::Internal::TreeUtils::ExpandGlob](https://root.cern.ch/doc/master/namespaceROOT_1_1Internal_1_1TreeUtils.html#ad88089339eb9543b3e73479ae4fff483) resolves well the globbing, however the `TChain::Add` method does not. To be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:276,deployability,contain,contains,276,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:310,modifiability,paramet,parameters,310,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:448,testability,simpl,simply,448,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:448,usability,simpl,simply,448,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:268,security,token,token,268,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard. * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:4,testability,simpl,simple,4,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard. * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:4,usability,simpl,simple,4,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard. * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:21,usability,effectiv,effective,21,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard. * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:77,reliability,pra,pragmatic,77,@pcanal would you agree to the strategy of @vepadulano which foresees a very pragmatic way out?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:85,usability,support,support,85,"> In addition, some files can have ? as part of the file name. Technically we should support `\?` for that but if we don't for '*' or '[]' then we should not either for '?'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10239:126,safety,valid,valid,126,"> if the ? is followed exactly by .root or it is the last character in the string, then it's a wildcard. `file?suf.root` is a valid wildcard. So I would probably say ""if the ? is before the .root"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10239
https://github.com/root-project/root/issues/10240:35,reliability,pra,pragma,35,Did you intentionally used:. ```. #pragma link C++ class A;. ```. instead of. ```. #pragma link C++ class A+;. ```. ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:84,reliability,pra,pragma,84,Did you intentionally used:. ```. #pragma link C++ class A;. ```. instead of. ```. #pragma link C++ class A+;. ```. ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:189,availability,error,error,189,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:535,availability,error,error,535,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:285,deployability,updat,update,285,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2,integrability,discover,discovered,2,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:195,integrability,messag,message,195,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:541,integrability,messag,message,541,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2,interoperability,discover,discovered,2,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:195,interoperability,messag,message,195,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:541,interoperability,messag,message,541,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:189,performance,error,error,189,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:384,performance,time,time,384,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:535,performance,error,error,535,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:21,safety,accid,accident,21,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:189,safety,error,error,189,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:285,safety,updat,update,285,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:535,safety,error,error,535,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:285,security,updat,update,285,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:2,usability,discov,discovered,2,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:189,usability,error,error,189,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/issues/10240:535,usability,error,error,535,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10240
https://github.com/root-project/root/pull/10241:6,availability,failur,failures,6,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:6,deployability,fail,failures,6,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:78,deployability,build,build,78,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:6,performance,failur,failures,6,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10241:6,reliability,fail,failures,6,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10241
https://github.com/root-project/root/pull/10243:223,safety,test,tests,223,I just encountered it while working on other stuff. It is the only remaining usage of the `/` token to separate file name and tree name in the dataframe library. I understand it's a minimal change and if it breaks existing tests it may be not worthwhile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:94,security,token,token,94,I just encountered it while working on other stuff. It is the only remaining usage of the `/` token to separate file name and tree name in the dataframe library. I understand it's a minimal change and if it breaks existing tests it may be not worthwhile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:164,testability,understand,understand,164,I just encountered it while working on other stuff. It is the only remaining usage of the `/` token to separate file name and tree name in the dataframe library. I understand it's a minimal change and if it breaks existing tests it may be not worthwhile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:223,testability,test,tests,223,I just encountered it while working on other stuff. It is the only remaining usage of the `/` token to separate file name and tree name in the dataframe library. I understand it's a minimal change and if it breaks existing tests it may be not worthwhile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:182,usability,minim,minimal,182,I just encountered it while working on other stuff. It is the only remaining usage of the `/` token to separate file name and tree name in the dataframe library. I understand it's a minimal change and if it breaks existing tests it may be not worthwhile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:133,reliability,doe,does,133,Users won't expect the `?#` syntax. IIRC we use it internally because otherwise TChain gets the tree name wrong in case the filename does not end in `.root`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:0,usability,User,Users,0,Users won't expect the `?#` syntax. IIRC we use it internally because otherwise TChain gets the tree name wrong in case the filename does not end in `.root`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:53,security,expos,exposed,53,"Yes indeed. Ok I understand this is also information exposed to users, fair enough. This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:17,testability,understand,understand,17,"Yes indeed. Ok I understand this is also information exposed to users, fair enough. This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:64,usability,user,users,64,"Yes indeed. Ok I understand this is also information exposed to users, fair enough. This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10243:96,usability,close,closed,96,"Yes indeed. Ok I understand this is also information exposed to users, fair enough. This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10243
https://github.com/root-project/root/pull/10244:40,safety,test,test,40,Adding a sibling PR in roottest to also test the case of a single TTree and a single friend TTree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:40,testability,test,test,40,Adding a sibling PR in roottest to also test the case of a single TTree and a single friend TTree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10244:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10244
https://github.com/root-project/root/pull/10245:47,safety,test,test,47,https://github.com/cms-sw/root/pull/166 should test this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:47,testability,test,test,47,https://github.com/cms-sw/root/pull/166 should test this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:18,safety,test,tests,18,"@vgvassilev , cms tests passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:18,testability,test,tests,18,"@vgvassilev , cms tests passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:120,deployability,releas,releases,120,"@smuzaffar, thanks a lot for doing these checks they are really helpful for us - and they remove a lot of stress during releases ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:64,usability,help,helpful,64,"@smuzaffar, thanks a lot for doing these checks they are really helpful for us - and they remove a lot of stress during releases ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10245:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10245
https://github.com/root-project/root/pull/10249:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10249
https://github.com/root-project/root/pull/10249:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10249
https://github.com/root-project/root/pull/10249:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10249
https://github.com/root-project/root/pull/10249:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10249
https://github.com/root-project/root/issues/10254:16,deployability,fail,fails,16,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:174,deployability,fail,failing,174,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:239,deployability,manag,manage,239,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:135,energy efficiency,load,loaded,135,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:239,energy efficiency,manag,manage,239,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:466,energy efficiency,load,loaded,466,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:34,performance,I/O,I/O,34,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:135,performance,load,loaded,135,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:250,performance,memor,memory,250,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:466,performance,load,loaded,466,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:16,reliability,fail,fails,16,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:174,reliability,fail,failing,174,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:239,safety,manag,manage,239,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:103,usability,user,user,103,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/issues/10254:250,usability,memor,memory,250,"The second case fails because the I/O representation of the map is different from the compiler and the user is requested the former to loaded in the later. The first case is failing to warn because `TTreeReader` is . * asking the TTree to manage the memory (in which case, for example, `TTreeFormula` can still read/use the data). * unconditionally casting the address to the compile form. The solution is to add code to TTreeReader to check if the type is properly loaded (see code in `TTree::SetBranchAddress[Impl]`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10254
https://github.com/root-project/root/pull/10255:27,deployability,build,builds,27,Merging before the jenkins builds to try to catch today's nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10255
https://github.com/root-project/root/pull/10256:104,deployability,fail,failing,104,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:141,integrability,sub,subsequent,141,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:104,reliability,fail,failing,104,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:4,safety,test,test,4,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:40,safety,test,test,40,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:4,testability,test,test,4,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/pull/10256:40,testability,test,test,40,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10256
https://github.com/root-project/root/issues/10259:365,integrability,batch,batch,365,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:64,interoperability,specif,specific,64,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:365,performance,batch,batch,365,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:482,security,modif,modifications,482,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:5,usability,document,documentation,5,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:98,usability,widget,widgets,98,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:388,usability,interact,interactive,388,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:532,usability,clear,clear,532,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10259:606,usability,support,supported,606,"Yes, documentation is not there. Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel. Major settings are mentioned here:. https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html . See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode. For normal interactive mode any modern web browser should do the job. But in fact, most of them are just modifications of chrome - beside firefox. . To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10259
https://github.com/root-project/root/issues/10260:23,reliability,doe,does,23,It is just title which does not normally handled in Safari. . After #10344 it will be no longer showed. Thanks for pointing this out!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10260
https://github.com/root-project/root/pull/10263:727,deployability,observ,observables,727,"To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. Another ""fix"" that also appears to works:. ```diff. diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. index 0a810d1a4b..6922d6151f 100644. --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. using namespace ROOT::Experimental;. +constexpr const char *RooNLLVarNew::weightVarName;. +. namespace {. std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. ```. Which looks odd for `constexpr`, to be honest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:78,interoperability,standard,standard,78,"To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. Another ""fix"" that also appears to works:. ```diff. diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. index 0a810d1a4b..6922d6151f 100644. --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. using namespace ROOT::Experimental;. +constexpr const char *RooNLLVarNew::weightVarName;. +. namespace {. std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. ```. Which looks odd for `constexpr`, to be honest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:527,performance,time,times,527,"To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. Another ""fix"" that also appears to works:. ```diff. diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. index 0a810d1a4b..6922d6151f 100644. --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. using namespace ROOT::Experimental;. +constexpr const char *RooNLLVarNew::weightVarName;. +. namespace {. std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. ```. Which looks odd for `constexpr`, to be honest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:22,testability,understand,understand,22,"To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. Another ""fix"" that also appears to works:. ```diff. diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. index 0a810d1a4b..6922d6151f 100644. --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. using namespace ROOT::Experimental;. +constexpr const char *RooNLLVarNew::weightVarName;. +. namespace {. std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. ```. Which looks odd for `constexpr`, to be honest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:727,testability,observ,observables,727,"To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. Another ""fix"" that also appears to works:. ```diff. diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. index 0a810d1a4b..6922d6151f 100644. --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. using namespace ROOT::Experimental;. +constexpr const char *RooNLLVarNew::weightVarName;. +. namespace {. std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. ```. Which looks odd for `constexpr`, to be honest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:188,safety,accid,accidentally,188,"Hi, thanks for this fix! Good that you found a quick arcane solution :+1:. Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:482,interoperability,semant,semantics,482,"> Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to *understand* `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:176,reliability,doe,doesn,176,"> Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to *understand* `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:115,safety,accid,accidentally,115,"> Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to *understand* `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:285,testability,understand,understand,285,"> Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to *understand* `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:184,usability,help,help,184,"> Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to *understand* `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:773,deployability,observ,observables,773,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:80,interoperability,standard,standard,80,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:937,interoperability,standard,standard,937,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:551,performance,time,times,551,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:24,testability,understand,understand,24,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:773,testability,observ,observables,773,"> To be honest, I don't understand what the compiler is doing here and what the standard mandates here, maybe @Axel-Naumann or @jalopezg-r00t can enlighten me here. > . > Another ""fix"" that also appears to works:. > . > ```diff. > diff --git a/roofit/roofitcore/src/RooNLLVarNew.cxx b/roofit/roofitcore/src/RooNLLVarNew.cxx. > index 0a810d1a4b..6922d6151f 100644. > --- a/roofit/roofitcore/src/RooNLLVarNew.cxx. > +++ b/roofit/roofitcore/src/RooNLLVarNew.cxx. > @@ -40,6 +40,8 @@ functions from `RooBatchCompute` library to provide faster computation times. > . > using namespace ROOT::Experimental;. > . > +constexpr const char *RooNLLVarNew::weightVarName;. > +. > namespace {. > . > std::unique_ptr<RooAbsReal> createRangeNormTerm(RooAbsPdf const &pdf, RooArgSet const &observables,. > ```. > . > Which looks odd for `constexpr`, to be honest... Even if `constexpr` static member declarations can be initialized in place, I think the standard mandates also a definition if the name is odr-used (EDIT: required only until C++17). See https://en.cppreference.com/w/cpp/language/static, Section ""Constant static members"". :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1043,availability,state,statement,1043,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:966,energy efficiency,core,core,966,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1043,integrability,state,statement,1043,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:490,interoperability,semant,semantics,490,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:184,reliability,doe,doesn,184,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:117,safety,accid,accidentally,117,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:834,safety,accid,accidentally,834,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1090,safety,except,exception,1090,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1100,safety,safe,safety,1100,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1110,safety,compl,complex,1110,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1110,security,compl,complex,1110,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1224,security,iso,isocpp,1224,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:192,usability,help,help,192,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:971,usability,guid,guidelines,971,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:1000,usability,prefer,preferred,1000,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue. > . > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:160,availability,state,statement,160,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:83,energy efficiency,core,core,83,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:160,integrability,state,statement,160,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:207,safety,except,exception,207,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:217,safety,safe,safety,217,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:227,safety,compl,complex,227,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:227,security,compl,complex,227,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:88,usability,guid,guidelines,88,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:117,usability,prefer,preferred,117,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:334,usability,guid,guideline,334,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:68,safety,except,exception,68,"I don't see why the same reasons of being more concise and ensuring exception safety should not apply in this case. And move assignment and move construction of unique pointers should be equally cheap, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:78,safety,safe,safety,78,"I don't see why the same reasons of being more concise and ensuring exception safety should not apply in this case. And move assignment and move construction of unique pointers should be equally cheap, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:193,energy efficiency,optim,optimizations,193,"There is no issue of exception safety here, it's only a `new` that can work or not. > And move assignment and move construction of unique pointers should be equally cheap, right? With compiler optimizations yes, but why create unnecessary work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:193,performance,optimiz,optimizations,193,"There is no issue of exception safety here, it's only a `new` that can work or not. > And move assignment and move construction of unique pointers should be equally cheap, right? With compiler optimizations yes, but why create unnecessary work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:21,safety,except,exception,21,"There is no issue of exception safety here, it's only a `new` that can work or not. > And move assignment and move construction of unique pointers should be equally cheap, right? With compiler optimizations yes, but why create unnecessary work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:31,safety,safe,safety,31,"There is no issue of exception safety here, it's only a `new` that can work or not. > And move assignment and move construction of unique pointers should be equally cheap, right? With compiler optimizations yes, but why create unnecessary work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:29,energy efficiency,optim,optimization,29,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:29,performance,optimiz,optimization,29,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:152,performance,memor,memory,152,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:63,safety,avoid,avoid,63,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:133,safety,risk,risk,133,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:133,security,risk,risk,133,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:120,usability,minim,minimize,120,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:152,usability,memor,memory,152,"RooFit is never used without optimization flags, and I want to avoid calling `new` and `delete` explicitly in RooFit to minimize the risk of unintended memory leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/pull/10263:254,safety,accid,accidentally,254,"> Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10263
https://github.com/root-project/root/issues/10264:97,usability,navigat,navigation,97,I now actually found this but it is very hidden. It may be usefull to split the settings for the navigation tree on the left and for plotting. Keeping this ticket open for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10264
https://github.com/root-project/root/issues/10264:29,usability,dialog,dialog,29,"Yes, it ""hidden"" in settings dialog. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10264
https://github.com/root-project/root/issues/10265:182,energy efficiency,draw,draw,182,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10265:111,interoperability,specif,specify,111,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10265:150,reliability,doe,does,150,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10265:15,usability,support,supported,15,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10265:96,usability,dialog,dialog,96,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10265:223,usability,feedback,feedback,223,"Yes, it is not supported up to now. In #10344 I implement exactly this feature. In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10265
https://github.com/root-project/root/issues/10266:81,interoperability,coordinat,coordinates,81,"I think one needs to add a protection only for the case that the points have all coordinates with the same value. . For example: . ```. double x[] = {1,2,3,4};. double y[] = {1,2,3,4};. double z[] = {1,1,1,1,1};. ROOT::Math::Delaunay2D d(4,x,y,z);. d.FindAllTriangles(); . std::cout << ""number of triangles "" << d.NumberOfTriangles() << std::endl;. ```. will not find any triangles and will not hang. . But if x or y have the same values, e.g. `x[] = {1,1,1,1}` or `y[] = {1,1,1,1}` the code will hang for ever .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10266
https://github.com/root-project/root/pull/10268:510,usability,support,support,510,"```. TBranchElement *be = dynamic_cast<TBranchElement*>(branch_ptr);. bool isarray = (be && be->GetInfo()->GetElement(be->GetID())->GetArrayDim() > 0);. ```. and. ```. if (!be) // && and !dynamic_cast<TBranchObject*>(branch_ptr). {. bool isarray = branch->GetListOfLeaves()->GetEntries() == 1 && (branch->GetListOfLeaves()->At(0)->GetLeafCount() != nullptr || branch->GetListOfLeaves()->At(0)->GetLenStatic() > 1);. }. ```. and for TBranchObject, we probably need to look at `TLeafObject::GetTypeName` (or not support it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:45,deployability,log,logic,45,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:37,energy efficiency,current,current,37,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:20,safety,compl,complex,20,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:45,safety,log,logic,45,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:20,security,compl,complex,20,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:45,security,log,logic,45,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:45,testability,log,logic,45,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:702,availability,Error,Error,702,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:838,availability,Error,Error,838,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1056,availability,error,error,1056,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:803,deployability,contain,contains,803,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:899,deployability,contain,contains,899,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:364,integrability,Filter,Filter,364,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:429,integrability,Filter,Filter,429,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:668,interoperability,share,shared,668,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:702,performance,Error,Error,702,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:838,performance,Error,Error,838,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1056,performance,error,error,1056,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:948,reliability,doe,does,948,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:702,safety,Error,Error,702,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:838,safety,Error,Error,838,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1056,safety,error,error,1056,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1219,safety,safe,safest,1219,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:702,usability,Error,Error,702,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:838,usability,Error,Error,838,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1056,usability,error,error,1056,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1117,usability,statu,status,1117,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:1485,usability,help,help,1485,"@pcanal I quickly tried with `std::array<int, 4>` but it looks like TTreeReaderArray has trouble with that type:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <array>. int foo() {. {. std::array<int, 4> a{1, 2, 3, 4};. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""a"", &a);. t.Fill();. t.Write();. }. auto c = ROOT::RDataFrame(""t"", ""f.root""). .Filter([](std::array<int, 4> &a) { return a[0] == 1; }, {""a""}). .Filter(. [](ROOT::RVecI &v) {. return v.size() == 4 && v[0] == 1 && v[3] == 4;. },. {""a""}). .Count(). .GetValue();. return c;. }. ```. yields. ```. /tmp root -l -b -q foo.cpp+. Processing foo.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./foo_cpp.so. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch a: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch a contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. I'll put it on my to-do list to investigate further. As I mentioned above the safest way to fix this would be to switch from ""if this is not a Define, or a std::vector, or an RVec, or a TClonesArray, then it must be a C-style array and it needs special care"" to ""if this is not a C-style array, then no special care needed"", but even with your help I could not figure out how to code ""is this a C-style array?"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:316,availability,error,error,316,"Finally got around to check this and the situation is pretty much ok. std::vector, std::array and std::deque branches can all be written out from a Snapshot correctly as those same types. Only std::vector can be written out as an RVec as well, with Snapshot doing the conversion on the fly. There are a few warts in error reporting for unsupported cases but that's another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:268,interoperability,convers,conversion,268,"Finally got around to check this and the situation is pretty much ok. std::vector, std::array and std::deque branches can all be written out from a Snapshot correctly as those same types. Only std::vector can be written out as an RVec as well, with Snapshot doing the conversion on the fly. There are a few warts in error reporting for unsupported cases but that's another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:316,performance,error,error,316,"Finally got around to check this and the situation is pretty much ok. std::vector, std::array and std::deque branches can all be written out from a Snapshot correctly as those same types. Only std::vector can be written out as an RVec as well, with Snapshot doing the conversion on the fly. There are a few warts in error reporting for unsupported cases but that's another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
https://github.com/root-project/root/pull/10268:316,safety,error,error,316,"Finally got around to check this and the situation is pretty much ok. std::vector, std::array and std::deque branches can all be written out from a Snapshot correctly as those same types. Only std::vector can be written out as an RVec as well, with Snapshot doing the conversion on the fly. There are a few warts in error reporting for unsupported cases but that's another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10268
